{"version":3,"sources":["webpack:///static/js/0.c41e726a3202dec4448d.js","webpack:///./~/_echarts@3.7.1@echarts/lib/data/List.js","webpack:///./~/_echarts@3.7.1@echarts/lib/util/model.js","webpack:///./~/_echarts@3.7.1@echarts/lib/model/mixin/textStyle.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/Path.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/shape/Rect.js","webpack:///./~/_zrender@3.6.1@zrender/lib/core/matrix.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/CompoundPath.js","webpack:///./~/_core-js@2.5.1@core-js/library/modules/_core.js?6d1a","webpack:///./~/_echarts@3.7.1@echarts/lib/model/globalDefault.js","webpack:///src/page/myEarnings/myEarnings.vue","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/shape/Line.js","webpack:///./~/_zrender@3.6.1@zrender/lib/core/LRU.js","webpack:///./~/_echarts@3.7.1@echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./~/_echarts@3.7.1@echarts/lib/component/axisPointer/globalListener.js","webpack:///./~/_echarts@3.7.1@echarts/lib/scale/Ordinal.js","webpack:///./~/_echarts@3.7.1@echarts/lib/coord/Axis.js","webpack:///./~/_echarts@3.7.1@echarts/lib/util/symbol.js","webpack:///./~/_zrender@3.6.1@zrender/lib/contain/text.js","webpack:///./~/_zrender@3.6.1@zrender/lib/animation/Animator.js","webpack:///./~/_echarts@3.7.1@echarts/lib/CoordinateSystem.js","webpack:///./~/_zrender@3.6.1@zrender/lib/core/vector.js","webpack:///./~/_echarts@3.7.1@echarts/lib/model/OptionManager.js","webpack:///./~/_echarts@3.7.1@echarts/lib/chart/helper/Symbol.js","webpack:///./~/_echarts@3.7.1@echarts/lib/loading/default.js","webpack:///./~/_echarts@3.7.1@echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./~/_zrender@3.6.1@zrender/lib/contain/util.js","webpack:///./~/_core-js@2.5.1@core-js/library/modules/es6.object.define-property.js?041d","webpack:///./src/page/myEarnings/myEarnings.vue?2743","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/LinearGradient.js","webpack:///src/components/header/header.vue?8baa","webpack:///./src/components/tab/tab.vue?72de","webpack:///./~/_core-js@2.5.1@core-js/library/modules/_to-primitive.js?6a37","webpack:///./~/_zrender@3.6.1@zrender/lib/core/bbox.js","webpack:///./~/_echarts@3.7.1@echarts/lib/util/number.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/shape/Polyline.js","webpack:///./~/_echarts@3.7.1@echarts/lib/model/Series.js","webpack:///./src/components/tab/tab.vue?608e","webpack:///./src/components/tab/tab.vue?e93f","webpack:///./~/_echarts@3.7.1@echarts/lib/coord/cartesian/Axis2D.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/_echarts@3.7.1@echarts/lib/coord/axisDefault.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/Image.js","webpack:///./~/_echarts@3.7.1@echarts/lib/component/axisPointer.js","webpack:///./~/_echarts@3.7.1@echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/Text.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/helper/poly.js","webpack:///./~/_echarts@3.7.1@echarts/lib/scale/Interval.js","webpack:///./~/_echarts@3.7.1@echarts/lib/model/Model.js","webpack:///./~/_echarts@3.7.1@echarts/lib/component/gridSimple.js","webpack:///./~/_echarts@3.7.1@echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./src/components/tab/tab.vue?0843","webpack:///./~/_echarts@3.7.1@echarts/lib/component/axisPointer/viewHelper.js","webpack:///./~/_echarts@3.7.1@echarts/lib/view/Component.js","webpack:///./~/_echarts@3.7.1@echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/_echarts@3.7.1@echarts/lib/helper.js","webpack:///./~/_zrender@3.6.1@zrender/lib/dom/HandlerProxy.js","webpack:///./~/_zrender@3.6.1@zrender/lib/mixin/Eventful.js","webpack:///./~/_zrender@3.6.1@zrender/lib/core/util.js","webpack:///./~/_echarts@3.7.1@echarts/lib/chart/helper/SymbolDraw.js","webpack:///./~/_vue-loader@13.0.4@vue-loader/lib/component-normalizer.js?2671","webpack:///./~/_zrender@3.6.1@zrender/lib/Painter.js","webpack:///./~/_echarts@3.7.1@echarts/lib/model/mixin/areaStyle.js","webpack:///./~/_echarts@3.7.1@echarts/lib/coord/axisHelper.js","webpack:///./~/_echarts@3.7.1@echarts/lib/visual/symbol.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./~/_echarts@3.7.1@echarts/lib/util/throttle.js","webpack:///./~/_zrender@3.6.1@zrender/lib/core/curve.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/Displayable.js","webpack:///./~/_zrender@3.6.1@zrender/lib/core/guid.js","webpack:///./~/_echarts@3.7.1@echarts/lib/util/format.js","webpack:///./~/_core-js@2.5.1@core-js/library/modules/_object-dp.js?1170","webpack:///./~/_echarts@3.7.1@echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/Gradient.js","webpack:///./~/_zrender@3.6.1@zrender/lib/zrender.js","webpack:///./~/_echarts@3.7.1@echarts/lib/scale/Scale.js","webpack:///./~/_zrender@3.6.1@zrender/lib/contain/line.js","webpack:///./~/_core-js@2.5.1@core-js/library/modules/_descriptors.js?f2b8","webpack:///./~/_echarts@3.7.1@echarts/lib/model/mixin/boxLayout.js","webpack:///./src/page/myEarnings/myEarnings.vue?69ae","webpack:///./~/_echarts@3.7.1@echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./~/_echarts@3.7.1@echarts/lib/model/Global.js","webpack:///./~/_echarts@3.7.1@echarts/lib/component/title.js","webpack:///./~/_zrender@3.6.1@zrender/lib/Element.js","webpack:///./~/_zrender@3.6.1@zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/_echarts@3.7.1@echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/RadialGradient.js","webpack:///./~/_core-js@2.5.1@core-js/library/modules/_property-desc.js?adb7","webpack:///./~/_zrender@3.6.1@zrender/lib/mixin/Draggable.js","webpack:///./~/_echarts@3.7.1@echarts/lib/util/clazz.js","webpack:///./src/components/header/header.vue?bd18","webpack:///./~/_echarts@3.7.1@echarts/lib/model/mixin/itemStyle.js","webpack:///./~/_echarts@3.7.1@echarts/lib/component/axisPointer/modelHelper.js","webpack:///./~/_zrender@3.6.1@zrender/lib/config.js","webpack:///./~/_zrender@3.6.1@zrender/lib/animation/easing.js","webpack:///./~/_echarts@3.7.1@echarts/lib/visual/seriesColor.js","webpack:///./~/_echarts@3.7.1@echarts/lib/util/layout.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/shape/Sector.js","webpack:///./~/_zrender@3.6.1@zrender/lib/core/timsort.js","webpack:///./~/_zrender@3.6.1@zrender/lib/mixin/Animatable.js","webpack:///./~/_zrender@3.6.1@zrender/lib/animation/Animation.js","webpack:///./~/_echarts@3.7.1@echarts/lib/scale/Time.js","webpack:///./~/_zrender@3.6.1@zrender/lib/contain/path.js","webpack:///./~/_echarts@3.7.1@echarts/lib/coord/cartesian/Cartesian.js","webpack:///./~/_zrender@3.6.1@zrender/lib/Handler.js","webpack:///./~/_core-js@2.5.1@core-js/library/modules/_is-object.js?7b2e","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/Style.js","webpack:///./~/_echarts@3.7.1@echarts/lib/chart/line/poly.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/helper/image.js","webpack:///./~/_qs@6.5.0@qs/lib/formats.js?09d7","webpack:///./~/_core-js@2.5.1@core-js/library/modules/_fails.js?73e2","webpack:///./~/_echarts@3.7.1@echarts/lib/chart/helper/labelHelper.js","webpack:///./~/_echarts@3.7.1@echarts/lib/coord/cartesian/AxisModel.js","webpack:///./~/_zrender@3.6.1@zrender/lib/core/BoundingRect.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/shape/Circle.js","webpack:///./~/_echarts@3.7.1@echarts/lib/util/graphic.js","webpack:///./~/_zrender@3.6.1@zrender/lib/Storage.js","webpack:///./~/_babel-runtime@6.26.0@babel-runtime/helpers/defineProperty.js?e4a0","webpack:///./~/_echarts@3.7.1@echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/_echarts@3.7.1@echarts/lib/data/helper/completeDimensions.js","webpack:///./~/_echarts@3.7.1@echarts/lib/component/tooltip.js","webpack:///./~/_echarts@3.7.1@echarts/lib/component/axis.js","webpack:///./~/_echarts@3.7.1@echarts/lib/coord/cartesian/GridModel.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/shape/BezierCurve.js","webpack:///./src/components/header/header.vue?6af3","webpack:///./~/_echarts@3.7.1@echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/_echarts@3.7.1@echarts/lib/echarts.js","webpack:///./~/_echarts@3.7.1@echarts/lib/view/Chart.js","webpack:///./~/_zrender@3.6.1@zrender/lib/contain/cubic.js","webpack:///src/components/tab/tab.vue","webpack:///./~/_qs@6.5.0@qs/lib/index.js?5028","webpack:///./~/_echarts@3.7.1@echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./~/_echarts@3.7.1@echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./~/_echarts@3.7.1@echarts/lib/util/component.js","webpack:///./~/_zrender@3.6.1@zrender/lib/tool/path.js","webpack:///./~/_core-js@2.5.1@core-js/library/modules/_ie8-dom-define.js?0965","webpack:///./~/_core-js@2.5.1@core-js/library/modules/_export.js?d80e","webpack:///./~/_echarts@3.7.1@echarts/lib/component/axis/AxisView.js","webpack:///./~/_core-js@2.5.1@core-js/library/modules/_an-object.js?6f00","webpack:///./~/_zrender@3.6.1@zrender/lib/core/event.js","webpack:///./~/_zrender@3.6.1@zrender/lib/tool/color.js","webpack:///./~/_echarts@3.7.1@echarts/lib/model/Component.js","webpack:///./~/_zrender@3.6.1@zrender/lib/mixin/Transformable.js","webpack:///./~/_echarts@3.7.1@echarts/lib/model/mixin/colorPalette.js","webpack:///./~/_qs@6.5.0@qs/lib/utils.js?84aa","webpack:///./~/_qs@6.5.0@qs/lib/stringify.js?e430","webpack:///./src/components/header/header.vue?2f6b","webpack:///./src/components/header/header.vue?6602","webpack:///./src/service/getData.js?8bce","webpack:///./~/_echarts@3.7.1@echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/_zrender@3.6.1@zrender/lib/animation/Clip.js","webpack:///./~/_zrender@3.6.1@zrender/lib/contain/arc.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/shape/Ring.js","webpack:///./~/_echarts@3.7.1@echarts/lib/model/mixin/lineStyle.js","webpack:///./~/_core-js@2.5.1@core-js/library/modules/_dom-create.js?8077","webpack:///./~/_zrender@3.6.1@zrender/lib/contain/quadratic.js","webpack:///./~/_core-js@2.5.1@core-js/library/modules/_global.js?3bb9","webpack:///./~/_babel-runtime@6.26.0@babel-runtime/core-js/object/define-property.js?8509","webpack:///./~/_zrender@3.6.1@zrender/lib/core/env.js","webpack:///./~/_echarts@3.7.1@echarts/lib/scale/Log.js","webpack:///./~/_echarts@3.7.1@echarts/lib/chart/line/LineView.js","webpack:///./~/_echarts@3.7.1@echarts/lib/chart/line.js","webpack:///./~/_echarts@3.7.1@echarts/lib/layout/points.js","webpack:///./~/_zrender@3.6.1@zrender/lib/core/log.js","webpack:///./~/_core-js@2.5.1@core-js/library/modules/_hide.js?c07a","webpack:///./~/_zrender@3.6.1@zrender/lib/contain/windingLine.js","webpack:///./~/_echarts@3.7.1@echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./~/_echarts@3.7.1@echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./src/page/myEarnings/myEarnings.vue","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/Pattern.js","webpack:///./~/_zrender@3.6.1@zrender/lib/tool/transformPath.js","webpack:///./~/_echarts@3.7.1@echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/_zrender@3.6.1@zrender/lib/Layer.js","webpack:///./~/_zrender@3.6.1@zrender/lib/container/Group.js","webpack:///./~/_echarts@3.7.1@echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/_core-js@2.5.1@core-js/library/modules/_ctx.js?36a7","webpack:///./~/_echarts@3.7.1@echarts/lib/component/axis/CartesianAxisView.js","webpack:///./~/_echarts@3.7.1@echarts/lib/scale/helper.js","webpack:///./~/_core-js@2.5.1@core-js/library/fn/object/define-property.js?fe2d","webpack:///./~/_echarts@3.7.1@echarts/lib/chart/line/LineSeries.js","webpack:///./~/_echarts@3.7.1@echarts/lib/coord/axisModelCreator.js","webpack:///./src/page/myEarnings/myEarnings.vue?6df2","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/shape/Arc.js","webpack:///./~/_zrender@3.6.1@zrender/lib/core/GestureMgr.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/helper/text.js","webpack:///./~/_core-js@2.5.1@core-js/library/modules/_a-function.js?b2e9","webpack:///./~/_echarts@3.7.1@echarts/lib/data/DataDiffer.js","webpack:///./~/_zrender@3.6.1@zrender/lib/core/PathProxy.js","webpack:///./~/_qs@6.5.0@qs/lib/parse.js?78a6","webpack:///./~/_echarts@3.7.1@echarts/lib/coord/cartesian/Grid.js","webpack:///./~/_echarts@3.7.1@echarts/lib/processor/dataSample.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/shape/Polygon.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/mixin/RectText.js","webpack:///./~/_echarts@3.7.1@echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./~/_zrender@3.6.1@zrender/lib/graphic/helper/roundRect.js","webpack:///./~/_echarts@3.7.1@echarts/lib/ExtensionAPI.js"],"names":["webpackJsonp","++G3","module","exports","__webpack_require__","global","transferProperties","a","b","zrUtil","each","TRANSFERABLE_PROPERTIES","concat","__wrappedMethods","propName","hasOwnProperty","DefaultDataProvider","dataArray","this","_array","normalizeDimensions","dimensions","isArray","cloneListForMapAndSample","original","excludeDimensions","allDimensions","list","List","map","getDimensionInfo","hostModel","storage","_storage","originalStorage","i","length","dim","dimStore","indexOf","constructor","globalObj","window","Float64Array","Array","Int32Array","dataCtors","float","int","ordinal","number","time","Model","DataDiffer","modelUtil","isObject","prototype","pure","count","getItem","idx","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","name","coordDim","coordDimIndex","stackable","type","otherDims","push","_dimensionInfos","dataType","indices","_nameList","_idList","_optionModels","stackedOn","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","_extent","listProto","hasItemOption","getDimension","isNaN","clone","initData","data","nameList","dimValueGetter","isDataArray","__DEV__","Error","nameDimIdx","dimensionInfoMap","size","idList","nameRepeatCount","dimInfo","itemName","DataCtor","self","dataItem","dimName","dataIndex","dimIndex","value","getDataItemValue","isDataItemOption","converDataValue","k","id","get","stack","NaN","stackedValue","getValues","values","len","hasValue","getDataExtent","filter","dimData","dimExtent","min","Infinity","max","getSum","sum","rawIndex","indexOfName","indexOfRawIndex","rawDataIndex","left","right","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","Number","MAX_VALUE","minDiff","diff","dist","Math","abs","getRawIndex","rawIdx","getRawDataItem","getName","getId","dims","cb","context","dimSize","call","apply","filterSelf","newIndices","keep","mapArray","result","arguments","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","floor","getItemModel","ecModel","otherList","val","otherIdList","getVisual","key","visual","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","layout","merge","extend","clearItemLayouts","getItemVisual","ignoreParent","itemVisual","setItemVisual","clearAllVisual","setItemDataAndSeriesIndex","child","seriesIndex","setItemGraphicEl","el","traverse","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","slice","wrapMethod","methodName","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","+Qey","has","obj","prop","formatUtil","nubmerUtil","normalizeToArray","defaultEmphasis","opt","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","TEXT_STYLE_OPTIONS","dimType","parseDate","createDataFormatModel","model","mixin","dataFormatMixin","mainType","subType","getData","getDataParams","rawValue","getRawValue","itemOpt","color","componentType","componentSubType","seriesType","seriesId","seriesName","marker","getTooltipMarker","$vars","getFormattedLabel","status","labelProp","itemModel","params","formatter","formatTpl","formatTooltip","noop","mappingToExists","exists","newCptOptions","index","exist","cptOption","option","isIdInner","makeIdAndName","mapResult","idMap","createHashMap","item","existCpt","set","assert","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","payload","dataIndexInside","makeGetter","hostObj","parseFinder","finder","isString","defaultMainType","parsedKey","match","queryType","toLowerCase","includeMainTypes","queryParam","models","queryComponents","dataDimToCoordDim","dataDim","dimItem","coordDimToDataDim","otherDimToDataDim","otherDim","+Ziq","textContain","graphicUtil","PATH_COLOR","getTextColor","isEmphasis","getShallow","getFont","fontStyle","fontWeight","fontSize","fontFamily","getTextRect","text","getBoundingRect","/Qyl","interpolate","p0","p1","p2","p3","t","t2","t3","v0","v1","vec2","points","isLoop","ret","distance","segs","pos","w","w2","w3","/wKD","Path","opts","Displayable","path","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","style","hasStroke","hasFill","fill","stroke","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","bind","setTransform","__dirty","rect","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","scale","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","shape","rebuildPath","restoreTransform","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","copy","lineWidth","lineScale","strokeNoScale","getLineScale","width","height","x","y","contain","localPos","transformCoordToLocal","pathData","containStroke","dirty","dirtyPath","__zr","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","m","transform","sqrt","defaults","Sub","extendFrom","defaultShape","thisShape","init","inherits","0KpF","roundRectHelper","r","closePath","0TlH","ArrayCtor","Float32Array","matrix","create","out","identity","mul","m1","m2","out0","out1","out2","out3","out4","out5","translate","v","rotate","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","invert","det","0U6q","paths","_updatePathDirty","beforeBrush","afterBrush","0nnt","core","version","__e","0oBF","platform","navigator","textStyle","blendMode","animation","animationDuration","animationDurationUpdate","animationEasing","animationEasingUpdate","animationThreshold","progressiveThreshold","progressive","hoverLayerThreshold","useUTC","102j","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__components_header_header__","__WEBPACK_IMPORTED_MODULE_1__components_tab_tab__","__WEBPACK_IMPORTED_MODULE_2__service_getData__","echarts","components","tab-view","header-view","title","fixed","routerName","chartsList","detailsList","chartXList","chartYList","echartOption","myChart","tabId","days","tabAction","categoryName","created","$route","localStorage","prev","getProfitListData","mounted","getChartData","methods","setting","param","$router","setparams","_this","then","rep","takeTime","joyScore","drawLine","setOption","xAxis","series","hideLoading","catch","$toast","changeTab","document","getElementById","backgroundColor","tooltip","trigger","grid","top","bottom","boundaryGap","axisLine","show","onZero","axisLabel","axisTick","yAxis","splitLine","lineStyle","calculable","smooth","sampling","itemStyle","areaStyle","showLoading","1j0N","x1","y1","x2","y2","percent","moveTo","lineTo","pointAt","p","2Ttr","LinkedList","head","tail","_len","linkedListProto","insert","entry","Entry","insertEntry","next","remove","clear","LRU","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","put","removed","leastUsedEntry","2qdY","sign","getStackedOnPoint","coordSys","stackedOnSameSign","baseAxis","getBaseAxis","valueAxis","getOtherAxis","valueStart","getExtent","valueDim","baseDataOffset","stackedData","dataToPoint","diffData","oldData","newData","diffResult","add","cmd","update","newIdx","oldIdx","idx1","execute","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","nextPt","sort","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","current","stackedOnCurrent","stackedOnNext","36nW","initGlobalListeners","zr","api","useHandler","eventType","on","e","dis","makeDispatchAction","records","record","dispatchAction","dispatchTooltipFinally","pendings","initialized","curry","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","handler","currTrigger","pendingList","env","globalListener","register","node","getZr","unregister","3O3a","Scale","scaleProto","OrdinalScale","extent","_data","parse","round","rank","normalize","getTicks","ticks","getLabel","n","unionExtentFromData","unionExtent","niceTicks","niceExtent","3YoW","fixExtentWithBands","nTick","margin","numberUtil","linearMap","axisHelper","normalizedExtent","Axis","inverse","onBand","_labelInterval","coord","containData","dataToCoord","getPixelPrecision","dataExtent","setExtent","start","end","clamp","coordToData","pointToData","point","getTicksCoords","alignWithLabel","bands","getBands","coords","getLabelsCoords","span","getBandWidth","axisExtent","getLabelInterval","labelInterval","axisModel","labelModel","getModel","interval","isHorizontal","getAxisLabelInterval","getFormattedLabels","4AlW","graphic","BoundingRect","Triangle","extendShape","cx","cy","Diamond","Pin","h","dy","angle","asin","dx","tanX","tanY","arc","PI","cpLen","cpLen2","bezierCurveTo","Arrow","symbolCtors","line","Line","Rect","roundRect","square","circle","Circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","Symbol","symbolType","textPosition","textAlign","textVerticalAlign","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","symbolUtil","createSymbol","isEmpty","substr","symbolPath","Image","image","makePath","setColor","4EB+","getTextWidth","font","DEFAULT_FONT","textWidthCache","textLines","split","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","textPadding","rich","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","truncateText","containerWidth","ellipsis","options","prepareTruncateOptions","truncateSingleLine","join","util","retrieve2","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","getContext","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","exec","matchedIndex","pushTokens","substring","contentHeight","stlPadding","truncateWidth","truncateHeight","tokens","token","tokenStyle","styleName","tokenHeight","textHeight","retrieve3","textLineHeight","textWidth","getWidth","tokenWidth","tokenWidthNotSpecified","charAt","percentWidth","textBackgroundColor","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","str","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","textFont","4tk+","defaultGetter","target","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","cloneValue","isArrayLike","rgba2String","rgba","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","range","clip","Clip","life","_loop","delay","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","props","tracks","during","callback","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","stop","forwardToLast","clipList","removeClip","done","getClips","55nF","CoordinateSystemManager","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","getCoordinateSystems","coordinateSystemCreator","5PYv","vector","v2","scaleAndAdd","sub","lenSquare","div","dot","s","d","distanceSquare","negate","lerp","applyTransform","lengthSquare","distSquare","5WUZ","OptionManager","_api","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","optionPreprocessorFuncs","isNew","mediaDefault","baseOption","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","query","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","attr","matched","QUERY_REG","operator","realAttr","compare","real","expect","indicesEquals","indices1","indices2","mergeOption","oldOption","newOption","newCptOpt","oldCptOpt","ComponentModel","hasClass","oldOptionBackup","newParsedOption","mountOption","isRecreate","optionBackup","getTimelineOption","timelineModel","getComponent","getCurrentIndex","getMediaOption","getHeight","5Ww7","getSymbolSize","symbolSize","getScale","seriesScope","Group","updateData","driftSymbol","parent","drift","labelHelper","symbolProto","_createSymbol","removeAll","seriesModel","z2","culling","initProps","_symbolType","stopSymbolAnimation","toLastFrame","childAt","stopAnimation","getSymbolPath","highlight","downplay","setZ","zlevel","z","setDraggable","draggable","cursor","silent","updateProps","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","useStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","cursorStyle","getItemStyle","elStyle","parsePercent","setStyle","opacity","findLabelValueDim","setLabelStyle","labelFetcher","labelDataIndex","defaultText","isRectText","autoColor","off","hoverStyle","setHoverStyle","isAnimationEnabled","onEmphasis","ratio","animateTo","onNormal","fadeOut","5X0Y","textColor","maskColor","mask","Arc","startAngle","endAngle","lineCap","labelRect","textDistance","textFill","group","resize","5nuQ","axisTrigger","coordSysAxesInfo","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","axesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysMap","coordSysKey","coordSysContainsPoint","containPoint","axisInfo","axis","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","linkGroup","srcAxisInfo","srcKey","srcValItem","mapper","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","isBlank","involveSeries","payloadInfo","buildPayloadsBySeries","payloadBatch","snapToValue","snap","seriesModels","seriesNestestValue","getAxisTooltipData","nestestValue","isFinite","axisPointerModel","triggerTooltip","coordSysModel","modelHelper","makeKey","coordSysItem","coordSysId","coordSysIndex","componentIndex","coordSysType","coordSysMainType","dataByAxis","axisDim","axisIndex","axisType","axisId","valueLabelOpt","precision","seriesDataIndices","outputAxesInfo","valItem","useHandle","sampleItem","escapeConnect","tooltipOption","position","lastHighlights","newHighlights","batchItem","toHighlight","toDownplay","batch","axisName","636P","PI2","normalizeRadian","6NfO","$export","S","F","defineProperty","f","6PzY","content","locals","6ygO","Gradient","LinearGradient","colorStops","globalCoord","7JVc","undefined","isfixed","computed","pageTitle","rightLabel","rightText","rightTextClick","$emit","ceshi","goback","7Zni","sources","names","mappings","file","sourceRoot","7qHl","it","fn","toString","valueOf","TypeError","8QnN","curve","bbox","mathMin","mathMax","mathSin","mathCos","extremity","fromPoints","fromLine","x0","y0","xDim","yDim","fromCubic","x3","y3","cubicExtrema","cubicAt","fromQuadratic","quadraticExtremum","quadraticAt","tx","ty","fromArc","rx","ry","anticlockwise","vec2Min","vec2Max","tmp","8wRg","_trim","replace","quantityExponent","log","LN10","domain","subDomain","subRange","all","parseFloat","returnStr","toFixed","asc","arr","getPrecision","getPrecisionSafe","eIndex","dotIndex","pixelExtent","dataQuantity","sizeQuantity","getPercentWithPrecision","valueList","reduce","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","isRadianAroundZero","TIME_REG","getTimezoneOffset","Date","timezoneOffset","timeOffset","toUpperCase","quantity","nice","nf","exponent","exp10","reformIntervals","littleThan","lg","close","curr","currClose","splice","isNumeric","9mQP","polyHelper","smoothConstraint","A9Km","classUtil","colorPaletteMixin","encodeHTML","addCommas","SeriesModel","coordinateSystem","defaultOption","legendDataProvider","visualColorAccessPath","layoutMode","parentModel","extraOpt","mergeDefaultAndTheme","getInitialData","restoreData","inputPositionParams","getLayoutParams","themeSubType","getTheme","getDefaultOption","label","fillDataTextStyle","mergeLayoutParam","newSeriesOption","getLinkedData","setData","getRawData","multipleSeries","formattedValue","setEachItem","dimIdx","valStr","vertially","tooltipName","formatTime","tooltipDims","colorEl","animationEnabled","getColorFromPalette","scope","getTooltipPosition","B6bR","BrIN","injectStyle","ssrContext","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_tab_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_0_4_vue_loader_lib_template_compiler_index_id_data_v_a87ec720_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_template_index_0_tab_vue__","normalizeComponent","__vue_styles__","Component","CZ4L","Axis2D","coordExtent","getGlobalExtent","toGlobalCoord","reverse","isLabelIgnored","toLocalCoord","D1zL","v2Min","v2Max","v2Scale","v2Distance","v2Add","constraint","prevPoint","nextPoint","cps","d0","d1","cp0","cp1","shift","D7iD","nameLocation","nameRotate","nameTruncate","maxWidth","nameTextStyle","nameGap","triggerEvent","axisPointer","onZeroAxisIndex","inside","showMinLabel","showMaxLabel","splitArea","categoryAxis","splitNumber","timeAxis","logAxis","logBase","DY7z","ZImage","src","_image","createOrUpdateImage","aspect","sWidth","sHeight","sx","sy","drawImage","DacG","axisPointerModelHelper","registerPreprocessor","link","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","collect","registerAction","event","DoL6","extendComponentModel","dependencies","showContent","triggerOn","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","borderColor","borderRadius","borderWidth","extraCssText","crossStyle","E6pA","textHelper","Text","normalizeTextStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","needDrawText","renderText","getStroke","textStroke","textLineWidth","ETnK","smoothSpline","smoothBezier","controlPoints","cp2","EdBd","helper","roundNumber","IntervalScale","_interval","_intervalPrecision","thisExtent","other","getInterval","setInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","getTicksLabels","labels","minInterval","maxInterval","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","fixMax","fixMin","ceil","EnYE","doGet","pathArr","getParent","getParentMethod","clazzUtil","parsePath","thisParentModel","Ctor","setReadOnly","properties","customizeGetParent","enableClassExtend","EuDp","extendComponentView","render","gridModel","getRect","Fwod","Cartesian2D","Cartesian","getAxesByScale","getAxis","axisX","axisY","G9LC","_vm","_h","$createElement","_c","_self","staticClass","_l","class","mySelected","active","click","$event","swapTab","_v","_s","staticRenderFns","esExports","GLZC","confineInContainer","viewWidth","viewHeight","AxisBuilder","buildElStyle","axisPointerType","styleModel","getLineStyle","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","normalizeCssArray","textRect","align","verticalAlign","bgColor","getAxisRawValue","seriesData","idxItem","getSeriesByIndex","dataParams","isFunction","getTransformedPosition","layoutInfo","rotation","labelOffset","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","innerTextLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","GYRJ","componentUtil","uid","getUID","componentModel","dispose","componentProto","updateView","updateLayout","updateVisual","enableClassManagement","registerWhenExtend","HILd","firstDataNotNull","ifNeedCompleteOrdinalData","createListFromArray","coordSysName","creator","creators","registeredCoordSys","CoordinateSystem","completeDimOpt","encodeDef","dimsDef","getDimensionsInfo","completeDimensions","categoryIndex","createNameList","categories","categoryAxesModels","getCategories","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","retrieve","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","radius","geo","HJE7","axisModelCommonMixin","createList","createScale","createScaleByModel","niceScaleExtent","mixinAxisModelCommonMethods","HQ6Y","eventNameFix","browser","firefox","processGesture","proxy","stage","gestureMgr","_gestureMgr","gestureInfo","recognize","findHover","zrX","zrY","dom","gestureEvent","dispatchToElement","setTouchTimer","instance","_touching","clearTimeout","_touchTimer","setTimeout","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","handlerNames","addEventListener","Eventful","GestureMgr","pointerEventsSupported","touchEventsSupported","eventTool","removeEventListener","normalizeEvent","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","mousemove","mouseout","element","toElement","relatedTarget","nodeType","parentNode","touchstart","zrByTouch","_lastTouchMoment","mousedown","touchmove","touchend","mouseup","handlerDomProxyProto","setCursor","HxU1","arrySlice","_$handlers","one","isSilent","newList","args","argLen","triggerWithContext","IW7i","source","typeStr","objToString","TYPED_ARRAY","from","BUILTIN_OBJECT","isPrimitive","isDom","overwrite","targetProp","sourceProp","isBuiltInObject","mergeAll","targetAndSources","overlay","createCanvas","createElement","_ctx","array","clazz","baseClazz","clazzPrototype","superClass","forEach","nativeForEach","nativeMap","memo","nativeReduce","nativeFilter","find","func","nativeSlice","ownerDocument","eqNaN","value0","value1","value2","Function","condition","message","setAsPrimitive","primitiveKey","HashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","arrayProto","prefixedKey","removeKey","IpD5","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","SymbolCtor","symbolEl","enableAnimation","J0+h","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","default","_scopeId","hook","$vnode","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","functional","existing","beforeCreate","JGbQ","parseInt10","isLayerValid","layer","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","tmpRect","viewRect","intersect","isClipPathChanged","clipPaths","prevClipPaths","doClip","clipPath","createRoot","domRoot","cssText","config","timsort","Layer","requestAnimationFrame","Painter","root","singleCanvas","nodeName","_opts","dpr","devicePixelRatio","_singleCanvas","rootStyle","innerHTML","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","initContext","_domRoot","_getSize","appendChild","_progressiveLayers","_hoverlayer","_hoverElements","isSingleCanvas","getViewportRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","getDisplayList","_paintList","refreshHover","_startProgessive","addHover","__hoverMir","elMirror","__from","removeHover","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","save","originalEl","invisible","invTransform","__clipPaths","_doPaintEl","restore","step","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","globalAlpha","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","nextSibling","insertBefore","firstChild","eachLayer","eachOtherLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","elCount","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","configLayer","layerConfig","delLayer","removeChild","display","clearLayer","getRenderedCanvas","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","pixelRatio","clearColor","displayList","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","pathToImage","canvas","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","clearRect","pathTransform","updateTransform","ImageShape","imgShape","JUn3","Ji8X","getScaleExtent","axisDataLen","scaleType","getMin","getMax","originalExtent","console","warn","setBlank","getNeedCrossZero","base","getClass","ifAxisCrossZero","tickCoords","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","tickCoord","union","labelFormatter","tpl","tick","Jwij","defaultSymbolType","legendSymbol","eachRawSeriesByType","symbol","isSeriesFiltered","itemSymbolType","itemSymbolSize","Jx77","shadowTemp","orignalBrush","ie","modified","KOAn","lib","ORIGIN_METHOD","RATE","throttle","debounce","lastExec","getTime","timer","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","L/5X","isAroundZero","EPSILON","isNotAroundZero","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","t1","disc","K","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","THREE_SQRT","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticDerivativeAt","quadraticRootAt","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","LDzn","Element","Style","RectText","dragging","rectHover","rectContain","animateStyle","LEnD","idStart","LXmB","toCamelCase","upperCaseFirst","group1","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","paramsList","encode","seriesLen","alias","formatTplSimple","s2d","isUTC","date","utc","M","capitalFirst","Lohu","anObject","IE8_DOM_DEFINE","toPrimitive","dP","O","P","Attributes","Lr5q","buildTooltipModel","modelCascade","resultModel","pop","tooltipOpt","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","clientWidth","clientHeight","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","TooltipContent","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","getDom","_tooltipContent","tooltipModel","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","offsetX","offsetY","_manuallyAxisShowTip","pointInfo","manuallyHideTip","hideLater","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","globalTooltipModel","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","random","dataModel","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","cbTicket","setContent","getSize","vAlign","viewSize","layoutRect","getLayoutRect","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","lastIdxItem","newIdxItem","hide","N3i3","addColorStop","offset","OWKC","delInstance","instances","guid","Handler","Storage","Animation","HandlerProxy","useVML","canvasSupported","painterCtors","zrender","ZRender","getInstance","registerPainter","rendererType","renderer","vml","painter","handerProxy","flush","_needsRefresh","oldDelFromStorage","delFromStorage","oldAddToStorage","addToStorage","removeSelfFromZr","addSelfToZr","addRoot","delRoot","zLevel","refreshImmediately","_needsRefreshHover","refreshHoverImmediately","clearAnimation","setCursorStyle","eventName","eventHandler","OWrI","_setting","getSetting","_isBlank","P469","_a","_b","PRM/","PiNk","getBoxLayoutParams","Pqkg","attrs","action","activeId","_m","profitType","totalJoyScore","RMQR","AxisPointerModel","shadowStyle","handle","icon","RNqR","mergeTheme","theme","themeItem","initBase","OPTION_INNER_KEY","_componentsMap","_seriesIndices","_theme","globalDefault","getComponentsByTypes","componentsMap","types","determineSubType","newCptOption","existComponent","createSeriesIndices","filterBySubType","cpt","assertSeriesInitialized","GlobalModel","optionManager","_optionManager","resetOption","optionChanged","timelineOption","mediaOptions","mediaOption","visitComponent","newCptOptionList","dependentModels","resultItem","ComponentModelClass","optionUpdated","newCptTypes","componentOption","topologicalTravel","getAllClassMainTypes","getOption","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","eachComponent","component","queryResult","getSeriesByName","oneSeries","getSeriesByType","getSeries","eachSeries","rawSeriesIndex","eachRawSeries","eachSeriesByType","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","RPAd","ignoreSize","subtext","subtarget","itemGap","subtextStyle","titleModel","textStyleModel","subtextStyleModel","textBaseline","textEl","setTextStyle","disableBox","subText","subTextEl","sublink","open","groupRect","layoutOption","alignStyle","subPixelOptimizeRect","RSUm","Transformable","Animatable","ignore","decomposeTransform","beforeUpdate","afterUpdate","setClipPath","removeClipPath","animators","addAnimator","removeAnimator","Rwy1","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","Sdkl","assembleTransition","duration","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","zrColor","toHex","borderName","camelCase","container","_zr","_x","_y","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","onmousemove","eventUtil","dispatch","onmouseleave","_hideDelay","currentStyle","domStyle","viewportRootOffset","isShow","SrZs","RadialGradient","TUEb","bitmap","enumerable","configurable","writable","Td34","Draggable","_dragStart","_drag","_dragEnd","topTarget","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","TwzL","checkClassType","test","superCall","superApply","IS_CONTAINER","host","hasOwn","parseClassType","main","RootClass","mandatoryMethods","$constructor","proto","method","ExtendedClass","entity","makeContainer","registerClass","Clazz","componentMainType","throwWhenNotFound","getClassesByMainType","o","hasSubTypes","originalExtend","UEU6","USOM","excludes","includes","getBorderLineDash","lineType","UYnM","collectAxesInfo","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","axisPointerEnabled","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","collectSeriesInfo","seriesTooltipTrigger","seriesTooltipShow","seriesDataCount","linkOption","checkPropInLink","linkPropValue","axisPropValue","fixValue","getAxisInfo","getAxisPointerModel","Ug08","debugMode","VUgN","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","VZiK","encodeColor","colorAccessPath","Vhze","boxLayout","orient","gap","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","HV_NAMES","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","containerHeight","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","getLocalTransform","elPos","sizeCalculable","hvIdx","targetOption","newParams","newValueCount","merged","mergedValueCount","hasProp","hResult","vResult","copyLayoutParams","VknR","fixClipWithShadow","unitX","unitY","Vsag","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","VzoJ","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","WEGk","Dispatcher","_clips","_running","_time","_pausedTime","_pauseStart","clips","_update","delta","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","WHYm","scaleHelper","intervalScaleProto","mathCeil","mathFloor","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxTickNum","approxInterval","scaleLevelsLen","scaleLevels","level","yearSpan","fixExtent","ONE_SECOND","ONE_MINUTE","ONE_DAY","WIVL","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","dir","atan2","containPath","isStroke","xi","yi","CMD","windingLine","L","cubic","Q","quadratic","dTheta","R","Z","WnAC","dimAxisMapper","_axes","_dimList","addAxis","_dataCoordConvert","input","dimList","output","WtYn","makeEventPacket","eveType","targetInfo","cancelBubble","pinchX","pinchY","pinchScale","wheelDelta","zrDelta","EmptyProxy","isHover","displayable","SILENT","painterRoot","_hovered","lastHovered","lastHoveredTarget","hovered","hoveredTarget","innerDom","eventArgs","eventPacket","exclude","hoverCheckResult","_downel","_upel","X609","X76A","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","textTag","textOffset","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","transformText","textRotation","textOrigin","textBorderColor","textBorderWidth","textBorderRadius","blend","prevStyle","firstDraw","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","XehA","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","smoothMonotone","connectNulls","prevIdx","v2Copy","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","pt","Polyline","Polygon","stackedOnPoints","stackedOnSmooth","stackedOnBBox","XlEP","imageOnLoad","cachedImgObj","__cachedImgObj","onload","pending","pendingWrap","cbPayload","hostEl","globalImageCache","newImageOrSrc","__zrImageSrc","XrbV","percentTwenties","formatters","RFC1738","RFC3986","YEmw","ZKTi","labelDims","ZYsc","getAxisType","axisModelCreator","AxisModel","resetRange","getCoordSysModel","gridIndex","gridId","extraOption","ZgA1","v2ApplyTransform","lt","rb","lb","rt","maxX","maxY","calculateTransform","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","ZkAt","Zr1P","hasFillOrStroke","fillOrStroke","liftColor","colorTool","lift","cacheElementStl","__hoverStlDirty","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","insideRollbackOpt","rollbackInsideStyle","applyInsideStyle","insideOriginalTextPosition","doSingleLeaveHover","normalStl","doEnterHover","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setTextStyleCommon","EMPTY_OBJ","labelRotate","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","forceRich","richItemNameMap","isBlock","getAutoColor","originalTextPosition","insideRollback","useInsideStyle","animateOrSetProps","isUpdate","animatableModel","postfix","animationDelay","getAnimationDelayParams","pathTool","Sector","Ring","BezierCurve","CompoundPath","extendPath","extendFromString","createFromString","boundingRect","resizePath","mergePath","pathRect","subPixelOptimizeLine","subPixelOptimize","originX","originY","originWidth","originHeight","positiveOrNegative","doubledPosition","hoverSilentOnTouch","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","labelDimIndex","showNormal","showEmphasis","baseText","normalStyleText","emphasisStyleText","specifiedTextStyle","setText","defaultColor","gTextStyleModel","getTransform","ancestor","mat","transformDirection","direction","hBase","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","elMap1","g","elMap","isGroup","anid","oldEl","newProp","clipPointsByRect","clipRectByRect","targetRect","createIcon","iconStr","ZwVc","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","children","_children","__storage","addChildrenToStorage","delChildrenFromStorage","_renderList","a3Yh","__esModule","_defineProperty","_defineProperty2","aJs6","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","compatTextStyle","labelOptSingle","compatLabelTextStyle","labelOpt","processSeries","seriesOpt","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","toObj","isTheme","axes","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regions","regionObj","aXfO","sysDims","applyDim","OTHER_DIMS","coordDimNameMap","genName","fromZero","dataDimNameMap","dimCount","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","dataDims","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","bX97","bZMc","c3Mm","containLabel","c5lC","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","quadraticCurveTo","tangentAt","cS9B","ceJK","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","clockWise","pointerColor","dataRange","visualMap","componentName","cqWi","createRegisterEventWithLowercaseName","MessageCenter","ECharts","prioritySortFunc","prio","themeStorage","_dom","_throttledZrFlush","backwardCompat","_chartsViews","_chartsMap","_componentsViews","_coordSysMgr","createExtensionAPI","_messageCenter","_initEvents","_pendingActions","visualFuncs","dataProcessorFuncs","_onframe","doConvertPixel","_model","coordSysList","updateDirectly","ecIns","callView","view","__alive","__model","__viewId","doDispatchAction","payloadType","actionWrap","actions","actionInfo","cptType","updateMethod","IN_MAIN_PROCESS","payloads","batched","eventObj","eventObjBatch","isHighDown","OPTION_UPDATED","updateMethods","prepareAndUpdate","flushPendingActions","pendingActions","triggerUpdatedEvent","invokeUpdateMethod","updateZ","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","viewId","classType","ComponentView","ChartView","__id","__ecComponentInfo","processData","process","stackSeriesData","stackedDataMap","previousStack","doLayout","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","chartView","frameDrawNum","needProgressive","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","enableConnect","updateConnectedChartsStatus","charts","STATUS_KEY","eventActionMap","actionType","connectedGroups","makeActionFromEvent","otherCharts","otherChart","ACTION_REG","echartsProto","notMerge","lazyUpdate","setTheme","getDevicePixelRatio","getDataURL","excludeComponents","excludesComponentViews","url","toDataURL","getConnectedDataURL","groupId","canvasList","getBoundingClientRect","targetCanvas","img","convertToPixel","convertFromPixel","containPixel","visualType","getViewOfComponentModel","getViewOfSeriesModel","colorArr","stringify","background","_loadingFX","cfg","loadingEffects","weChat","MOUSE_EVENT_NAMES","eveName","eventData","isDisposed","_disposed","idBase","groupIdBase","existInstance","getInstanceByDom","setAttribute","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","preprocessorFunc","priority","processorFunc","registerPostUpdate","postUpdateFunc","registerCoordinateSystem","getCoordinateSystemDimensions","coordSysCreator","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendSeriesModel","extendChartView","setCanvasCreator","format","FILTER","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","dHti","Chart","elSetState","state","childCount","toggleHighlight","dataIdx","chartProto","dIPJ","dNmU","activeTab","dc9A","formats","eCMv","getCartesian","getAxisDimIndex","BaseAxisPointer","viewHelper","cartesianAxisHelper","AxisView","CartesianAxisPointer","makeElOption","otherExtent","pixelValue","pointerOption","pointerShapeBuilder","graphicKey","pointer","getHandleTransform","labelInside","updateHandleTransform","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","targetShape","shadow","bandWidth","registerAxisPointerClass","eSGo","eY2H","enableSubTypeDefaulter","subTypeDefaulters","registerSubTypeDefaulter","defaulter","componentTypeMain","enableTopologicalTravel","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","epp4","processArc","fa","fs","psiDeg","psi","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","addData","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","toStatic","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathList","pathEl","pathBundle","appendPath","esV0","f68a","own","IS_FORCED","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","IS_WRAP","W","expProto","U","fCln","updateAxisPointer","axisView","forceRender","getAxisPointerClass","axisPointerClass","_axisPointer","disposeAxisPointer","axisPointerClazz","fHSC","fIwg","clientToLocal","calculate","defaultGetZrXY","layerX","layerY","clientX","clientY","touch","targetTouches","changedTouches","detail","isDomLevel2","attachEvent","detachEvent","preventDefault","stopPropagation","returnValue","fftb","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","setRgba","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba2hsla","H","vMin","vMax","deltaR","deltaG","deltaB","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","gBVq","getDependencies","deps","arrayPush","themeModel","isInit","optList","Class","getReferringComponents","gXiF","mIdentity","origin","transformableProto","parentHasTransform","tmpTransform","transformCoordToGlobal","gshH","colorIdx","colorNameMap","colorPalette","h/UA","hexTable","arrayToObject","plainObjects","allowPrototypes","mergeTarget","keys","assign","decode","decodeURIComponent","string","compact","references","refs","lookup","compacted","isRegExp","isBuffer","hKqg","utils","arrayPrefixGenerators","brackets","prefix","repeat","toISO","toISOString","delimiter","encoder","encodeValuesOnly","serializeDate","skipNulls","strictNullHandling","object","generateArrayPrefix","allowDots","objKeys","arrayFormat","joined","addQueryPrefix","hxP8","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_header_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_0_4_vue_loader_lib_template_compiler_index_id_data_v_33d60ee4_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_template_index_0_header_vue__","i+yD","slot","i84Q","getProtocol","getrefundDetails","getFenLei","getSwiper","getGuanggao","getNoticeList","postLogin","getCode","postRegister","postReset","postMemberUpdate","getLogout","getMe","getMyRecommend","getAllCity","getCartList","getByStoreCategory","getNearStore","getStore","getProductCategory","addCart","getProductBySkuId","getAttrBySpuId","getAttrOption","deletCart","updateAmount","getProfitChart","getProfitList","confirmOrder","getOrderList","addCollectStore","addCollectgood","getMyCollection","getMyCollectStore","cancelMyCollect","getProductLikeName","getStoreLikeName","getOrder","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default","__WEBPACK_IMPORTED_MODULE_1_axios__","__WEBPACK_IMPORTED_MODULE_1_axios___default","__WEBPACK_IMPORTED_MODULE_2_qs__","__WEBPACK_IMPORTED_MODULE_2_qs___default","baseUrl","serverUrl","username","password","post","mobile","inviteCode","vcode","nickName","pageNum","pageSize","storeCategoryId","latitude","longitude","cityCode","storeId","categoryId","skuId","amount","SpuId","skuIds","orderStatus","startTime","endTime","collectId","orderNo","j8iE","j9yU","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","k78g","k9lX","kHI7","getLineDash","dotSize","dashSize","l3hl","is","lIfk","lSMs","__g","liLe","mUcc","os","ua","edge","userAgent","mmx0","fixRoundingError","originalVal","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","err","mt7H","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","getStackedOnPoints","createGridClipShape","cartesian","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","unshift","gradient","lineAnimationDiff","lineGroup","symbolDraw","_symbolDraw","_lineGroup","lineStyleModel","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","showSymbol","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","__points","updatedDataInfo","diffStatus","ptIdx","oZX5","pLHs","coordDims","ptTv","q1/O","createDesc","q7n9","qEZ+","AxisPonterView","disopse","qeVC","rawAxisPosition","axisPosition","rectBound","axisOffset","posBound","otherAxis","onZeroCoord","dirMap","tickDirection","nameDirection","qq5e","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_myEarnings_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_0_4_vue_loader_lib_template_compiler_index_id_data_v_43b3fa9d_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_template_index_0_myEarnings_vue__","rN8j","createPattern","rhuR","nPoint","mathAtan2","sCIY","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","onLeft","fixMinMaxLabelShow","textEls","firstLabel","nextLabel","lastLabel","prevLabel","isTwoLabelOverlapped","labelLayout","firstRect","nextRect","mRotationBack","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","pt1","pt2","tickModel","tickLen","tickInterval","ticksCoords","ifIgnoreOnTick","axisLabelShow","labelRotation","categoryData","tickVal","itemLabelModel","labelStr","targetType","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","axisRotation","rawTick","sIBF","returnFalse","createDom","newDom","newDomStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","__currentValues","createBackBuffer","clearAll","haveMotionBLur","clearColorGradientOrPattern","__canvasGradient","fillRect","sugb","childOfName","_doAdd","addBefore","includeChildren","tmpMat","childRect","tiCr","rangeStart","rangeEnd","setRange","tjS7","aFunction","that","tpPu","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","gridRect","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","uqT/","uwuJ","$Object","desc","v3dR","legendHoverLink","clipOverflow","showAllSymbol","vOUV","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","vkao","sourcesContent","vmYa","wKpZ","pointPair","center","_track","_doTrack","_recognize","touches","trackItem","recognizers","pinch","track","pinchEnd","pinchPre","pinchCenter","wrtm","normalizeStyle","VALID_TEXT_ALIGN","VALID_TEXT_VERTICAL_ALIGN","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getFill","strokeText","fillText","renderRichText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","isPlainBg","onBgImageLoaded","blockHeiht","maxValue","lastIndexOf","x8DJ","xHSo","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","xJeg","min2","max2","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_lineDash","_dashOffset","_dashIdx","_dashSum","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","_dashedQuadraticTo","arcTo","lineDashSum","appendSize","appendPathData","_expandData","_prevCmd","dash","dashSum","nDash","bezierLen","tmpLen","ux","uy","scaleX","scaleY","isEllipse","xLYh","arrayLimit","decoder","depth","parameterLimit","parseValues","cleanStr","ignoreQueryPrefix","limit","parts","part","bracketEqualsPos","parseObject","chain","cleanRoot","parseArrays","parseKeys","givenKey","segment","tempObj","newObj","y7Fz","isAxisUsedInTheGrid","getLabelUnionRect","axisLabelModel","labelCount","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","canNotOnZeroToAxis","updateAxisTransfrom","coordBase","axisExtentSum","findAxesModels","axesTypes","isCartesian2D","gridProto","_updateScale","ignoreContainLabel","adjustAxes","axesList","labelUnionRect","axesMapOnDim","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","coordsList","createAxisCreator","axisPositionUsed","axesCount","grids","yZNC","samplers","average","nearest","indexSampler","sampler","yh7w","zM+A","zbFj","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","_axisModel","_axisPointerModel","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerEl","handleModel","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","_doDispatchAxisPointer","doClear","buildLabel","zoFB","r1","r2","r3","r4","total","zrBk","chartInstance","echartsAPIList"],"mappings":"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","file":"static/js/0.c41e726a3202dec4448d.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"++G3\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(\"EnYE\");\n    var DataDiffer = __webpack_require__(\"xHSo\");\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var modelUtil = __webpack_require__(\"+Qey\");\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string|Object} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"QYmj\")))\n\n/***/ }),\n\n/***/ \"+Qey\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(\"LXmB\");\n    var nubmerUtil = __webpack_require__(\"8wRg\");\n    var Model = __webpack_require__(\"EnYE\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             fontSize: 18\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            for (var i = 0, len = subOpts.length; i < len; i++) {\n                var subOptName = subOpts[i];\n                if (!emphasisOpt.hasOwnProperty(subOptName)\n                    && normalOpt.hasOwnProperty(subOptName)\n                ) {\n                    emphasisOpt[subOptName] = normalOpt[subOptName];\n                }\n            }\n        }\n    };\n\n    modelUtil.TEXT_STYLE_OPTIONS = [\n        'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n        'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth',\n        'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline',\n        'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY',\n        'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY',\n        'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding'\n    ];\n\n    // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n    //     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n    //     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n    //     // FIXME: deprecated, check and remove it.\n    //     'textStyle'\n    // ]);\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n\n/***/ \"+Ziq\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(\"4EB+\");\n    var graphicUtil = __webpack_require__(\"Zr1P\");\n\n    var PATH_COLOR = ['textStyle', 'color'];\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @param {boolean} [isEmphasis]\n         * @return {string}\n         */\n        getTextColor: function (isEmphasis) {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (\n                    (!isEmphasis && ecModel) ? ecModel.get(PATH_COLOR) : null\n                );\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('verticalAlign') || this.getShallow('baseline'),\n                this.getShallow('padding'),\n                this.getShallow('rich'),\n                this.getShallow('truncateText')\n            );\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"/Qyl\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(\"5PYv\");\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n\n/***/ \"/wKD\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(\"LDzn\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var PathProxy = __webpack_require__(\"xJeg\");\n    var pathContain = __webpack_require__(\"WIVL\");\n\n    var Pattern = __webpack_require__(\"rN8j\");\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n\n/***/ \"0KpF\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(\"zoFB\");\n\n    module.exports = __webpack_require__(\"/wKD\").extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ \"0TlH\":\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n\n/***/ \"0U6q\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(\"/wKD\");\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"0nnt\":\n/***/ (function(module, exports) {\n\nvar core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n/***/ }),\n\n/***/ \"0oBF\":\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n\n/***/ \"102j\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_header_header__ = __webpack_require__(\"hxP8\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_tab_tab__ = __webpack_require__(\"BrIN\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__service_getData__ = __webpack_require__(\"i84Q\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\nvar echarts = __webpack_require__(\"cqWi\");\n// 引入柱状图组件\n__webpack_require__(\"oZX5\");\n// 引入提示框和title组件\n__webpack_require__(\"bX97\");\n__webpack_require__(\"RPAd\");\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  components: {\n    'tab-view': __WEBPACK_IMPORTED_MODULE_1__components_tab_tab__[\"a\" /* default */],\n    'header-view': __WEBPACK_IMPORTED_MODULE_0__components_header_header__[\"a\" /* default */]\n  },\n  data: function data() {\n    return {\n      title: '我的收益',\n      fixed: false,\n      routerName: 'custom',\n      chartsList: [],\n      detailsList: [],\n      chartXList: [],\n      chartYList: [],\n      echartOption: [],\n      myChart: null,\n      tabId: '7',\n      days: '7',\n      tabAction: [{\n        id: '7',\n        categoryName: '最近7天'\n      }, {\n        id: '15',\n        categoryName: '最近15天'\n      }, {\n        id: '30',\n        categoryName: '最近30天'\n      }]\n    };\n  },\n\n  created: function created() {\n    var _this = this;\n    if (this.$route.params.name) {\n      this.routerName = this.$route.params.name; // 上个路由带过来\n      localStorage.prev = this.$route.params.name;\n    } else {\n      this.routerName = localStorage.prev;\n    }\n    /*chartXList = ['08-18', '08-20', '08-21', '08-22', '08-23', '08-24', '08-25']\n    chartYList = ['500', '200', '300', '-44', '-330', '86', '50']*/\n    //console.log(chartXList)\n    this.getProfitListData(this.days);\n  },\n  mounted: function mounted() {\n    this.getChartData(this.days);\n  },\n  methods: {\n    setting: function setting(val, param) {\n      this.$router.push({\n        name: val,\n        params: {\n          setparams: param,\n          prev: this.$route.name\n        }\n      });\n    },\n    getChartData: function getChartData(days) {\n      var _this = this;\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__service_getData__[\"i\" /* getProfitChart */])(days).then(function (rep) {\n        _this.chartsList = rep.data;\n        _this.chartXList = [];\n        _this.chartYList = [];\n        for (var i = 0; i < _this.chartsList.length; i++) {\n          _this.chartXList.push(_this.chartsList[i].takeTime);\n          _this.chartYList.push(_this.chartsList[i].joyScore);\n        }\n        _this.drawLine();\n        _this.myChart.setOption({\n          xAxis: {\n            data: _this.chartXList\n          },\n          series: [{\n            data: _this.chartYList\n          }]\n        });\n        _this.myChart.hideLoading();\n      }).catch(function () {\n        _this.$toast('连接服务器失败！');\n      });\n    },\n    getProfitListData: function getProfitListData(days) {\n      var _this = this;\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__service_getData__[\"j\" /* getProfitList */])(days).then(function (rep) {\n        _this.detailsList = rep.data;\n      }).catch(function () {\n        _this.$toast('连接服务器失败！');\n      });\n    },\n    changeTab: function changeTab(val) {\n      // 这个是切换tab\n      this.tabId = val;\n      this.days = val;\n      this.getChartData(this.days);\n      this.getProfitListData(this.days);\n    },\n    drawLine: function drawLine() {\n      // 基于准备好的dom，初始化echarts实例\n      if (this.myChart) {\n        this.myChart = null;\n        this.echartOption = [];\n      }\n      this.myChart = echarts.init(document.getElementById('mychart'));\n      // 绘制图表\n      this.echartOption = {\n        backgroundColor: '#fff',\n        tooltip: {\n          trigger: 'axis',\n          backgroundColor: '#FF8B20',\n          formatter: function formatter(params) {\n            return params[0].value;\n          }\n        },\n        title: {\n          left: 'center',\n          text: ''\n        },\n        grid: { // 图标网格偏移\n          left: '11%',\n          right: '5%',\n          top: '5%',\n          bottom: '15%'\n        },\n        xAxis: {\n          type: 'category', // 折线图\n          boundaryGap: false,\n          axisLine: {\n            show: false,\n            onZero: false\n          },\n          axisLabel: {\n            textStyle: {\n              color: '#A5A5A5'\n            }\n          },\n          axisTick: {\n            show: false // 不显示刻度\n          },\n          data: []\n        },\n        yAxis: {\n          type: 'value',\n          boundaryGap: false,\n          axisLine: {\n            show: false\n          },\n          splitLine: {\n            show: true, // 是否显示y轴线\n            lineStyle: {\n              color: '#FFE9D4',\n              type: 'dashed'\n            }\n          },\n          axisLabel: {\n            textStyle: {\n              color: '#A5A5A5'\n            }\n          },\n          axisTick: {\n            show: false // 不显示刻度\n          }\n        },\n        calculable: true,\n        series: [{\n          name: '',\n          type: 'line',\n          smooth: false, // 是否圆滑\n          sampling: 'average',\n          itemStyle: {\n            normal: {\n              color: 'rgb(255, 143, 40)'\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: 'rgb(255, 244, 233)'\n            }\n          },\n          data: []\n        }]\n      };\n      this.myChart.showLoading();\n      this.myChart.setOption(this.echartOption, true);\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"1j0N\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(\"/wKD\").extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ \"2Ttr\":\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n\n/***/ \"2qdY\":\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n\n/***/ \"36nW\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(\"mUcc\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var get = __webpack_require__(\"+Qey\").makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n\n/***/ \"3O3a\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var Scale = __webpack_require__(\"OWrI\");\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n\n/***/ \"3YoW\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(\"8wRg\");\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var axisHelper = __webpack_require__(\"Ji8X\");\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n\n/***/ \"4AlW\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(\"Zr1P\");\n    var BoundingRect = __webpack_require__(\"ZgA1\");\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n\n/***/ \"4EB+\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var util = __webpack_require__(\"IW7i\");\n    var BoundingRect = __webpack_require__(\"ZgA1\");\n    var imageHelper = __webpack_require__(\"XlEP\");\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n\n    var TEXT_CACHE_MAX = 5000;\n    var STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\n    var DEFAULT_FONT = '12px sans-serif';\n\n    var retrieve2 = util.retrieve2;\n    var retrieve3 = util.retrieve3;\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {number} width\n     */\n    function getTextWidth(text, font) {\n        font = font || DEFAULT_FONT;\n        var key = text + ':' + font;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // textContain.measureText may be overrided in SVG or VML\n            width = Math.max(textContain.measureText(textLines[i], font).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {string} [textAlign='left']\n     * @param {string} [textVerticalAlign='top']\n     * @param {Array.<number>} [textPadding]\n     * @param {Object} [rich]\n     * @param {Object} [truncate]\n     * @return {Object} {x, y, width, height, lineHeight}\n     */\n    function getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        return rich\n            ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate)\n            : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n    }\n\n    function getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n        var contentBlock = parsePlainText(text, font, textPadding, truncate);\n        var outerWidth = getTextWidth(text, font);\n        if (textPadding) {\n            outerWidth += textPadding[1] + textPadding[3];\n        }\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n        rect.lineHeight = contentBlock.lineHeight;\n\n        return rect;\n    }\n\n    function getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        var contentBlock = parseRichText(text, {\n            rich: rich,\n            truncate: truncate,\n            font: font,\n            textAlign: textAlign,\n            textPadding: textPadding\n        });\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        return new BoundingRect(x, y, outerWidth, outerHeight);\n    }\n\n    /**\n     * @public\n     * @param {number} x\n     * @param {number} width\n     * @param {string} [textAlign='left']\n     * @return {number} Adjusted x.\n     */\n    function adjustTextX(x, width, textAlign) {\n        // FIXME Right to left language\n        if (textAlign === 'right') {\n            x -= width;\n        }\n        else if (textAlign === 'center') {\n            x -= width / 2;\n        }\n        return x;\n    }\n\n    /**\n     * @public\n     * @param {number} y\n     * @param {number} height\n     * @param {string} [textVerticalAlign='top']\n     * @return {number} Adjusted y.\n     */\n    function adjustTextY(y, height, textVerticalAlign) {\n        if (textVerticalAlign === 'middle') {\n            y -= height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y -= height;\n        }\n        return y;\n    }\n\n    /**\n     * @public\n     * @param {stirng} textPosition\n     * @param {Object} rect {x, y, width, height}\n     * @param {number} distance\n     * @return {Object} {x, y, textAlign, textVerticalAlign}\n     */\n    function adjustTextPositionOnRect(textPosition, rect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n        var halfHeight = height / 2;\n\n        var textAlign = 'left';\n        var textVerticalAlign = 'top';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - distance;\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - distance;\n                textAlign = 'right';\n                textVerticalAlign = 'bottom';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @public\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} font\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, font, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        var textLines = (text + '').split('\\n');\n        options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\n\n        // FIXME\n        // It is not appropriate that every line has '...' when truncate multiple lines.\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            textLines[i] = truncateSingleLine(textLines[i], options);\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n        options = util.extend({}, options);\n\n        options.font = font;\n        var ellipsis = retrieve2(ellipsis, '...');\n        options.maxIterations = retrieve2(options.maxIterations, 2);\n        var minChar = options.minChar = retrieve2(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        options.cnCharWidth = getTextWidth('国', font);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = options.ascCharWidth = getTextWidth('a', font);\n        options.placeholder = retrieve2(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        options.ellipsis = ellipsis;\n        options.ellipsisWidth = ellipsisWidth;\n        options.contentWidth = contentWidth;\n        options.containerWidth = containerWidth;\n\n        return options;\n    }\n\n    function truncateSingleLine(textLine, options) {\n        var containerWidth = options.containerWidth;\n        var font = options.font;\n        var contentWidth = options.contentWidth;\n\n        if (!containerWidth) {\n            return '';\n        }\n\n        var lineWidth = getTextWidth(textLine, font);\n\n        if (lineWidth <= containerWidth) {\n            return textLine;\n        }\n\n        for (var j = 0;; j++) {\n            if (lineWidth <= contentWidth || j >= options.maxIterations) {\n                textLine += options.ellipsis;\n                break;\n            }\n\n            var subLength = j === 0\n                ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth)\n                : lineWidth > 0\n                ? Math.floor(textLine.length * contentWidth / lineWidth)\n                : 0;\n\n            textLine = textLine.substr(0, subLength);\n            lineWidth = getTextWidth(textLine, font);\n        }\n\n        if (textLine === '') {\n            textLine = options.placeholder;\n        }\n\n        return textLine;\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    /**\n     * @public\n     * @param {string} font\n     * @return {number} line height\n     */\n    function getLineHeight(font) {\n        // FIXME A rough approach.\n        return getTextWidth('国', font);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {Object} width\n     */\n    function measureText(text, font) {\n        var ctx = util.getContext();\n        ctx.font = font || DEFAULT_FONT;\n        return ctx.measureText(text);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {Object} [truncate]\n     * @return {Object} block: {lineHeight, lines, height, outerHeight}\n     *  Notice: for performance, do not calculate outerWidth util needed.\n     */\n    function parsePlainText(text, font, padding, truncate) {\n        text != null && (text += '');\n\n        var lineHeight = getLineHeight(font);\n        var lines = text ? text.split('\\n') : [];\n        var height = lines.length * lineHeight;\n        var outerHeight = height;\n\n        if (padding) {\n            outerHeight += padding[0] + padding[2];\n        }\n\n        if (text && truncate) {\n            var truncOuterHeight = truncate.outerHeight;\n            var truncOuterWidth = truncate.outerWidth;\n            if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n                text = '';\n                lines = [];\n            }\n            else if (truncOuterWidth != null) {\n                var options = prepareTruncateOptions(\n                    truncOuterWidth - (padding ? padding[1] + padding[3] : 0),\n                    font,\n                    truncate.ellipsis,\n                    {minChar: truncate.minChar, placeholder: truncate.placeholder}\n                );\n\n                // FIXME\n                // It is not appropriate that every line has '...' when truncate multiple lines.\n                for (var i = 0, len = lines.length; i < len; i++) {\n                    lines[i] = truncateSingleLine(lines[i], options);\n                }\n            }\n        }\n\n        return {\n            lines: lines,\n            height: height,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight\n        };\n    }\n\n    /**\n     * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n     * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n     *\n     * @public\n     * @param {string} text\n     * @param {Object} style\n     * @return {Object} block\n     * {\n     *      width,\n     *      height,\n     *      lines: [{\n     *          lineHeight,\n     *          width,\n     *          tokens: [[{\n     *              styleName,\n     *              text,\n     *              width,      // include textPadding\n     *              height,     // include textPadding\n     *              textWidth, // pure text width\n     *              textHeight, // pure text height\n     *              lineHeihgt,\n     *              font,\n     *              textAlign,\n     *              textVerticalAlign\n     *          }], [...], ...]\n     *      }, ...]\n     * }\n     * If styleName is undefined, it is plain text.\n     */\n    function parseRichText(text, style) {\n        var contentBlock = {lines: [], width: 0, height: 0};\n\n        text != null && (text += '');\n        if (!text) {\n            return contentBlock;\n        }\n\n        var lastIndex = STYLE_REG.lastIndex = 0;\n        var result;\n        while ((result = STYLE_REG.exec(text)) != null)  {\n            var matchedIndex = result.index;\n            if (matchedIndex > lastIndex) {\n                pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n            }\n            pushTokens(contentBlock, result[2], result[1]);\n            lastIndex = STYLE_REG.lastIndex;\n        }\n\n        if (lastIndex < text.length) {\n            pushTokens(contentBlock, text.substring(lastIndex, text.length));\n        }\n\n        var lines = contentBlock.lines;\n        var contentHeight = 0;\n        var contentWidth = 0;\n        // For `textWidth: 100%`\n        var pendingList = [];\n\n        var stlPadding = style.textPadding;\n\n        var truncate = style.truncate;\n        var truncateWidth = truncate && truncate.outerWidth;\n        var truncateHeight = truncate && truncate.outerHeight;\n        if (stlPadding) {\n            truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n            truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n        }\n\n        // Calculate layout info of tokens.\n        for (var i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var lineHeight = 0;\n            var lineWidth = 0;\n\n            for (var j = 0; j < line.tokens.length; j++) {\n                var token = line.tokens[j];\n                var tokenStyle = token.styleName && style.rich[token.styleName] || {};\n                // textPadding should not inherit from style.\n                var textPadding = token.textPadding = tokenStyle.textPadding;\n\n                // textFont has been asigned to font by `normalizeStyle`.\n                var font = token.font = tokenStyle.font || style.font;\n\n                // textHeight can be used when textVerticalAlign is specified in token.\n                var tokenHeight = token.textHeight = retrieve2(\n                    // textHeight should not be inherited, consider it can be specified\n                    // as box height of the block.\n                    tokenStyle.textHeight, textContain.getLineHeight(font)\n                );\n                textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n                token.height = tokenHeight;\n                token.lineHeight = retrieve3(\n                    tokenStyle.textLineHeight, style.textLineHeight, tokenHeight\n                );\n\n                token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n                token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n                if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n                    return {lines: [], width: 0, height: 0};\n                }\n\n                token.textWidth = textContain.getWidth(token.text, font);\n                var tokenWidth = tokenStyle.textWidth;\n                var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto';\n\n                // Percent width, can be `100%`, can be used in drawing separate\n                // line when box width is needed to be auto.\n                if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n                    token.percentWidth = tokenWidth;\n                    pendingList.push(token);\n                    tokenWidth = 0;\n                    // Do not truncate in this case, because there is no user case\n                    // and it is too complicated.\n                }\n                else {\n                    if (tokenWidthNotSpecified) {\n                        tokenWidth = token.textWidth;\n\n                        // FIXME: If image is not loaded and textWidth is not specified, calling\n                        // `getBoundingRect()` will not get correct result.\n                        var textBackgroundColor = tokenStyle.textBackgroundColor;\n                        var bgImg = textBackgroundColor && textBackgroundColor.image;\n\n                        // Use cases:\n                        // (1) If image is not loaded, it will be loaded at render phase and call\n                        // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n                        // image, and then the right size will be calculated here at the next tick.\n                        // See `graphic/helper/text.js`.\n                        // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n                        // use `imageHelper.findExistImage` to find cached image.\n                        // `imageHelper.findExistImage` will always be called here before\n                        // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n                        // which ensures that image will not be rendered before correct size calcualted.\n                        if (bgImg) {\n                            bgImg = imageHelper.findExistImage(bgImg);\n                            if (imageHelper.isImageReady(bgImg)) {\n                                tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n                            }\n                        }\n                    }\n\n                    var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n                    tokenWidth += paddingW;\n\n                    var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n                    if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n                        if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n                            token.text = '';\n                            token.textWidth = tokenWidth = 0;\n                        }\n                        else {\n                            token.text = truncateText(\n                                token.text, remianTruncWidth - paddingW, font, truncate.ellipsis,\n                                {minChar: truncate.minChar}\n                            );\n                            token.textWidth = textContain.getWidth(token.text, font);\n                            tokenWidth = token.textWidth + paddingW;\n                        }\n                    }\n                }\n\n                lineWidth += (token.width = tokenWidth);\n                tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n            }\n\n            line.width = lineWidth;\n            line.lineHeight = lineHeight;\n            contentHeight += lineHeight;\n            contentWidth = Math.max(contentWidth, lineWidth);\n        }\n\n        contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n        contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n        if (stlPadding) {\n            contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n            contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n        }\n\n        for (var i = 0; i < pendingList.length; i++) {\n            var token = pendingList[i];\n            var percentWidth = token.percentWidth;\n            // Should not base on outerWidth, because token can not be placed out of padding.\n            token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n        }\n\n        return contentBlock;\n    }\n\n    function pushTokens(block, str, styleName) {\n        var isEmptyStr = str === '';\n        var strs = str.split('\\n');\n        var lines = block.lines;\n\n        for (var i = 0; i < strs.length; i++) {\n            var text = strs[i];\n            var token = {\n                styleName: styleName,\n                text: text,\n                isLineHolder: !text && !isEmptyStr\n            };\n\n            // The first token should be appended to the last line.\n            if (!i) {\n                var tokens = (lines[lines.length - 1] || (lines[0] = {tokens: []})).tokens;\n\n                // Consider cases:\n                // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n                // (which is a placeholder) should be replaced by new token.\n                // (2) A image backage, where token likes {a|}.\n                // (3) A redundant '' will affect textAlign in line.\n                // (4) tokens with the same tplName should not be merged, because\n                // they should be displayed in different box (with border and padding).\n                var tokensLen = tokens.length;\n                (tokensLen === 1 && tokens[0].isLineHolder)\n                    ? (tokens[0] = token)\n                    // Consider text is '', only insert when it is the \"lineHolder\" or\n                    // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n                    : ((text || !tokensLen || isEmptyStr) && tokens.push(token));\n            }\n            // Other tokens always start a new line.\n            else {\n                // If there is '', insert it as a placeholder.\n                lines.push({tokens: [token]});\n            }\n        }\n    }\n\n    function makeFont(style) {\n        // FIXME in node-canvas fontWeight is before fontStyle\n        // Use `fontSize` `fontFamily` to check whether font properties are defined.\n        return (style.fontSize || style.fontFamily) && [\n            style.fontStyle,\n            style.fontWeight,\n            (style.fontSize || 12) + 'px',\n            // If font properties are defined, `fontFamily` should not be ignored.\n            style.fontFamily || 'sans-serif'\n        ].join(' ') || style.textFont || style.font;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: measureText,\n\n        getLineHeight: getLineHeight,\n\n        parsePlainText: parsePlainText,\n\n        parseRichText: parseRichText,\n\n        adjustTextX: adjustTextX,\n\n        adjustTextY: adjustTextY,\n\n        makeFont: makeFont,\n\n        DEFAULT_FONT: DEFAULT_FONT\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n\n/***/ \"4tk+\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(\"j9yU\");\n    var color = __webpack_require__(\"fftb\");\n    var util = __webpack_require__(\"IW7i\");\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (!forceAnimate && isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} [easing]\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @param  {boolean} forceAnimate\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing, forceAnimate) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName, forceAnimate\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            // This optimization will help the case that in the upper application\n            // the view may be refreshed frequently, where animation will be\n            // called repeatly but nothing changed.\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n\n/***/ \"55nF\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n\n/***/ \"5PYv\":\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n\n/***/ \"5WUZ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var modelUtil = __webpack_require__(\"+Qey\");\n    var ComponentModel = __webpack_require__(\"gBVq\");\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n\n/***/ \"5Ww7\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var symbolUtil = __webpack_require__(\"4AlW\");\n    var graphic = __webpack_require__(\"Zr1P\");\n    var numberUtil = __webpack_require__(\"8wRg\");\n    var labelHelper = __webpack_require__(\"ZKTi\");\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n\n        if (valueDim != null) {\n            graphic.setLabelStyle(\n                elStyle, hoverItemStyle, labelModel, hoverLabelModel,\n                {\n                    labelFetcher: seriesModel,\n                    labelDataIndex: idx,\n                    defaultText: data.get(valueDim, idx),\n                    isRectText: true,\n                    autoColor: color\n                }\n            );\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        // FIXME\n        // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = null;\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n\n/***/ \"5X0Y\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(\"Zr1P\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n\n/***/ \"5nuQ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var modelUtil = __webpack_require__(\"+Qey\");\n    var modelHelper = __webpack_require__(\"UYnM\");\n    var findPointFromSeries = __webpack_require__(\"eSGo\");\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        // Pending\n        // See #6121. But we are not able to reproduce it yet.\n        if (!coordSysAxesInfo) {\n            return;\n        }\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n\n/***/ \"636P\":\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"6NfO\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(\"f68a\");\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(\"PRM/\"), 'Object', { defineProperty: __webpack_require__(\"Lohu\").f });\n\n\n/***/ }),\n\n/***/ \"6PzY\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"vkao\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"XkoO\")(\"cc448e8c\", content, true);\n\n/***/ }),\n\n/***/ \"6ygO\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n\n    var Gradient = __webpack_require__(\"N3i3\");\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n\n/***/ \"7JVc\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: ['title', 'routerName', 'fixed', 'rightText'],\n  data: function data() {\n    return {\n      name: this.routerName === undefined ? '' : this.routerName,\n      isfixed: this.fixed === undefined ? true : this.fixed\n    };\n  },\n\n  computed: {\n    pageTitle: function pageTitle() {\n      return this.title;\n    },\n    rightLabel: function rightLabel() {\n      return this.rightText === undefined ? '' : this.rightText;\n    }\n  },\n  methods: {\n    rightTextClick: function rightTextClick() {\n      this.$emit('rightClick');\n    },\n    ceshi: function ceshi() {\n      this.$router.goback();\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"7Zni\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"BkJT\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"tab.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"7qHl\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(\"X609\");\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n/***/ }),\n\n/***/ \"8QnN\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(\"5PYv\");\n    var curve = __webpack_require__(\"L/5X\");\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n\n/***/ \"8wRg\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n\n/***/ \"9mQP\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(\"ETnK\");\n\n    module.exports = __webpack_require__(\"/wKD\").extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"A9Km\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var formatUtil = __webpack_require__(\"LXmB\");\n    var classUtil = __webpack_require__(\"TwzL\");\n    var modelUtil = __webpack_require__(\"+Qey\");\n    var ComponentModel = __webpack_require__(\"gBVq\");\n    var colorPaletteMixin = __webpack_require__(\"gshH\");\n    var env = __webpack_require__(\"mUcc\");\n    var layout = __webpack_require__(\"Vhze\");\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            // Backward compat: using subType on theme.\n            // But if name duplicate between series subType\n            // (for example: parallel) add component mainType,\n            // add suffix 'Series'.\n            var themeSubType = this.subType;\n            if (ComponentModel.hasClass(themeSubType)) {\n                themeSubType += 'Series';\n            }\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `show`\n            modelUtil.defaultEmphasis(option.label, ['show']);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                var props = ['show'];\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, props);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n\n/***/ \"B6bR\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"7Zni\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"XkoO\")(\"2a1d6ba2\", content, true);\n\n/***/ }),\n\n/***/ \"BrIN\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_tab_vue__ = __webpack_require__(\"dNmU\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_0_4_vue_loader_lib_template_compiler_index_id_data_v_a87ec720_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_template_index_0_tab_vue__ = __webpack_require__(\"G9LC\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"B6bR\")\n}\nvar normalizeComponent = __webpack_require__(\"J0+h\")\n/* script */\n\n/* template */\n\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_tab_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_0_4_vue_loader_lib_template_compiler_index_id_data_v_a87ec720_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_template_index_0_tab_vue__[\"a\" /* default */],\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"CZ4L\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var Axis = __webpack_require__(\"3YoW\");\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n\n/***/ \"D1zL\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(\"5PYv\");\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n\n/***/ \"D7iD\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            onZeroAxisIndex: null,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            fontSize: 12\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n        // maxInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n\n/***/ \"DY7z\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(\"LDzn\");\n    var BoundingRect = __webpack_require__(\"ZgA1\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var imageHelper = __webpack_require__(\"XlEP\");\n\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n\n            var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this);\n\n            if (!image || !imageHelper.isImageReady(image)) {\n                return;\n            }\n\n            // 图片已经加载完成\n            // if (image.nodeName.toUpperCase() == 'IMG') {\n            //     if (!image.complete) {\n            //         return;\n            //     }\n            // }\n            // Else is canvas\n\n            var x = style.x || 0;\n            var y = style.y || 0;\n            var width = style.width;\n            var height = style.height;\n            var aspect = image.width / image.height;\n            if (width == null && height != null) {\n                // Keep image/height ratio\n                width = height * aspect;\n            }\n            else if (height == null && width != null) {\n                height = width / aspect;\n            }\n            else if (width == null && height == null) {\n                width = image.width;\n                height = image.height;\n            }\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            if (style.sWidth && style.sHeight) {\n                var sx = style.sx || 0;\n                var sy = style.sy || 0;\n                ctx.drawImage(\n                    image,\n                    sx, sy, style.sWidth, style.sHeight,\n                    x, y, width, height\n                );\n            }\n            else if (style.sx && style.sy) {\n                var sx = style.sx;\n                var sy = style.sy;\n                var sWidth = width - sx;\n                var sHeight = height - sy;\n                ctx.drawImage(\n                    image,\n                    sx, sy, sWidth, sHeight,\n                    x, y, width, height\n                );\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n\n/***/ \"DacG\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(\"cqWi\");\n    var axisPointerModelHelper = __webpack_require__(\"UYnM\");\n    var axisTrigger = __webpack_require__(\"5nuQ\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n\n    __webpack_require__(\"RMQR\");\n    __webpack_require__(\"qEZ+\");\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(\"eCMv\");\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n/***/ }),\n\n/***/ \"DoL6\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(\"cqWi\").extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"E6pA\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(\"LDzn\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var textContain = __webpack_require__(\"4EB+\");\n    var textHelper = __webpack_require__(\"wrtm\");\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            // Use props with prefix 'text'.\n            style.fill = style.stroke = style.shadowBlur = style.shadowColor =\n                style.shadowOffsetX = style.shadowOffsetY = null;\n\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            this.setTransform(ctx);\n\n            textHelper.renderText(this, ctx, text, style);\n\n            this.restoreTransform(ctx);\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            if (!this._rect) {\n                var text = style.text;\n                text != null ? (text += '') : (text = '');\n\n                var rect = textContain.getBoundingRect(\n                    style.text + '',\n                    style.font,\n                    style.textAlign,\n                    style.textVerticalAlign,\n                    style.textPadding,\n                    style.rich\n                );\n\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n\n                if (textHelper.getStroke(style.textStroke, style.textLineWidth)) {\n                    var w = style.textLineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n\n/***/ \"ETnK\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(\"/Qyl\");\n    var smoothBezier = __webpack_require__(\"D1zL\");\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"EdBd\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(\"8wRg\");\n    var formatUtil = __webpack_require__(\"LXmB\");\n    var Scale = __webpack_require__(\"OWrI\");\n    var helper = __webpack_require__(\"uqT/\");\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         * @param {number} [maxInterval]\n         */\n        niceTicks: function (splitNumber, minInterval, maxInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(\n                extent, splitNumber, minInterval, maxInterval\n            );\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval]\n         * @param {boolean} [opt.maxInterval]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n\n/***/ \"EnYE\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var clazzUtil = __webpack_require__(\"TwzL\");\n    var env = __webpack_require__(\"mUcc\");\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(\"kHI7\"));\n    mixin(Model, __webpack_require__(\"JUn3\"));\n    mixin(Model, __webpack_require__(\"+Ziq\"));\n    mixin(Model, __webpack_require__(\"USOM\"));\n\n    module.exports = Model;\n\n\n/***/ }),\n\n/***/ \"EuDp\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(\"Zr1P\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var echarts = __webpack_require__(\"cqWi\");\n\n    __webpack_require__(\"y7Fz\");\n\n    __webpack_require__(\"bZMc\");\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"Fwod\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var Cartesian = __webpack_require__(\"WnAC\");\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n\n/***/ \"G9LC\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', {\n    staticClass: \"my-tab\"\n  }, _vm._l((_vm.list), function(item, key) {\n    return _c('div', {\n      class: {\n        mySelected: item.id == _vm.active\n      },\n      on: {\n        \"click\": function($event) {\n          _vm.swapTab(item.id)\n        }\n      }\n    }, [_c('label', [_vm._v(_vm._s(item.categoryName))])])\n  }))\n}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"GLZC\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var graphic = __webpack_require__(\"Zr1P\");\n    var textContain = __webpack_require__(\"4EB+\");\n    var formatUtil = __webpack_require__(\"LXmB\");\n    var matrix = __webpack_require__(\"0TlH\");\n    var axisHelper = __webpack_require__(\"Ji8X\");\n    var AxisBuilder = __webpack_require__(\"sCIY\");\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = labelModel.getFont();\n        var textRect = textContain.getBoundingRect(text, font);\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            // TODO: rich\n            style: {\n                text: text,\n                textFont: font,\n                textFill: labelModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ \"GYRJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(\"sugb\");\n    var componentUtil = __webpack_require__(\"eY2H\");\n    var clazzUtil = __webpack_require__(\"TwzL\");\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n\n/***/ \"HILd\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(\"++G3\");\n    var completeDimensions = __webpack_require__(\"aXfO\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var modelUtil = __webpack_require__(\"+Qey\");\n    var CoordinateSystem = __webpack_require__(\"55nF\");\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n\n/***/ \"HJE7\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(\"HILd\");\n    var symbolUtil = __webpack_require__(\"4AlW\");\n    var axisHelper = __webpack_require__(\"Ji8X\");\n    var axisModelCommonMixin = __webpack_require__(\"tiCr\");\n    var Model = __webpack_require__(\"EnYE\");\n    var util = __webpack_require__(\"IW7i\");\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: __webpack_require__(\"aXfO\"),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"HQ6Y\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(\"fIwg\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var Eventful = __webpack_require__(\"HxU1\");\n    var env = __webpack_require__(\"mUcc\");\n    var GestureMgr = __webpack_require__(\"wKpZ\");\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n\n/***/ \"HxU1\":\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n\n/***/ \"IW7i\":\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            var Ctor = source.constructor;\n            if (source.constructor.from) {\n                result = Ctor.from(source);\n            }\n            else {\n                result = new Ctor(source.length);\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * Low performance.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    function retrieve2(value0, value1) {\n        return value0 != null\n            ? value0\n            : value1;\n    }\n\n    function retrieve3(value0, value1, value2) {\n        return value0 != null\n            ? value0\n            : value1 != null\n            ? value1\n            : value2;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     * @return {Array.<number>}\n     */\n    function normalizeCssArray(val) {\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        var len = val.length;\n        if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[HASH_MAP_PREFIX + key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        retrieve2: retrieve2,\n        retrieve3: retrieve3,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        normalizeCssArray: normalizeCssArray,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n\n/***/ \"IpD5\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(\"Zr1P\");\n    var Symbol = __webpack_require__(\"5Ww7\");\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n\n/***/ \"J0+h\":\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n\n/***/ \"JGbQ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(\"Ug08\");\n    var util = __webpack_require__(\"IW7i\");\n    var log = __webpack_require__(\"ptTv\");\n    var BoundingRect = __webpack_require__(\"ZgA1\");\n    var timsort = __webpack_require__(\"Vsag\");\n\n    var Layer = __webpack_require__(\"sIBF\");\n\n    var requestAnimationFrame = __webpack_require__(\"Rwy1\");\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Object} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        getViewportRootOffset: function () {\n            var viewportRoot = this.getViewportRoot();\n            if (viewportRoot) {\n                return {\n                    offsetLeft: viewportRoot.offsetLeft || 0,\n                    offsetTop: viewportRoot.offsetTop || 0\n                };\n            }\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            // IE8 does not support getComputedStyle, but it use VML.\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(\"DY7z\");\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n\n/***/ \"JUn3\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(\"j8iE\")(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n\n/***/ \"Ji8X\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(\"3O3a\");\n    var IntervalScale = __webpack_require__(\"EdBd\");\n    __webpack_require__(\"WHYm\");\n    __webpack_require__(\"mmx0\");\n    var Scale = __webpack_require__(\"OWrI\");\n\n    var numberUtil = __webpack_require__(\"8wRg\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var textContain = __webpack_require__(\"4EB+\");\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        else if (typeof min === 'function') {\n            min = min({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n        else if (typeof max === 'function') {\n            max = max({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        var scaleType = scale.type;\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('minInterval') : null,\n            maxInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('maxInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n\n/***/ \"Jwij\":\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ \"Jx77\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(\"mUcc\");\n\n    // Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n    // where exception \"unexpected call to method or property access\"\n    // might be thrown when calling ctx.fill or ctx.stroke after a path\n    // whose area size is zero is drawn and ctx.clip() is called and\n    // shadowBlur is set. See #4572, #3112, #5777.\n    // (e.g.,\n    //  ctx.moveTo(10, 10);\n    //  ctx.lineTo(20, 10);\n    //  ctx.closePath();\n    //  ctx.clip();\n    //  ctx.shadowBlur = 10;\n    //  ...\n    //  ctx.fill();\n    // )\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = function (orignalBrush) {\n\n        // version string can be: '11.0'\n        return (env.browser.ie && env.browser.version >= 11)\n\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var clipPath = clipPaths[i];\n                        var shape = clipPath && clipPath.shape;\n                        var type = clipPath && clipPath.type;\n\n                        if (shape && (\n                            (type === 'sector' && shape.startAngle === shape.endAngle)\n                            || (type === 'rect' && (!shape.width || !shape.height))\n                        )) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                // It is save to put shadowTemp static, because shadowTemp\n                                // will be all modified each item brush called.\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                orignalBrush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n\n            : orignalBrush;\n    };\n\n\n\n/***/ }),\n\n/***/ \"KOAn\":\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n\n/***/ \"L/5X\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(\"5PYv\");\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n\n/***/ \"LDzn\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n\n    var Style = __webpack_require__(\"X76A\");\n\n    var Element = __webpack_require__(\"RSUm\");\n    var RectText = __webpack_require__(\"zM+A\");\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style, this);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj, this);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n\n/***/ \"LEnD\":\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n\n/***/ \"LXmB\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var numberUtil = __webpack_require__(\"8wRg\");\n    var textContain = __webpack_require__(\"4EB+\");\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    formatUtil.normalizeCssArray = zrUtil.normalizeCssArray;\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .replace('M', M)\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    formatUtil.getTextRect = textContain.getBoundingRect;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n\n/***/ \"Lohu\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(\"fHSC\");\nvar IE8_DOM_DEFINE = __webpack_require__(\"esV0\");\nvar toPrimitive = __webpack_require__(\"7qHl\");\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(\"PRM/\") ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n/***/ }),\n\n/***/ \"Lr5q\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(\"Sdkl\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var formatUtil = __webpack_require__(\"LXmB\");\n    var numberUtil = __webpack_require__(\"8wRg\");\n    var graphic = __webpack_require__(\"Zr1P\");\n    var findPointFromSeries = __webpack_require__(\"eSGo\");\n    var layoutUtil = __webpack_require__(\"Vhze\");\n    var env = __webpack_require__(\"mUcc\");\n    var Model = __webpack_require__(\"EnYE\");\n    var globalListener = __webpack_require__(\"36nW\");\n    var axisHelper = __webpack_require__(\"Ji8X\");\n    var axisPointerViewHelper = __webpack_require__(\"GLZC\");\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    __webpack_require__(\"cqWi\").extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>|Object} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function getOuterSize(el) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        // Consider browser compatibility.\n        // IE8 does not support getComputedStyle.\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            var stl = document.defaultView.getComputedStyle(el);\n            if (stl) {\n                width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10)\n                    + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n                height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10)\n                    + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n            }\n        }\n\n        return {width: width, height: height};\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n/***/ }),\n\n/***/ \"N3i3\":\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n\n/***/ \"OWKC\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(\"LEnD\");\n    var env = __webpack_require__(\"mUcc\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n\n    var Handler = __webpack_require__(\"WtYn\");\n    var Storage = __webpack_require__(\"ZwVc\");\n    var Animation = __webpack_require__(\"WEGk\");\n    var HandlerProxy = __webpack_require__(\"HQ6Y\");\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(\"JGbQ\")\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.6.1';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function (dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function (id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // var start = new Date();\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n            // var end = new Date();\n\n            // var log = document.getElementById('log');\n            // if (log) {\n            //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n            // }\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n\n/***/ \"OWrI\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(\"TwzL\");\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n\n/***/ \"P469\":\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"PRM/\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(\"YEmw\")(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n\n/***/ \"PiNk\":\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"Pqkg\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"reset-psw-view view-background\"\n  }, [_c('header-view', {\n    attrs: {\n      \"fixed\": _vm.fixed,\n      \"title\": _vm.title,\n      \"routerName\": _vm.routerName\n    }\n  }), _vm._v(\" \"), _c('tab-view', {\n    attrs: {\n      \"action\": _vm.tabAction,\n      \"activeId\": _vm.tabId\n    },\n    on: {\n      \"changeTab\": _vm.changeTab\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"chart\",\n    attrs: {\n      \"id\": \"mychart\"\n    }\n  }), _vm._v(\" \"), _c('ul', {\n    staticClass: \"details-list\"\n  }, [_vm._m(0), _vm._v(\" \"), _vm._l((_vm.detailsList), function(item) {\n    return _c('li', [_c('div', {\n      staticClass: \"type-date\"\n    }, [_c('span', {\n      staticClass: \"item-type\"\n    }, [_vm._v(_vm._s(item.profitType))]), _c('span', [_vm._v(_vm._s(item.takeTime))])]), _c('span', [_vm._v(_vm._s(item.joyScore))]), _c('span', {\n      staticClass: \"item-balance\"\n    }, [_vm._v(_vm._s(item.totalJoyScore))])])\n  })], 2)], 1)\n}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('li', [_c('span', {\n    staticClass: \"details-type\"\n  }, [_vm._v(\"类型\")]), _c('span', [_vm._v(\"金额\")]), _c('span', [_vm._v(\"余额\")])])\n}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"RMQR\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(\"cqWi\");\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                color: '#fff',\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n\n/***/ \"RNqR\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var modelUtil = __webpack_require__(\"+Qey\");\n    var Model = __webpack_require__(\"EnYE\");\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(\"gBVq\");\n\n    var globalDefault = __webpack_require__(\"0oBF\");\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(\"gshH\"));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n\n/***/ \"RPAd\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var echarts = __webpack_require__(\"cqWi\");\n    var graphic = __webpack_require__(\"Zr1P\");\n    var layout = __webpack_require__(\"Vhze\");\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: graphic.setTextStyle({}, textStyleModel, {\n                    text: titleModel.get('text'),\n                    textFill: textStyleModel.getTextColor()\n                }, {disableBox: true}),\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: graphic.setTextStyle({}, subtextStyleModel, {\n                    text: subText,\n                    textFill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textVerticalAlign: 'top'\n                }, {disableBox: true}),\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2],\n                    r: titleModel.get('borderRadius')\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"RSUm\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(\"LEnD\");\n    var Eventful = __webpack_require__(\"HxU1\");\n    var Transformable = __webpack_require__(\"gXiF\");\n    var Animatable = __webpack_require__(\"VzoJ\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n\n/***/ \"Rwy1\":\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n/***/ }),\n\n/***/ \"Sdkl\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var zrColor = __webpack_require__(\"fftb\");\n    var eventUtil = __webpack_require__(\"fIwg\");\n    var formatUtil = __webpack_require__(\"LXmB\");\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(\"mUcc\");\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRootOffset;\n            if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n                x += viewportRootOffset.offsetLeft;\n                y += viewportRootOffset.offsetTop;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n\n/***/ \"SrZs\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n\n    var Gradient = __webpack_require__(\"N3i3\");\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n\n/***/ \"TUEb\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n/***/ }),\n\n/***/ \"Td34\":\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n\n/***/ \"TwzL\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n\n/***/ \"UEU6\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"cS9B\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"XkoO\")(\"1ba6a522\", content, true);\n\n/***/ }),\n\n/***/ \"USOM\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(\"j8iE\")(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"UYnM\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var Model = __webpack_require__(\"EnYE\");\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ \"Ug08\":\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n\n/***/ \"VUgN\":\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n\n/***/ \"VZiK\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(\"N3i3\");\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n\n/***/ \"Vhze\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var BoundingRect = __webpack_require__(\"ZgA1\");\n    var numberUtil = __webpack_require__(\"8wRg\");\n    var formatUtil = __webpack_require__(\"LXmB\");\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                // FIXME compare before adding gap?\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    // FIXME: consider rect.y is not `0`?\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect {width, height}\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        if (aspect != null) {\n            // If width and height are not given\n            // 1. Graph should not exceeds the container\n            // 2. Aspect must be keeped\n            // 3. Graph should take the space as more as possible\n            // FIXME\n            // Margin is not considered, because there is no case that both\n            // using margin and aspect so far.\n            if (isNaN(width) && isNaN(height)) {\n                if (aspect > containerWidth / containerHeight) {\n                    width = containerWidth * 0.8;\n                }\n                else {\n                    height = containerHeight * 0.8;\n                }\n            }\n\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - horizontalMargin - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - verticalMargin - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n     * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        // The real width and height can not be specified but calculated by the given el.\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n     *  that width (or height) should not be calculated by left and right (or top and bottom).\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n\n/***/ \"VknR\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var Path = __webpack_require__(\"/wKD\");\n    var fixClipWithShadow = __webpack_require__(\"Jx77\");\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: fixClipWithShadow(Path.prototype.brush),\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ \"Vsag\":\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n\n/***/ \"VzoJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(\"4tk+\");\n    var util = __webpack_require__(\"IW7i\");\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(\"ptTv\");\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path The path to fetch value from object, like 'a.b.c'.\n         * @param {boolean} [loop] Whether to loop animation.\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * Caution: this method will stop previous animation.\n         * So do not use this method to one element twice before\n         * animation starts, unless you know what you are doing.\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         * @param {Function} [forceAnimate] Prevent stop animation and callback\n         *        immediently when target values are the same as current values.\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing, forceAnimate);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n\n/***/ \"WEGk\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(\"IW7i\");\n    var Dispatcher = __webpack_require__(\"fIwg\").Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(\"Rwy1\");\n\n    var Animator = __webpack_require__(\"4tk+\");\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n\n/***/ \"WHYm\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var numberUtil = __webpack_require__(\"8wRg\");\n    var formatUtil = __webpack_require__(\"LXmB\");\n    var scaleHelper = __webpack_require__(\"uqT/\");\n\n    var IntervalScale = __webpack_require__(\"EdBd\");\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum, minInterval, maxInterval) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n\n            if (minInterval != null && approxInterval < minInterval) {\n                approxInterval = minInterval;\n            }\n            if (maxInterval != null && approxInterval > maxInterval) {\n                approxInterval = maxInterval;\n            }\n\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n\n/***/ \"WIVL\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(\"xJeg\").CMD;\n    var line = __webpack_require__(\"P469\");\n    var cubic = __webpack_require__(\"dIPJ\");\n    var quadratic = __webpack_require__(\"lIfk\");\n    var arc = __webpack_require__(\"k78g\");\n    var normalizeRadian = __webpack_require__(\"636P\").normalizeRadian;\n    var curve = __webpack_require__(\"L/5X\");\n\n    var windingLine = __webpack_require__(\"q7n9\");\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"WnAC\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n\n/***/ \"WtYn\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(\"IW7i\");\n    var Draggable = __webpack_require__(\"Td34\");\n\n    var Eventful = __webpack_require__(\"HxU1\");\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget, x, y}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var lastHoveredTarget = lastHovered.target;\n\n            // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n            // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n            // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n            // See #6198.\n            if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n                lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n                lastHoveredTarget = lastHovered.target;\n            }\n\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var el = targetInfo.target;\n            if (el && el.silent) {\n                return;\n            }\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {x: x, y: y};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n/***/ }),\n\n/***/ \"X609\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n/***/ }),\n\n/***/ \"X76A\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var textHelper = __webpack_require__(\"wrtm\");\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts, host) {\n        this.extendFrom(opts, false);\n        this.host = host;\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {module:zrender/graphic/Displayable}\n         */\n        host: null,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * If `fontSize` or `fontFamily` exists, `font` will be reset by\n         * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n         * So do not visit it directly in upper application (like echarts),\n         * but use `contain/text#makeFont` instead.\n         * @type {string}\n         */\n        font: null,\n\n        /**\n         * The same as font. Use font please.\n         * @deprecated\n         * @type {string}\n         */\n        textFont: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontStyle: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontWeight: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * Should be 12 but not '12px'.\n         * @type {number}\n         */\n        fontSize: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontFamily: null,\n\n        /**\n         * Reserved for special functinality, like 'hr'.\n         * @type {string}\n         */\n        textTag: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * @type {number}\n         */\n        textWidth: null,\n\n        /**\n         * Only for textBackground.\n         * @type {number}\n         */\n        textHeight: null,\n\n        /**\n         * textStroke may be set as some color as a default\n         * value in upper applicaion, where the default value\n         * of textLineWidth should be 0 to make sure that\n         * user can choose to do not use text stroke.\n         * @type {number}\n         */\n        textLineWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textLineHeight: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * Based on x, y of rect.\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * @type {string}\n         */\n        textShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * @type {string}\n         */\n        textBoxShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetY: 0,\n\n        /**\n         * Whether transform text.\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        transformText: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and transformText is false.\n         */\n        textRotation: 0,\n\n        /**\n         * Text origin of text rotation, like [10, 40].\n         * Based on x, y of rect.\n         * Useful in label rotation of circular symbol.\n         * By default, this origin is textPosition.\n         * Can be 'center'.\n         * @type {string|Array.<number>}\n         */\n        textOrigin: null,\n\n        /**\n         * @type {string}\n         */\n        textBackgroundColor: null,\n\n        /**\n         * @type {string}\n         */\n        textBorderColor: null,\n\n        /**\n         * @type {number}\n         */\n        textBorderWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textBorderRadius: 0,\n\n        /**\n         * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n         * @type {number|Array.<number>}\n         */\n        textPadding: null,\n\n        /**\n         * Text styles for rich text.\n         * @type {Object}\n         */\n        rich: null,\n\n        /**\n         * {outerWidth, outerHeight, ellipsis, placeholder}\n         * @type {Object}\n         */\n        truncate: null,\n\n        /**\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         * @type {string}\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite true: overwrirte any way.\n         *                            false: overwrite only when !target.hasOwnProperty\n         *                            others: overwrite when property is not null/undefined.\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite === true\n                            || (\n                                overwrite === false\n                                    ? !this.hasOwnProperty(name)\n                                    : otherStyle[name] != null\n                            )\n                        )\n                    ) {\n                        this[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n\n/***/ \"XehA\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(\"/wKD\");\n    var vec2 = __webpack_require__(\"5PYv\");\n    var fixClipWithShadow = __webpack_require__(\"Jx77\");\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n\n/***/ \"XlEP\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var LRU = __webpack_require__(\"2Ttr\");\n    var globalImageCache = new LRU(50);\n\n    var helper = {};\n\n    /**\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.findExistImage = function (newImageOrSrc) {\n        if (typeof newImageOrSrc === 'string') {\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n            return cachedImgObj && cachedImgObj.image;\n        }\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    /**\n     * Caution: User should cache loaded images, but not just count on LRU.\n     * Consider if required images more than LRU size, will dead loop occur?\n     *\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n     * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n     * @param {Function} [cb] params: (image, cbPayload)\n     * @param {Object} [cbPayload] Payload on cb calling.\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.createOrUpdateImage = function (newImageOrSrc, image, hostEl, cb, cbPayload) {\n        if (!newImageOrSrc) {\n            return image;\n        }\n        else if (typeof newImageOrSrc === 'string') {\n\n            // Image should not be loaded repeatly.\n            if ((image && image.__zrImageSrc === newImageOrSrc) || !hostEl) {\n                return image;\n            }\n\n            // Only when there is no existent image or existent image src\n            // is different, this method is responsible for load.\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\n            var pendingWrap = {hostEl: hostEl, cb: cb, cbPayload: cbPayload};\n\n            if (cachedImgObj) {\n                image = cachedImgObj.image;\n                !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n            }\n            else {\n                !image && (image = new Image());\n                image.onload = imageOnLoad;\n\n                globalImageCache.put(\n                    newImageOrSrc,\n                    image.__cachedImgObj = {\n                        image: image,\n                        pending: [pendingWrap]\n                    }\n                );\n\n                image.src = image.__zrImageSrc = newImageOrSrc;\n            }\n\n            return image;\n        }\n        // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    function imageOnLoad() {\n        var cachedImgObj = this.__cachedImgObj;\n        this.onload = this.__cachedImgObj = null;\n\n        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n            var pendingWrap = cachedImgObj.pending[i];\n            var cb = pendingWrap.cb;\n            cb && cb(this, pendingWrap.cbPayload);\n            pendingWrap.hostEl.dirty();\n        }\n        cachedImgObj.pending.length = 0;\n    }\n\n    var isImageReady = helper.isImageReady = function (image) {\n        return image && image.width && image.height;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ \"XrbV\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\n\n/***/ }),\n\n/***/ \"YEmw\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n/***/ }),\n\n/***/ \"ZKTi\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var modelUtil = __webpack_require__(\"+Qey\");\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ \"ZYsc\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(\"gBVq\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var axisModelCreator = __webpack_require__(\"vOUV\");\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(\"tiCr\"));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n\n/***/ \"ZgA1\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(\"5PYv\");\n    var matrix = __webpack_require__(\"0TlH\");\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n\n/***/ \"ZkAt\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(\"/wKD\").extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ \"Zr1P\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n\n    var pathTool = __webpack_require__(\"epp4\");\n    var Path = __webpack_require__(\"/wKD\");\n    var colorTool = __webpack_require__(\"fftb\");\n    var matrix = __webpack_require__(\"0TlH\");\n    var vector = __webpack_require__(\"5PYv\");\n    var Transformable = __webpack_require__(\"gXiF\");\n    var BoundingRect = __webpack_require__(\"ZgA1\");\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var EMPTY_OBJ = {};\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(\"sugb\");\n\n    graphic.Image = __webpack_require__(\"DY7z\");\n\n    graphic.Text = __webpack_require__(\"E6pA\");\n\n    graphic.Circle = __webpack_require__(\"ZkAt\");\n\n    graphic.Sector = __webpack_require__(\"VknR\");\n\n    graphic.Ring = __webpack_require__(\"k9lX\");\n\n    graphic.Polygon = __webpack_require__(\"yh7w\");\n\n    graphic.Polyline = __webpack_require__(\"9mQP\");\n\n    graphic.Rect = __webpack_require__(\"0KpF\");\n\n    graphic.Line = __webpack_require__(\"1j0N\");\n\n    graphic.BezierCurve = __webpack_require__(\"c5lC\");\n\n    graphic.Arc = __webpack_require__(\"vmYa\");\n\n    graphic.CompoundPath = __webpack_require__(\"0U6q\");\n\n    graphic.LinearGradient = __webpack_require__(\"6ygO\");\n\n    graphic.RadialGradient = __webpack_require__(\"SrZs\");\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    var subPixelOptimize = graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                // See comment in `doSingleEnterHover`.\n                if (hoverStyle[name] != null) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            var style = el.style;\n            var insideRollbackOpt = style.insideRollbackOpt;\n\n            // Consider case: only `position: 'top'` is set on emphasis, then text\n            // color should be returned to `autoColor`, rather than remain '#fff'.\n            // So we should rollback then apply again after style merging.\n            insideRollbackOpt && rollbackInsideStyle(style);\n\n            // styles can be:\n            // {\n            //     label: {\n            //         normal: {\n            //             show: false,\n            //             position: 'outside',\n            //             fontSize: 18\n            //         },\n            //         emphasis: {\n            //             show: true\n            //         }\n            //     }\n            // },\n            // where properties of `emphasis` may not appear in `normal`. We previously use\n            // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n            // But consider rich text and setOption in merge mode, it is impossible to cover\n            // all properties in merge. So we use merge mode when setting style here, where\n            // only properties that is not `null/undefined` can be set. The disadventage:\n            // null/undefined can not be used to remove style any more in `emphasis`.\n            style.extendFrom(el.__hoverStl);\n\n            // Do not save `insideRollback`.\n            if (insideRollbackOpt) {\n                applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt);\n\n                // textFill may be rollbacked to null.\n                if (style.textFill == null) {\n                    style.textFill = insideRollbackOpt.autoColor;\n                }\n            }\n\n            el.dirty(false);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            // Consider null/undefined value, should use\n            // `setStyle` but not `extendFrom(stl, true)`.\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * @param {Object|module:zrender/graphic/Style} normalStyle\n     * @param {Object} emphasisStyle\n     * @param {module:echarts/model/Model} normalModel\n     * @param {module:echarts/model/Model} emphasisModel\n     * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n     * @param {Object} [opt.defaultText]\n     * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n     *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {Object} [normalSpecified]\n     * @param {Object} [emphasisSpecified]\n     */\n    graphic.setLabelStyle = function (\n        normalStyle, emphasisStyle,\n        normalModel, emphasisModel,\n        opt,\n        normalSpecified, emphasisSpecified\n    ) {\n        opt = opt || EMPTY_OBJ;\n        var labelFetcher = opt.labelFetcher;\n        var labelDataIndex = opt.labelDataIndex;\n        var labelDimIndex = opt.labelDimIndex;\n\n        // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n        // is not supported util someone requests.\n\n        var showNormal = normalModel.getShallow('show');\n        var showEmphasis = emphasisModel.getShallow('show');\n\n        // Consider performance, only fetch label when necessary.\n        // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n        // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n        var baseText = (showNormal || showEmphasis)\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex)\n                    : null,\n                opt.defaultText\n            )\n            : null;\n        var normalStyleText = showNormal ? baseText : null;\n        var emphasisStyleText = showEmphasis\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex)\n                    : null,\n                baseText\n            )\n            : null;\n\n        // Optimize: If style.text is null, text will not be drawn.\n        if (normalStyleText != null || emphasisStyleText != null) {\n            // Always set `textStyle` even if `normalStyle.text` is null, because default\n            // values have to be set on `normalStyle`.\n            // If we set default values on `emphasisStyle`, consider case:\n            // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n            // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n            // Then the 'red' will not work on emphasis.\n            setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n            setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n        }\n\n        normalStyle.text = normalStyleText;\n        emphasisStyle.text = emphasisStyleText;\n    };\n\n    /**\n     * Set basic textStyle properties.\n     * @param {Object|module:zrender/graphic/Style} textStyle\n     * @param {module:echarts/model/Model} model\n     * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n     * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n     * @param {boolean} [isEmphasis]\n     */\n    var setTextStyle = graphic.setTextStyle = function (\n        textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis\n    ) {\n        setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n        specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n        return textStyle;\n    };\n\n    /**\n     * Set text option in the style.\n     * @deprecated\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string|boolean} defaultColor Default text color.\n     *        If set as false, it will be processed as a emphasis style.\n     */\n    graphic.setText = function (textStyle, labelModel, defaultColor) {\n        var opt = {isRectText: true};\n        var isEmphasis;\n\n        if (defaultColor === false) {\n            isEmphasis = true;\n        }\n        else {\n            // Support setting color as 'auto' to get visual color.\n            opt.autoColor = defaultColor;\n        }\n        setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n    };\n\n    /**\n     * {\n     *      disableBox: boolean, Whether diable drawing box of block (outer most).\n     *      isRectText: boolean,\n     *      autoColor: string, specify a color when color is 'auto',\n     *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n     *              If autoColor specified, it is used as default textFill.\n     *      useInsideStyle:\n     *              `true`: Use inside style (textFill, textStroke, textLineWidth)\n     *                  if `textFill` is not specified.\n     *              `false`: Do not use inside style.\n     *              `null/undefined`: use inside style if `isRectText` is true and\n     *                  `textFill` is not specified and textPosition contains `'inside'`.\n     *      forceRich: boolean\n     * }\n     */\n    function setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n        // Consider there will be abnormal when merge hover style to normal style if given default value.\n        opt = opt || EMPTY_OBJ;\n\n        if (opt.isRectText) {\n            var textPosition = textStyleModel.getShallow('position')\n                || (isEmphasis ? null : 'inside');\n            // 'outside' is not a valid zr textPostion value, but used\n            // in bar series, and magric type should be considered.\n            textPosition === 'outside' && (textPosition = 'top');\n            textStyle.textPosition = textPosition;\n            textStyle.textOffset = textStyleModel.getShallow('offset');\n            var labelRotate = textStyleModel.getShallow('rotate');\n            labelRotate != null && (labelRotate *= Math.PI / 180);\n            textStyle.textRotation = labelRotate;\n            textStyle.textDistance = zrUtil.retrieve2(\n                textStyleModel.getShallow('distance'), isEmphasis ? null : 5\n            );\n        }\n\n        var ecModel = textStyleModel.ecModel;\n        var globalTextStyle = ecModel && ecModel.option.textStyle;\n\n        // Consider case:\n        // {\n        //     data: [{\n        //         value: 12,\n        //         label: {\n        //             normal: {\n        //                 rich: {\n        //                     // no 'a' here but using parent 'a'.\n        //                 }\n        //             }\n        //         }\n        //     }],\n        //     rich: {\n        //         a: { ... }\n        //     }\n        // }\n        var richItemNames = getRichItemNames(textStyleModel);\n        var richResult;\n        if (richItemNames) {\n            richResult = {};\n            for (var name in richItemNames) {\n                if (richItemNames.hasOwnProperty(name)) {\n                    // Cascade is supported in rich.\n                    var richTextStyle = textStyleModel.getModel(['rich', name]);\n                    // In rich, never `disableBox`.\n                    setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n                }\n            }\n        }\n        textStyle.rich = richResult;\n\n        setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n        if (opt.forceRich && !opt.textStyle) {\n            opt.textStyle = {};\n        }\n\n        return textStyle;\n    }\n\n    // Consider case:\n    // {\n    //     data: [{\n    //         value: 12,\n    //         label: {\n    //             normal: {\n    //                 rich: {\n    //                     // no 'a' here but using parent 'a'.\n    //                 }\n    //             }\n    //         }\n    //     }],\n    //     rich: {\n    //         a: { ... }\n    //     }\n    // }\n    function getRichItemNames(textStyleModel) {\n        // Use object to remove duplicated names.\n        var richItemNameMap;\n        while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n            var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n            if (rich) {\n                richItemNameMap = richItemNameMap || {};\n                for (var name in rich) {\n                    if (rich.hasOwnProperty(name)) {\n                        richItemNameMap[name] = 1;\n                    }\n                }\n            }\n            textStyleModel = textStyleModel.parentModel;\n        }\n        return richItemNameMap;\n    }\n\n    function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n        // In merge mode, default value should not be given.\n        globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n\n        textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt)\n            || globalTextStyle.color;\n        textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt)\n            || globalTextStyle.textBorderColor;\n        textStyle.textLineWidth = zrUtil.retrieve2(\n            textStyleModel.getShallow('textBorderWidth'),\n            globalTextStyle.textBorderWidth\n        );\n\n        if (!isEmphasis) {\n            if (isBlock) {\n                // Always set `insideRollback`, for clearing previous.\n                var originalTextPosition = textStyle.textPosition;\n                textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt);\n                // Save original textPosition, because style.textPosition will be repalced by\n                // real location (like [10, 30]) in zrender.\n                textStyle.insideOriginalTextPosition = originalTextPosition;\n                textStyle.insideRollbackOpt = opt;\n            }\n\n            // Set default finally.\n            if (textStyle.textFill == null) {\n                textStyle.textFill = opt.autoColor;\n            }\n        }\n\n        // Do not use `getFont` here, because merge should be supported, where\n        // part of these properties may be changed in emphasis style, and the\n        // others should remain their original value got from normal style.\n        textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n        textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n        textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n        textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n\n        textStyle.textAlign = textStyleModel.getShallow('align');\n        textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign')\n            || textStyleModel.getShallow('baseline');\n\n        textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n        textStyle.textWidth = textStyleModel.getShallow('width');\n        textStyle.textHeight = textStyleModel.getShallow('height');\n        textStyle.textTag = textStyleModel.getShallow('tag');\n\n        if (!isBlock || !opt.disableBox) {\n            textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n            textStyle.textPadding = textStyleModel.getShallow('padding');\n            textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n            textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n            textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n\n            textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n            textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n            textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n            textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n        }\n\n        textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor')\n            || globalTextStyle.textShadowColor;\n        textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur')\n            || globalTextStyle.textShadowBlur;\n        textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX')\n            || globalTextStyle.textShadowOffsetX;\n        textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY')\n            || globalTextStyle.textShadowOffsetY;\n    }\n\n    function getAutoColor(color, opt) {\n        return color !== 'auto' ? color : (opt && opt.autoColor) ? opt.autoColor : null;\n    }\n\n    function applyInsideStyle(textStyle, textPosition, opt) {\n        var useInsideStyle = opt.useInsideStyle;\n        var insideRollback;\n\n        if (textStyle.textFill == null\n            && useInsideStyle !== false\n            && (useInsideStyle === true\n                || (opt.isRectText\n                    && textPosition\n                    // textPosition can be [10, 30]\n                    && typeof textPosition === 'string'\n                    && textPosition.indexOf('inside') >= 0\n                )\n            )\n        ) {\n            insideRollback = {\n                textFill: null,\n                textStroke: textStyle.textStroke,\n                textLineWidth: textStyle.textLineWidth\n            };\n            textStyle.textFill = '#fff';\n            // Consider text with #fff overflow its container.\n            if (textStyle.textStroke == null) {\n                textStyle.textStroke = opt.autoColor;\n                textStyle.textLineWidth == null && (textStyle.textLineWidth = 2);\n            }\n        }\n\n        return insideRollback;\n    }\n\n    function rollbackInsideStyle(style) {\n        var insideRollback = style.insideRollback;\n        if (insideRollback) {\n            style.textFill = insideRollback.textFill;\n            style.textStroke = insideRollback.textStroke;\n            style.textLineWidth = insideRollback.textLineWidth;\n        }\n    }\n\n    graphic.getFont = function (opt, ecModel) {\n        // ecModel or default text style model.\n        var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    /**\n     * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n     * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n     * @param {Object} [rect] {x, y, width, height}\n     * @return {module:zrender/Element} Icon path or image element.\n     */\n    graphic.createIcon = function (iconStr, opt, rect) {\n        opt = zrUtil.extend({rectHover: true}, opt);\n        var style = opt.style = {strokeNoScale: true};\n        rect = rect || {x: -1, y: -1, width: 2, height: 2};\n\n        if (iconStr) {\n            return iconStr.indexOf('image://') === 0\n                ? (\n                    style.image = iconStr.slice(8),\n                    zrUtil.defaults(style, rect),\n                    new graphic.Image(opt)\n                )\n                : (\n                    graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        opt,\n                        rect,\n                        'center'\n                    )\n                );\n        }\n\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n\n/***/ \"ZwVc\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(\"IW7i\");\n    var env = __webpack_require__(\"mUcc\");\n\n    var Group = __webpack_require__(\"sugb\");\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(\"Vsag\");\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n\n/***/ \"a3Yh\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(\"liLe\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n/***/ }),\n\n/***/ \"aJs6\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var modelUtil = __webpack_require__(\"+Qey\");\n\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (!itemStyleOpt) {\n            return;\n        }\n        for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n            var styleName = POSSIBLE_STYLES[i];\n            var normalItemStyleOpt = itemStyleOpt.normal;\n            var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n            if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].normal) {\n                    opt[styleName].normal = normalItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                }\n                normalItemStyleOpt[styleName] = null;\n            }\n            if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].emphasis) {\n                    opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                }\n                emphasisItemStyleOpt[styleName] = null;\n            }\n        }\n    }\n\n    function compatTextStyle(opt, propName) {\n        var labelOptSingle = isObject(opt) && opt[propName];\n        var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n        if (textStyle) {\n            for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n                var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n                if (textStyle.hasOwnProperty(propName)) {\n                    labelOptSingle[propName] = textStyle[propName];\n                }\n            }\n        }\n    }\n\n    function compatLabelTextStyle(labelOpt) {\n        if (isObject(labelOpt)) {\n            compatTextStyle(labelOpt, 'normal');\n            compatTextStyle(labelOpt, 'emphasis');\n        }\n    }\n\n    function processSeries(seriesOpt) {\n        if (!isObject(seriesOpt)) {\n            return;\n        }\n\n        compatItemStyle(seriesOpt);\n        compatLabelTextStyle(seriesOpt.label);\n        // treemap\n        compatLabelTextStyle(seriesOpt.upperLabel);\n        // graph\n        compatLabelTextStyle(seriesOpt.edgeLabel);\n\n        var markPoint = seriesOpt.markPoint;\n        compatItemStyle(markPoint);\n        compatLabelTextStyle(markPoint && markPoint.label);\n\n        var markLine = seriesOpt.markLine;\n        compatItemStyle(seriesOpt.markLine);\n        compatLabelTextStyle(markLine && markLine.label);\n\n        var markArea = seriesOpt.markArea;\n        compatLabelTextStyle(markArea && markArea.label);\n\n        // For gauge\n        compatTextStyle(seriesOpt, 'axisLabel');\n        compatTextStyle(seriesOpt, 'title');\n        compatTextStyle(seriesOpt, 'detail');\n\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n                compatLabelTextStyle(data[i] && data[i].label);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                    compatLabelTextStyle(mpData[i] && mpData[i].label);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n                        compatItemStyle(mlData[i][1]);\n                        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                        compatLabelTextStyle(mlData[i] && mlData[i].label);\n                    }\n                }\n            }\n        }\n    }\n\n    function toArr(o) {\n        return zrUtil.isArray(o) ? o : o ? [o] : [];\n    }\n\n    function toObj(o) {\n        return (zrUtil.isArray(o) ? o[0] : o) || {};\n    }\n\n    module.exports = function (option, isTheme) {\n        each(toArr(option.series), function (seriesOpt) {\n            isObject(seriesOpt) && processSeries(seriesOpt);\n        });\n\n        var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n        isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n\n        each(\n            axes,\n            function (axisName) {\n                each(toArr(option[axisName]), function (axisOpt) {\n                    if (axisOpt) {\n                        compatTextStyle(axisOpt, 'axisLabel');\n                        compatTextStyle(axisOpt.axisPointer, 'label');\n                    }\n                });\n            }\n        );\n\n        each(toArr(option.parallel), function (parallelOpt) {\n            var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n            compatTextStyle(parallelAxisDefault, 'axisLabel');\n            compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n        });\n\n        each(toArr(option.calendar), function (calendarOpt) {\n            compatTextStyle(calendarOpt, 'dayLabel');\n            compatTextStyle(calendarOpt, 'monthLabel');\n            compatTextStyle(calendarOpt, 'yearLabel');\n        });\n\n        // radar.name.textStyle\n        each(toArr(option.radar), function (radarOpt) {\n            compatTextStyle(radarOpt, 'name');\n        });\n\n        each(toArr(option.geo), function (geoOpt) {\n            if (isObject(geoOpt)) {\n                compatLabelTextStyle(geoOpt.label);\n                each(toArr(geoOpt.regions), function (regionObj) {\n                    compatLabelTextStyle(regionObj.label);\n                });\n            }\n        });\n\n        compatLabelTextStyle(toObj(option.timeline).label);\n        compatTextStyle(toObj(option.axisPointer), 'label');\n        compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n    };\n\n\n/***/ }),\n\n/***/ \"aXfO\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var modelUtil = __webpack_require__(\"+Qey\");\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            // `isFinit('')` get `true`.\n            if (value != null && isFinite(value) && value !== '') {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n\n/***/ \"bX97\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(\"DacG\");\n\n    __webpack_require__(\"DoL6\");\n\n    __webpack_require__(\"Lr5q\");\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(\"cqWi\").registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(\"cqWi\").registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n\n/***/ \"bZMc\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(\"ZYsc\");\n\n    __webpack_require__(\"tpPu\");\n\n\n/***/ }),\n\n/***/ \"c3Mm\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(\"ZYsc\");\n\n    var ComponentModel = __webpack_require__(\"gBVq\");\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"c5lC\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(\"L/5X\");\n    var vec2 = __webpack_require__(\"5PYv\");\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(\"/wKD\").extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ \"cS9B\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"BkJT\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"header.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"ceJK\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var compatStyle = __webpack_require__(\"aJs6\");\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option, isTheme) {\n        compatStyle(option, isTheme);\n\n        var series = option.series;\n        each(zrUtil.isArray(series) ? series : [series], function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ \"cqWi\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(\"mUcc\");\n\n    var GlobalModel = __webpack_require__(\"RNqR\");\n    var ExtensionAPI = __webpack_require__(\"zrBk\");\n    var CoordinateSystemManager = __webpack_require__(\"55nF\");\n    var OptionManager = __webpack_require__(\"5WUZ\");\n    var backwardCompat = __webpack_require__(\"ceJK\");\n\n    var ComponentModel = __webpack_require__(\"gBVq\");\n    var SeriesModel = __webpack_require__(\"A9Km\");\n\n    var ComponentView = __webpack_require__(\"GYRJ\");\n    var ChartView = __webpack_require__(\"dHti\");\n    var graphic = __webpack_require__(\"Zr1P\");\n    var modelUtil = __webpack_require__(\"+Qey\");\n    var throttle = __webpack_require__(\"KOAn\");\n\n    var zrender = __webpack_require__(\"OWKC\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var colorTool = __webpack_require__(\"fftb\");\n    var Eventful = __webpack_require__(\"HxU1\");\n    var timsort = __webpack_require__(\"Vsag\");\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        var theme = zrUtil.clone(theme);\n        theme && backwardCompat(theme, true);\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = theme;\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // Avoid dispatch action before setOption. Especially in `connect`.\n        if (!this._model) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.7.1',\n        dependencies: {\n            zrender: '3.6.1'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(\"VZiK\"));\n    echarts.registerPreprocessor(backwardCompat);\n    echarts.registerLoading('default', __webpack_require__(\"5X0Y\"));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(\"++G3\");\n    echarts.Model = __webpack_require__(\"EnYE\");\n\n    echarts.Axis = __webpack_require__(\"3YoW\");\n\n    echarts.graphic = __webpack_require__(\"Zr1P\");\n    echarts.number = __webpack_require__(\"8wRg\");\n    echarts.format = __webpack_require__(\"LXmB\");\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(\"0TlH\");\n    echarts.vector = __webpack_require__(\"5PYv\");\n    echarts.color = __webpack_require__(\"fftb\");\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(\"HJE7\");\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"QYmj\")))\n\n/***/ }),\n\n/***/ \"dHti\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(\"sugb\");\n    var componentUtil = __webpack_require__(\"eY2H\");\n    var clazzUtil = __webpack_require__(\"TwzL\");\n    var modelUtil = __webpack_require__(\"+Qey\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n\n/***/ \"dIPJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(\"L/5X\");\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"dNmU\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: ['action', 'activeId'],\n  data: function data() {\n    return {};\n  },\n\n  methods: {\n    swapTab: function swapTab(val) {\n      this.$emit('changeTab', val);\n    }\n  },\n  created: function created() {\n    this.activeTab = this.active;\n  },\n  computed: {\n    list: function list() {\n      return this.action;\n    },\n    active: function active() {\n      return this.activeId;\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"dc9A\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar stringify = __webpack_require__(\"hKqg\");\nvar parse = __webpack_require__(\"xLYh\");\nvar formats = __webpack_require__(\"XrbV\");\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n\n\n/***/ }),\n\n/***/ \"eCMv\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(\"Zr1P\");\n    var BaseAxisPointer = __webpack_require__(\"zbFj\");\n    var viewHelper = __webpack_require__(\"GLZC\");\n    var cartesianAxisHelper = __webpack_require__(\"qeVC\");\n    var AxisView = __webpack_require__(\"fCln\");\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n\n/***/ \"eSGo\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var modelUtil = __webpack_require__(\"+Qey\");\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n\n/***/ \"eY2H\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var clazz = __webpack_require__(\"TwzL\");\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n\n/***/ \"epp4\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(\"/wKD\");\n    var PathProxy = __webpack_require__(\"xJeg\");\n    var transformPath = __webpack_require__(\"rhuR\");\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"esV0\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(\"PRM/\") && !__webpack_require__(\"YEmw\")(function () {\n  return Object.defineProperty(__webpack_require__(\"l3hl\")('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n\n/***/ \"f68a\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(\"lSMs\");\nvar core = __webpack_require__(\"0nnt\");\nvar ctx = __webpack_require__(\"tjS7\");\nvar hide = __webpack_require__(\"q1/O\");\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n/***/ }),\n\n/***/ \"fCln\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(\"UYnM\");\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(\"cqWi\").extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n\n/***/ \"fHSC\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(\"X609\");\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n/***/ }),\n\n/***/ \"fIwg\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(\"HxU1\");\n    var env = __webpack_require__(\"mUcc\");\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n\n/***/ \"fftb\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(\"2Ttr\");\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n\n/***/ \"gBVq\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(\"EnYE\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(\"eY2H\");\n    var clazzUtil = __webpack_require__(\"TwzL\");\n    var layout = __webpack_require__(\"Vhze\");\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(\"PiNk\"));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n\n/***/ \"gXiF\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(\"0TlH\");\n    var vector = __webpack_require__(\"5PYv\");\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {        \n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n\n/***/ \"gshH\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(\"TwzL\");\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"h/UA\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nexports.arrayToObject = function (source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nexports.merge = function (target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = exports.arrayToObject(target, options);\n    }\n\n    if (Array.isArray(target) && Array.isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                if (target[i] && typeof target[i] === 'object') {\n                    target[i] = exports.merge(target[i], item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = exports.merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nexports.assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nexports.decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nexports.encode = function (str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D    // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nexports.compact = function (obj, references) {\n    if (typeof obj !== 'object' || obj === null) {\n        return obj;\n    }\n\n    var refs = references || [];\n    var lookup = refs.indexOf(obj);\n    if (lookup !== -1) {\n        return refs[lookup];\n    }\n\n    refs.push(obj);\n\n    if (Array.isArray(obj)) {\n        var compacted = [];\n\n        for (var i = 0; i < obj.length; ++i) {\n            if (obj[i] && typeof obj[i] === 'object') {\n                compacted.push(exports.compact(obj[i], refs));\n            } else if (typeof obj[i] !== 'undefined') {\n                compacted.push(obj[i]);\n            }\n        }\n\n        return compacted;\n    }\n\n    var keys = Object.keys(obj);\n    keys.forEach(function (key) {\n        obj[key] = exports.compact(obj[key], refs);\n    });\n\n    return obj;\n};\n\nexports.isRegExp = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nexports.isBuffer = function (obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\n\n/***/ }),\n\n/***/ \"hKqg\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(\"h/UA\");\nvar formats = __webpack_require__(\"XrbV\");\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(\n                obj[key],\n                generateArrayPrefix(prefix, key),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        } else {\n            values = values.concat(stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;\n    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;\n    if (typeof options.format === 'undefined') {\n        options.format = formats.default;\n    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {\n        throw new TypeError('Unknown format option provided.');\n    }\n    var formatter = formats.formatters[options.format];\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encode ? encoder : null,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly\n        ));\n    }\n\n    var joined = keys.join(delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n\n\n/***/ }),\n\n/***/ \"hxP8\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_header_vue__ = __webpack_require__(\"7JVc\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_0_4_vue_loader_lib_template_compiler_index_id_data_v_33d60ee4_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_template_index_0_header_vue__ = __webpack_require__(\"i+yD\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"UEU6\")\n}\nvar normalizeComponent = __webpack_require__(\"J0+h\")\n/* script */\n\n/* template */\n\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_header_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_0_4_vue_loader_lib_template_compiler_index_id_data_v_33d60ee4_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_template_index_0_header_vue__[\"a\" /* default */],\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"i+yD\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('mt-header', {\n    attrs: {\n      \"fixed\": _vm.isfixed,\n      \"title\": _vm.pageTitle\n    }\n  }, [_c('mt-button', {\n    attrs: {\n      \"icon\": \"back\"\n    },\n    on: {\n      \"click\": _vm.ceshi\n    },\n    slot: \"left\"\n  }), _vm._v(\" \"), _c('mt-button', {\n    on: {\n      \"click\": _vm.rightTextClick\n    },\n    slot: \"right\"\n  }, [_vm._v(_vm._s(_vm.rightLabel))])], 1)\n}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"i84Q\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"v\", function() { return getProtocol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return getrefundDetails; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"L\", function() { return getFenLei; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"I\", function() { return getSwiper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"K\", function() { return getGuanggao; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"C\", function() { return getNoticeList; });\n/* unused harmony export getNoticeContent */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"y\", function() { return postLogin; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"w\", function() { return getCode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"x\", function() { return postRegister; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"z\", function() { return postReset; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"A\", function() { return postMemberUpdate; });\n/* unused harmony export postVCodeLogin */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"B\", function() { return getLogout; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return getMe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return getMyRecommend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"u\", function() { return getAllCity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"H\", function() { return getCartList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"t\", function() { return getByStoreCategory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"J\", function() { return getNearStore; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return getStore; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return getProductCategory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return addCart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return getProductBySkuId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return getAttrBySpuId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return getAttrOption; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"G\", function() { return deletCart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"F\", function() { return updateAmount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return getProfitChart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return getProfitList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return confirmOrder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return getOrderList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return addCollectStore; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return addCollectgood; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return getMyCollection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return getMyCollectStore; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return cancelMyCollect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"D\", function() { return getProductLikeName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"E\", function() { return getStoreLikeName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return getOrder; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty__ = __webpack_require__(\"a3Yh\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_axios__ = __webpack_require__(\"BMa3\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_qs__ = __webpack_require__(\"dc9A\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_qs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_qs__);\n\n\n\nvar baseUrl = '/static/data/';\nvar serverUrl = '/api';\nvar getProtocol = __WEBPACK_IMPORTED_MODULE_1_axios___default()(baseUrl + 'protocol.json');\nvar getrefundDetails = __WEBPACK_IMPORTED_MODULE_1_axios___default()(baseUrl + 'refundDetails.json');\n\n// 首页 行业分类\nvar getFenLei = function getFenLei() {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/storeCategory/list');\n};\n// 首页 轮播广告\nvar getSwiper = function getSwiper() {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/media/list/big');\n};\n// 首页 banner广告\nvar getGuanggao = function getGuanggao() {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/media/list/small');\n};\n//通知列表\nvar getNoticeList = function getNoticeList() {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/media/notice/list');\n};\n\n//通知详情\nvar getNoticeContent = function getNoticeContent(id) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/media/notice/getById/' + id);\n};\n\n// 用户登录\nvar postLogin = function postLogin(username, password) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/member/login/', __WEBPACK_IMPORTED_MODULE_2_qs___default.a.stringify({\n    username: username,\n    password: password\n  }));\n};\n\n// 获取验证码\nvar getCode = function getCode(mobile) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/member/getCode/' + mobile);\n};\n\n// 用户注册\nvar postRegister = function postRegister(mobile, inviteCode, password, vcode) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/member/register/', __WEBPACK_IMPORTED_MODULE_2_qs___default.a.stringify({\n    mobile: mobile,\n    inviteCode: inviteCode,\n    password: password,\n    vcode: vcode\n  }));\n};\n\n// 重置/找回密码\nvar postReset = function postReset(mobile, password, vcode) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/member/reset/', __WEBPACK_IMPORTED_MODULE_2_qs___default.a.stringify({\n    mobile: mobile,\n    password: password,\n    vcode: vcode\n  }));\n};\n\n//修改个人信息\nvar postMemberUpdate = function postMemberUpdate(nickName) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/member/update/', __WEBPACK_IMPORTED_MODULE_2_qs___default.a.stringify({\n    nickName: nickName\n  }));\n};\n\n// 验证码登录\nvar postVCodeLogin = function postVCodeLogin(mobile, vcode) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/member/verifyCode/login/', __WEBPACK_IMPORTED_MODULE_2_qs___default.a.stringify({\n    mobile: mobile,\n    vcode: vcode\n  }));\n};\n\n// 退出登录\nvar getLogout = function getLogout() {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/member/logout');\n};\n// 我的 （个人信息）\nvar getMe = function getMe() {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/member/me');\n};\n\n// 我的推荐\nvar getMyRecommend = function getMyRecommend() {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/member/myRecommend');\n};\n\n/* 城市列表  */\nvar getAllCity = function getAllCity(name) {\n  if (name == undefined) {\n    return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/area/getCitySortByChar');\n  } else {\n    return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/area/getCitySortByChar/?name=' + name);\n  }\n};\n/* 购物车列表(需登录)*/\nvar getCartList = function getCartList() {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/cart/getCartList');\n};\n/* 获取首页分类下的所有商品  */\nvar getByStoreCategory = function getByStoreCategory(pageNum, pageSize, storeCategoryId, latitude, longitude) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/store/getByStoreCategoryId?categoryId=', __WEBPACK_IMPORTED_MODULE_2_qs___default.a.stringify({\n    storeCategoryId: storeCategoryId,\n    cityCode: 440300,\n    latitude: latitude,\n    longitude: longitude,\n    pageNum: pageNum,\n    pageSize: pageSize\n  }));\n};\n/* 附件商家列表 */\nvar getNearStore = function getNearStore(pageNum, pageSize, latitude, longitude) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/store/nearStore/', __WEBPACK_IMPORTED_MODULE_2_qs___default.a.stringify({\n    latitude: latitude,\n    longitude: longitude,\n    pageNum: pageNum,\n    pageSize: pageSize\n  }));\n};\n/* 商家首页  */\nvar getStore = function getStore(storeId, latitude, longitude) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/store/getStore', __WEBPACK_IMPORTED_MODULE_2_qs___default.a.stringify({\n    storeId: storeId,\n    latitude: latitude,\n    longitude: longitude\n  }));\n};\n/* 商家首页下的分类商品   */\nvar getProductCategory = function getProductCategory(categoryId) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/product/getByProductCategoryId?categoryId=' + categoryId);\n};\n/* 加入购物车  */\nvar addCart = function addCart(skuId, amount) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/cart/add', __WEBPACK_IMPORTED_MODULE_2_qs___default.a.stringify({\n    skuId: skuId,\n    amount: amount || 1\n\n  }));\n};\n/* 商家首页商品详情   */\nvar getProductBySkuId = function getProductBySkuId(skuId, latitude, longitude) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/product/getBySkuId', __WEBPACK_IMPORTED_MODULE_2_qs___default.a.stringify({\n    skuId: skuId,\n    latitude: latitude,\n    longitude: longitude\n  }));\n};\n/* 获取商品的属性  */\nvar getAttrBySpuId = function getAttrBySpuId(SpuId) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/product/getAttrBySpuId/' + SpuId);\n};\n/* 根据选中的属性来匹配商品 */\nvar getAttrOption = function getAttrOption(SpuId) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/product/getAttrOptionBySpuId/' + SpuId);\n};\n/* 删除购物车的商品  */\nvar deletCart = function deletCart(skuIds) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/cart/delete', __WEBPACK_IMPORTED_MODULE_2_qs___default.a.stringify({\n    skuId: skuIds\n  }));\n};\n/*  修改单个商品的数量  */\nvar updateAmount = function updateAmount(skuId, amount) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/cart/updateAmount', __WEBPACK_IMPORTED_MODULE_2_qs___default.a.stringify(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()({\n    skuId: skuId, amount: amount\n  }, 'amount', amount)));\n};\n\n/* 我的收益 chart */\nvar getProfitChart = function getProfitChart(days) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/member/profit/pictureData?days=' + days);\n};\n\n/* 我的收益详情 */\nvar getProfitList = function getProfitList(days) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/member/profit/getDetailData?days=' + days);\n};\n\n/* 提交订单 */\nvar confirmOrder = function confirmOrder(obj) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/order/addOrder', obj);\n};\n/* 订单列表  */\nvar getOrderList = function getOrderList(orderStatus, pageNum, pageSize, startTime, endTime) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/order/getOrderList', __WEBPACK_IMPORTED_MODULE_2_qs___default.a.stringify({\n    orderStatus: orderStatus,\n    pageNum: pageNum || 1,\n    pageSize: pageSize || 15,\n    startTime: startTime,\n    endTime: endTime\n  }));\n};\n/* 收藏商家  */\nvar addCollectStore = function addCollectStore(storeId) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/collect/store/' + storeId);\n};\n/* 收藏商品  */\nvar addCollectgood = function addCollectgood(skuId) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/collect/product/' + skuId);\n};\n// 我收藏的产品\nvar getMyCollection = function getMyCollection() {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/collect/getMyCollectProduct');\n};\n/* 我的收藏的商家  */\nvar getMyCollectStore = function getMyCollectStore() {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/collect/getMyCollectStore');\n};\n/* 取消收藏 */\nvar cancelMyCollect = function cancelMyCollect(collectId) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/collect/cancel', __WEBPACK_IMPORTED_MODULE_2_qs___default.a.stringify({\n    collectId: collectId\n  }));\n};\n/* 搜索商品 */\nvar getProductLikeName = function getProductLikeName(name) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/product/getProductLikeName', __WEBPACK_IMPORTED_MODULE_2_qs___default.a.stringify({\n    name: name\n  }));\n};\n/* 搜索商家  */\nvar getStoreLikeName = function getStoreLikeName(name) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(serverUrl + '/store/getStoreLikeName', __WEBPACK_IMPORTED_MODULE_2_qs___default.a.stringify({\n    name: name\n  }));\n};\n/* 查看订单详情*/\nvar getOrder = function getOrder(orderNo) {\n  return __WEBPACK_IMPORTED_MODULE_1_axios___default()(serverUrl + '/order/getOrder/' + orderNo);\n};\n\n/***/ }),\n\n/***/ \"j8iE\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n\n/***/ \"j9yU\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(\"VUgN\");\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n\n/***/ \"k78g\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(\"636P\").normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"k9lX\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(\"/wKD\").extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ \"kHI7\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(\"j8iE\")(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"l3hl\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(\"X609\");\nvar document = __webpack_require__(\"lSMs\").document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n/***/ }),\n\n/***/ \"lIfk\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(\"L/5X\");\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"lSMs\":\n/***/ (function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n/***/ }),\n\n/***/ \"liLe\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(\"uwuJ\"), __esModule: true };\n\n/***/ }),\n\n/***/ \"mUcc\":\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n\n/***/ \"mmx0\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var Scale = __webpack_require__(\"OWrI\");\n    var numberUtil = __webpack_require__(\"8wRg\");\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(\"EdBd\");\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n\n/***/ \"mt7H\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var SymbolDraw = __webpack_require__(\"IpD5\");\n    var Symbol = __webpack_require__(\"5Ww7\");\n    var lineAnimationDiff = __webpack_require__(\"2qdY\");\n    var graphic = __webpack_require__(\"Zr1P\");\n    var modelUtil = __webpack_require__(\"+Qey\");\n    var polyHelper = __webpack_require__(\"XehA\");\n    var ChartView = __webpack_require__(\"dHti\");\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"oZX5\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var echarts = __webpack_require__(\"cqWi\");\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(\"v3dR\");\n    __webpack_require__(\"mt7H\");\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(\"Jwij\"), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(\"pLHs\"), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(\"yZNC\"), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(\"EuDp\");\n\n\n/***/ }),\n\n/***/ \"pLHs\":\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n/***/ }),\n\n/***/ \"ptTv\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(\"Ug08\");\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n\n/***/ \"q1/O\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(\"Lohu\");\nvar createDesc = __webpack_require__(\"TUEb\");\nmodule.exports = __webpack_require__(\"PRM/\") ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n/***/ }),\n\n/***/ \"q7n9\":\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n\n/***/ \"qEZ+\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(\"36nW\");\n\n    var AxisPonterView = __webpack_require__(\"cqWi\").extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n\n/***/ \"qeVC\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n        var idx = {left: 0, right: 1, top: 0, bottom: 1, onZero: 2};\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posBound = axisDim === 'x'\n            ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset]\n            : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n        if (axis.onZero) {\n            var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n            var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n            posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0],\n            axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ \"qq5e\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_myEarnings_vue__ = __webpack_require__(\"102j\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_0_4_vue_loader_lib_template_compiler_index_id_data_v_43b3fa9d_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_template_index_0_myEarnings_vue__ = __webpack_require__(\"Pqkg\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"6PzY\")\n}\nvar normalizeComponent = __webpack_require__(\"J0+h\")\n/* script */\n\n/* template */\n\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_myEarnings_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_0_4_vue_loader_lib_template_compiler_index_id_data_v_43b3fa9d_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_template_index_0_myEarnings_vue__[\"a\" /* default */],\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"rN8j\":\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n\n/***/ \"rhuR\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(\"xJeg\").CMD;\n    var vec2 = __webpack_require__(\"5PYv\");\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n\n/***/ \"sCIY\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var formatUtil = __webpack_require__(\"LXmB\");\n    var graphic = __webpack_require__(\"Zr1P\");\n    var Model = __webpack_require__(\"EnYE\");\n    var numberUtil = __webpack_require__(\"8wRg\");\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(\"5PYv\");\n    var matrix = __webpack_require__(\"0TlH\");\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemLabelModel = labelModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemLabelModel = new Model(\n                        categoryData[tickVal].textStyle, labelModel, axisModel.ecModel\n                    );\n                }\n\n                var textColor = itemLabelModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                graphic.setTextStyle(textEl.style, itemLabelModel, {\n                    text: labels[index],\n                    textAlign: itemLabelModel.getShallow('align', true)\n                        || labelLayout.textAlign,\n                    textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true)\n                        || itemLabelModel.getShallow('baseline', true)\n                        || labelLayout.textVerticalAlign,\n                    textFill: typeof textColor === 'function'\n                        ? textColor(\n                            // (1) In category axis with data zoom, tick is not the original\n                            // index of axis.data. So tick should not be exposed to user\n                            // in category axis.\n                            // (2) Compatible with previous version, which always returns labelStr.\n                            // But in interval scale labelStr is like '223,445', which maked\n                            // user repalce ','. So we modify it to return original val but remain\n                            // it as 'string' to avoid error in replacing.\n                            axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                            index\n                        )\n                        : textColor\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            // FIXME\n            // truncate rich text? (consider performance)\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            graphic.setTextStyle(textEl.style, textStyleModel, {\n                text: truncatedText,\n                textFont: textFont,\n                textFill: textStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color'),\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.textVerticalAlign\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n\n/***/ \"sIBF\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(\"IW7i\");\n    var config = __webpack_require__(\"Ug08\");\n    var Style = __webpack_require__(\"X76A\");\n    var Pattern = __webpack_require__(\"rN8j\");\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n            this.ctx.__currentValues = {};\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n            this.ctxBack.__currentValues = {};\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n\n/***/ \"sugb\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var Element = __webpack_require__(\"RSUm\");\n    var BoundingRect = __webpack_require__(\"ZgA1\");\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n\n/***/ \"tiCr\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var axisHelper = __webpack_require__(\"Ji8X\");\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis\n                && min != null\n                && min !== 'dataMin'\n                && typeof min !== 'function'\n                && !zrUtil.eqNaN(min)\n            ) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis\n                && max != null\n                && max !== 'dataMax'\n                && typeof max !== 'function'\n                && !zrUtil.eqNaN(max)\n            ) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"tjS7\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(\"x8DJ\");\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/***/ }),\n\n/***/ \"tpPu\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var graphic = __webpack_require__(\"Zr1P\");\n    var AxisBuilder = __webpack_require__(\"sCIY\");\n    var AxisView = __webpack_require__(\"fCln\");\n    var cartesianAxisHelper = __webpack_require__(\"qeVC\");\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n/***/ }),\n\n/***/ \"uqT/\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(\"8wRg\");\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @param {number} [maxInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval, maxInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        if (maxInterval != null && interval > maxInterval) {\n            interval = result.interval = maxInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ \"uwuJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"6NfO\");\nvar $Object = __webpack_require__(\"0nnt\").Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n/***/ }),\n\n/***/ \"v3dR\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(\"HILd\");\n    var SeriesModel = __webpack_require__(\"A9Km\");\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"vOUV\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(\"D7iD\");\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var ComponentModel = __webpack_require__(\"gBVq\");\n    var layout = __webpack_require__(\"Vhze\");\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n\n/***/ \"vkao\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"BkJT\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".chart{width:100%;height:32.68%}.chart,.details-list{background-color:#fff}.details-list{margin-top:.05rem;height:53%;overflow:auto}.details-list:first-child,.details-list li{display:-webkit-box;display:-ms-flexbox;display:flex;border-bottom:.01rem solid rgba(0,0,0,.1)}.details-list li>span{line-height:.4rem;text-align:center;display:inline-block;-webkit-box-flex:1;-ms-flex:1;flex:1}.details-type{-webkit-box-flex:2!important;-ms-flex:2!important;flex:2!important;padding-left:.15rem}.details-type,.item-type{text-align:left!important}.item-type{color:#333;display:block!important;line-height:.15rem!important}.item-balance{color:#ff8b20}.type-date{-webkit-box-flex:2;-ms-flex:2;flex:2;height:.54rem;padding:.12rem 0 0 .15rem}.type-date>span{font-size:.12rm}\", \"\", {\"version\":3,\"sources\":[\"D:/Git/hi_life/src/page/myEarnings/myEarnings.vue\"],\"names\":[],\"mappings\":\"AACA,OACE,WAAY,AACZ,aAAe,CAEhB,AACD,qBAFE,qBAAwB,CAOzB,AALD,cAEE,kBAAmB,AACnB,WAAY,AACZ,aAAe,CAChB,AAOD,2CACE,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,yCAA8C,CAC/C,AACD,sBACE,kBAAmB,AACnB,kBAAmB,AACnB,qBAAsB,AACtB,mBAAoB,AAChB,WAAY,AACR,MAAQ,CACjB,AACD,cAEE,6BAA8B,AAC1B,qBAAsB,AAClB,iBAAkB,AAC1B,mBAAqB,CACtB,AACD,yBANE,yBAA2B,CAW5B,AALD,WACE,WAAY,AACZ,wBAAyB,AAEzB,4BAA8B,CAC/B,AACD,cACE,aAAe,CAChB,AACD,WACE,mBAAoB,AAChB,WAAY,AACR,OAAQ,AAChB,cAAe,AACf,yBAAgC,CACjC,AACD,gBACE,eAAiB,CAClB\",\"file\":\"myEarnings.vue\",\"sourcesContent\":[\"\\n.chart {\\n  width: 100%;\\n  height: 32.68%;\\n  background-color: white;\\n}\\n.details-list {\\n  background-color: white;\\n  margin-top: .05rem;\\n  height: 53%;\\n  overflow: auto;\\n}\\n.details-list:first-child {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  border-bottom: .01rem solid rgba(0, 0, 0, .1);\\n}\\n.details-list li {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  border-bottom: .01rem solid rgba(0, 0, 0, .1);\\n}\\n.details-list li>span {\\n  line-height: .4rem;\\n  text-align: center;\\n  display: inline-block;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n}\\n.details-type {\\n  text-align: left!important;\\n  -webkit-box-flex: 2!important;\\n      -ms-flex: 2!important;\\n          flex: 2!important;\\n  padding-left: .15rem;\\n}\\n.item-type {\\n  color: #333;\\n  display: block!important;\\n  text-align: left!important;\\n  line-height: .15rem!important;\\n}\\n.item-balance {\\n  color: #ff8b20;\\n}\\n.type-date {\\n  -webkit-box-flex: 2;\\n      -ms-flex: 2;\\n          flex: 2;\\n  height: .54rem;\\n  padding: .12rem 0 .0rem 0.15rem;\\n}\\n.type-date>span {\\n  font-size: .12rm;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"vmYa\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(\"/wKD\").extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"wKpZ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(\"fIwg\");\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n\n/***/ \"wrtm\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(\"4EB+\");\n    var util = __webpack_require__(\"IW7i\");\n    var roundRectHelper = __webpack_require__(\"zoFB\");\n    var imageHelper = __webpack_require__(\"XlEP\");\n\n    var retrieve3 = util.retrieve3;\n    var retrieve2 = util.retrieve2;\n\n    // TODO: Have not support 'start', 'end' yet.\n    var VALID_TEXT_ALIGN = {left: 1, right: 1, center: 1};\n    var VALID_TEXT_VERTICAL_ALIGN = {top: 1, bottom: 1, middle: 1};\n\n    var helper = {};\n\n    /**\n     * @param {module:zrender/graphic/Style} style\n     * @return {module:zrender/graphic/Style} The input style.\n     */\n    helper.normalizeTextStyle = function (style) {\n        normalizeStyle(style);\n        util.each(style.rich, normalizeStyle);\n        return style;\n    };\n\n    function normalizeStyle(style) {\n        if (style) {\n\n            style.font = textContain.makeFont(style);\n\n            var textAlign = style.textAlign;\n            textAlign === 'middle' && (textAlign = 'center');\n            style.textAlign = (\n                textAlign == null || VALID_TEXT_ALIGN[textAlign]\n            ) ? textAlign : 'left';\n\n            // Compatible with textBaseline.\n            var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n            textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n            style.textVerticalAlign = (\n                textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign]\n            ) ? textVerticalAlign : 'top';\n\n            var textPadding = style.textPadding;\n            if (textPadding) {\n                style.textPadding = util.normalizeCssArray(style.textPadding);\n            }\n        }\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {string} text\n     * @param {module:zrender/graphic/Style} style\n     * @param {Object|boolean} [rect] {x, y, width, height}\n     *                  If set false, rect text is not used.\n     */\n    helper.renderText = function (hostEl, ctx, text, style, rect) {\n        style.rich\n            ? renderRichText(hostEl, ctx, text, style, rect)\n            : renderPlainText(hostEl, ctx, text, style, rect);\n    };\n\n    function renderPlainText(hostEl, ctx, text, style, rect) {\n        var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n\n        var textPadding = style.textPadding;\n\n        var contentBlock = hostEl.__textCotentBlock;\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(\n                text, font, textPadding, style.truncate\n            );\n        }\n\n        var outerHeight = contentBlock.outerHeight;\n\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var textX = baseX;\n        var textY = boxY;\n\n        var needDrawBg = needDrawBackground(style);\n        if (needDrawBg || textPadding) {\n            // Consider performance, do not call getTextWidth util necessary.\n            var textWidth = textContain.getWidth(text, font);\n            var outerWidth = textWidth;\n            textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n            var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\n            needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n            if (textPadding) {\n                textX = getTextXForPadding(baseX, textAlign, textPadding);\n                textY += textPadding[0];\n            }\n        }\n\n        setCtx(ctx, 'textAlign', textAlign || 'left');\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n        setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0);\n\n        // `textBaseline` is set as 'middle'.\n        textY += lineHeight / 2;\n\n        var textLineWidth = style.textLineWidth;\n        var textStroke = getStroke(style.textStroke, textLineWidth);\n        var textFill = getFill(style.textFill);\n\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n        }\n\n        for (var i = 0; i < textLines.length; i++) {\n            // Fill after stroke so the outline will not cover the main part.\n            textStroke && ctx.strokeText(textLines[i], textX, textY);\n            textFill && ctx.fillText(textLines[i], textX, textY);\n            textY += lineHeight;\n        }\n    }\n\n    function renderRichText(hostEl, ctx, text, style, rect) {\n        var contentBlock = hostEl.__textCotentBlock;\n\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n        }\n\n        drawRichText(hostEl, ctx, contentBlock, style, rect);\n    }\n\n    function drawRichText(hostEl, ctx, contentBlock, style, rect) {\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.textPadding;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n\n        needDrawBackground(style) && drawBackground(\n            hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight\n        );\n\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var usedWidth = line.width;\n\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token;\n\n            while (\n                leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n                usedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            while (\n                rightIndex >= 0\n                && (token = tokens[rightIndex], token.textAlign === 'right')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n                usedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n\n            // The other tokens are placed as textAlign 'center' if there is enough space.\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                // Consider width specified by user, use 'center' rather than 'left'.\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            lineTop += lineHeight;\n        }\n    }\n\n    function applyTextRotation(ctx, style, rect, x, y) {\n        // textRotation only apply in RectText.\n        if (rect && style.textRotation) {\n            var origin = style.textOrigin;\n            if (origin === 'center') {\n                x = rect.width / 2 + rect.x;\n                y = rect.height / 2 + rect.y;\n            }\n            else if (origin) {\n                x = origin[0] + rect.x;\n                y = origin[1] + rect.y;\n            }\n\n            ctx.translate(x, y);\n            // Positive: anticlockwise\n            ctx.rotate(-style.textRotation);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    function placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n        var tokenStyle = style.rich[token.styleName] || {};\n\n        // 'ctx.textBaseline' is always set as 'middle', for sake of\n        // the bias of \"Microsoft YaHei\".\n        var textVerticalAlign = token.textVerticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (textVerticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n\n        !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(\n            hostEl,\n            ctx,\n            tokenStyle,\n            textAlign === 'right'\n                ? x - token.width\n                : textAlign === 'center'\n                ? x - token.width / 2\n                : x,\n            y - token.height / 2,\n            token.width,\n            token.height\n        );\n\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n        }\n\n        setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n        setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n        setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n\n        setCtx(ctx, 'textAlign', textAlign);\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n\n        var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textLineWidth);\n        var textFill = getFill(tokenStyle.textFill || style.textFill);\n        var textLineWidth = retrieve2(tokenStyle.textLineWidth, style.textLineWidth);\n\n        // Fill after stroke so the outline will not cover the main part.\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n            ctx.strokeText(token.text, x, y);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n            ctx.fillText(token.text, x, y);\n        }\n    }\n\n    function needDrawBackground(style) {\n        return style.textBackgroundColor\n            || (style.textBorderWidth && style.textBorderColor);\n    }\n\n    // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n    // shape: {x, y, width, height}\n    function drawBackground(hostEl, ctx, style, x, y, width, height) {\n        var textBackgroundColor = style.textBackgroundColor;\n        var textBorderWidth = style.textBorderWidth;\n        var textBorderColor = style.textBorderColor;\n        var isPlainBg = util.isString(textBackgroundColor);\n\n        setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n        if (isPlainBg || (textBorderWidth && textBorderColor)) {\n            ctx.beginPath();\n            var textBorderRadius = style.textBorderRadius;\n            if (!textBorderRadius) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, {\n                    x: x, y: y, width: width, height: height, r: textBorderRadius\n                });\n            }\n            ctx.closePath();\n        }\n\n        if (isPlainBg) {\n            setCtx(ctx, 'fillStyle', textBackgroundColor);\n            ctx.fill();\n        }\n        else if (util.isObject(textBackgroundColor)) {\n            var image = textBackgroundColor.image;\n\n            image = imageHelper.createOrUpdateImage(\n                image, null, hostEl, onBgImageLoaded, textBackgroundColor\n            );\n            if (image && imageHelper.isImageReady(image)) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n\n        if (textBorderWidth && textBorderColor) {\n            setCtx(ctx, 'lineWidth', textBorderWidth);\n            setCtx(ctx, 'strokeStyle', textBorderColor);\n            ctx.stroke();\n        }\n    }\n\n    function onBgImageLoaded(image, textBackgroundColor) {\n        // Replace image, so that `contain/text.js#parseRichText`\n        // will get correct result in next tick.\n        textBackgroundColor.image = image;\n    }\n\n    function getBoxPosition(blockHeiht, style, rect) {\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.textAlign;\n        var textVerticalAlign = style.textVerticalAlign;\n\n        // Text position represented by coord\n        if (rect) {\n            var textPosition = style.textPosition;\n            if (textPosition instanceof Array) {\n                // Percent\n                baseX = rect.x + parsePercent(textPosition[0], rect.width);\n                baseY = rect.y + parsePercent(textPosition[1], rect.height);\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, style.textDistance\n                );\n                baseX = res.x;\n                baseY = res.y;\n                // Default align and baseline when has textPosition\n                textAlign = textAlign || res.textAlign;\n                textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n            }\n\n            // textOffset is only support in RectText, otherwise\n            // we have to adjust boundingRect for textOffset.\n            var textOffset = style.textOffset;\n            if (textOffset) {\n                baseX += textOffset[0];\n                baseY += textOffset[1];\n            }\n        }\n\n        return {\n            baseX: baseX,\n            baseY: baseY,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function setCtx(ctx, prop, value) {\n        // FIXME ??? performance try\n        // if (ctx.__currentValues[prop] !== value) {\n            ctx[prop] = ctx.__currentValues[prop] = value;\n        // }\n        return ctx[prop];\n    }\n\n    /**\n     * @param {string} [stroke] If specified, do not check style.textStroke.\n     * @param {string} [lineWidth] If specified, do not check style.textStroke.\n     * @param {number} style\n     */\n    var getStroke = helper.getStroke = function (stroke, lineWidth) {\n        return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n    };\n\n    var getFill = helper.getFill = function (fill) {\n        return (fill == null || fill === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n    };\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    function getTextXForPadding(x, textAlign, textPadding) {\n        return textAlign === 'right'\n            ? (x - textPadding[1])\n            : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n    }\n\n    /**\n     * @param {string} text\n     * @param {module:zrender/Style} style\n     * @return {boolean}\n     */\n    helper.needDrawText = function (text, style) {\n        return text != null\n            && (text\n                || style.textBackgroundColor\n                || (style.textBorderWidth && style.textBorderColor)\n                || style.textPadding\n            );\n    };\n\n    module.exports = helper;\n\n\n\n\n/***/ }),\n\n/***/ \"x8DJ\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/***/ }),\n\n/***/ \"xHSo\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    /**\n     * @param {Array} oldArr\n     * @param {Array} newArr\n     * @param {Function} oldKeyGetter\n     * @param {Function} newKeyGetter\n     * @param {Object} [context] Can be visited by this.context in callback.\n     */\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\n        this.context = context;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n\n/***/ \"xJeg\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(\"L/5X\");\n    var vec2 = __webpack_require__(\"5PYv\");\n    var bbox = __webpack_require__(\"8QnN\");\n    var BoundingRect = __webpack_require__(\"ZgA1\");\n    var dpr = __webpack_require__(\"Ug08\").devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n\n/***/ \"xLYh\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(\"h/UA\");\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder);\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function parseObjectRecursive(chain, val, options) {\n    if (!chain.length) {\n        return val;\n    }\n\n    var root = chain.shift();\n\n    var obj;\n    if (root === '[]') {\n        obj = [];\n        obj = obj.concat(parseObject(chain, val, options));\n    } else {\n        obj = options.plainObjects ? Object.create(null) : {};\n        var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n        var index = parseInt(cleanRoot, 10);\n        if (\n            !isNaN(index)\n            && root !== cleanRoot\n            && String(index) === cleanRoot\n            && index >= 0\n            && (options.parseArrays && index <= options.arrayLimit)\n        ) {\n            obj = [];\n            obj[index] = parseObject(chain, val, options);\n        } else {\n            obj[cleanRoot] = parseObject(chain, val, options);\n        }\n    }\n\n    return obj;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.ignoreQueryPrefix = options.ignoreQueryPrefix === true;\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n\n\n/***/ }),\n\n/***/ \"y7Fz\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(\"Vhze\");\n    var axisHelper = __webpack_require__(\"Ji8X\");\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var Cartesian2D = __webpack_require__(\"Fwod\");\n    var Axis2D = __webpack_require__(\"CZ4L\");\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(\"c3Mm\");\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var axisLabelModel = axisModel.getModel('axisLabel');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = axisLabelModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        each(axesMap.x, function (xAxis) {\n            fixAxisOnZero(axesMap, 'y', xAxis);\n        });\n        each(axesMap.y, function (yAxis) {\n            fixAxisOnZero(axesMap, 'x', yAxis);\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    function fixAxisOnZero(axesMap, otherAxisDim, axis) {\n        // onZero can not be enabled in these two situations:\n        // 1. When any other axis is a category axis.\n        // 2. When no axis is cross 0 point.\n        var axes = axesMap[otherAxisDim];\n\n        if (!axis.onZero) {\n            return;\n        }\n\n        var onZeroAxisIndex = axis.onZeroAxisIndex;\n\n        // If target axis is specified.\n        if (onZeroAxisIndex != null) {\n            var otherAxis = axes[onZeroAxisIndex];\n            if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n                axis.onZero = false;\n            }\n            return;\n        }\n\n        for (var idx in axes) {\n            if (axes.hasOwnProperty(idx)) {\n                var otherAxis = axes[idx];\n                if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n                    onZeroAxisIndex = +idx;\n                    break;\n                }\n            }\n        }\n\n        if (onZeroAxisIndex == null) {\n            axis.onZero = false;\n        }\n        axis.onZeroAxisIndex = onZeroAxisIndex;\n    }\n\n    function canNotOnZeroToAxis(axis) {\n        return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n    }\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {number} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n                axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(\"55nF\").register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n\n/***/ \"yZNC\":\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n\n/***/ \"yh7w\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(\"ETnK\");\n\n    module.exports = __webpack_require__(\"/wKD\").extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"zM+A\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textHelper = __webpack_require__(\"wrtm\");\n    var BoundingRect = __webpack_require__(\"ZgA1\");\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext2D} ctx\n         * @param  {Object} rect Displayable rect\n         */\n        drawRectText: function (ctx, rect) {\n            var style = this.style;\n\n            rect = style.textRect || rect;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.transformText) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // transformText and textRotation can not be used at the same time.\n            textHelper.renderText(this, ctx, text, style, rect);\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n\n/***/ \"zbFj\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n    var clazzUtil = __webpack_require__(\"TwzL\");\n    var graphic = __webpack_require__(\"Zr1P\");\n    var get = __webpack_require__(\"+Qey\").makeGetter();\n    var axisPointerModelHelper = __webpack_require__(\"UYnM\");\n    var eventTool = __webpack_require__(\"fIwg\");\n    var throttle = __webpack_require__(\"KOAn\");\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = graphic.createIcon(\n                    handleModel.get('icon'), \n                    {\n                        cursor: 'move',\n                        draggable: true,\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                        drift: bind(this._onHandleDragMove, this),\n                        ondragend: bind(this._onHandleDragEnd, this)\n                    }\n                );\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals = equals && propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n\n/***/ \"zoFB\":\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"zrBk\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(\"IW7i\");\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/0.c41e726a3202dec4448d.js","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string|Object} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/data/List.js\n// module id = ++G3\n// module chunks = 0","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             fontSize: 18\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            for (var i = 0, len = subOpts.length; i < len; i++) {\n                var subOptName = subOpts[i];\n                if (!emphasisOpt.hasOwnProperty(subOptName)\n                    && normalOpt.hasOwnProperty(subOptName)\n                ) {\n                    emphasisOpt[subOptName] = normalOpt[subOptName];\n                }\n            }\n        }\n    };\n\n    modelUtil.TEXT_STYLE_OPTIONS = [\n        'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n        'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth',\n        'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline',\n        'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY',\n        'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY',\n        'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding'\n    ];\n\n    // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n    //     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n    //     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n    //     // FIXME: deprecated, check and remove it.\n    //     'textStyle'\n    // ]);\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/util/model.js\n// module id = +Qey\n// module chunks = 0","\n\n    var textContain = require('zrender/lib/contain/text');\n    var graphicUtil = require('../../util/graphic');\n\n    var PATH_COLOR = ['textStyle', 'color'];\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @param {boolean} [isEmphasis]\n         * @return {string}\n         */\n        getTextColor: function (isEmphasis) {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (\n                    (!isEmphasis && ecModel) ? ecModel.get(PATH_COLOR) : null\n                );\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('verticalAlign') || this.getShallow('baseline'),\n                this.getShallow('padding'),\n                this.getShallow('rich'),\n                this.getShallow('truncateText')\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/model/mixin/textStyle.js\n// module id = +Ziq\n// module chunks = 0","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/helper/smoothSpline.js\n// module id = /Qyl\n// module chunks = 0","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/Path.js\n// module id = /wKD\n// module chunks = 0","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/shape/Rect.js\n// module id = 0KpF\n// module chunks = 0","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/core/matrix.js\n// module id = 0TlH\n// module chunks = 0","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/CompoundPath.js\n// module id = 0U6q\n// module chunks = 0","var core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.5.1@core-js/library/modules/_core.js\n// module id = 0nnt\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/model/globalDefault.js\n// module id = 0oBF\n// module chunks = 0","<template>\r\n  <div class=\"reset-psw-view view-background\">\r\n    <header-view :fixed=\"fixed\" :title=\"title\" :routerName=\"routerName\"></header-view>\r\n    <tab-view :action=\"tabAction\" @changeTab=\"changeTab\" :activeId=\"tabId\"></tab-view>\r\n    <div id=\"mychart\" class=\"chart\"></div>\r\n    <ul class=\"details-list\">\r\n      <li><span class=\"details-type\">类型</span><span>金额</span><span>余额</span></li>\r\n      <li v-for=\"item in detailsList\">\r\n        <div class=\"type-date\"><span class=\"item-type\">{{item.profitType}}</span><span>{{item.takeTime}}</span></div><span>{{item.joyScore}}</span><span class=\"item-balance\">{{item.totalJoyScore}}</span></li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import header from '@/components/header/header'\r\n  import tab from '@/components/tab/tab'\r\n  import {getProfitChart,getProfitList} from '../../service/getData'\r\n  \r\n  \r\n  let echarts = require('echarts/lib/echarts')\r\n  // 引入柱状图组件\r\n  require('echarts/lib/chart/line')\r\n  // 引入提示框和title组件\r\n  require('echarts/lib/component/tooltip')\r\n  require('echarts/lib/component/title')\r\n  \r\n  \r\n  export default {\r\n    components: {\r\n      'tab-view': tab,\r\n      'header-view': header\r\n    },\r\n    data () {\r\n      return {\r\n        title: '我的收益',\r\n        fixed: false,\r\n        routerName: 'custom',\r\n        chartsList: [],\r\n        detailsList: [],\r\n        chartXList: [],\r\n        chartYList: [],\r\n        echartOption: [],\r\n        myChart:null,\r\n        tabId: '7',\r\n        days: '7',\r\n        tabAction: [\r\n          {\r\n            id: '7',\r\n            categoryName: '最近7天'\r\n          },\r\n          {\r\n            id: '15',\r\n            categoryName: '最近15天'\r\n          },\r\n          {\r\n            id: '30',\r\n            categoryName: '最近30天'\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    created: function () {\r\n      var _this = this\r\n      if (this.$route.params.name) {\r\n        this.routerName = this.$route.params.name // 上个路由带过来\r\n        localStorage.prev = this.$route.params.name\r\n      } else {\r\n        this.routerName = localStorage.prev\r\n      }\r\n      /*chartXList = ['08-18', '08-20', '08-21', '08-22', '08-23', '08-24', '08-25']\r\n      chartYList = ['500', '200', '300', '-44', '-330', '86', '50']*/\r\n      //console.log(chartXList)\r\n      this.getProfitListData(this.days);\r\n    },\r\n    mounted: function () {\r\n      this.getChartData(this.days);\r\n    },\r\n    methods: {\r\n      setting: function (val, param) {\r\n        this.$router.push({\r\n          name: val,\r\n          params: {\r\n            setparams: param,\r\n            prev: this.$route.name\r\n          }\r\n        })\r\n      },\r\n      getChartData : function(days) {\r\n        var _this = this\r\n        getProfitChart(days)\r\n        .then(function (rep) {\r\n          _this.chartsList = rep.data\r\n          _this.chartXList = []\r\n          _this.chartYList = []\r\n          for(var i=0;i<_this.chartsList.length;i++){\r\n             _this.chartXList.push(_this.chartsList[i].takeTime)\r\n             _this.chartYList.push(_this.chartsList[i].joyScore)\r\n          }\r\n          _this.drawLine()\r\n          _this.myChart.setOption({\r\n              xAxis: {\r\n                  data: _this.chartXList\r\n              },\r\n              series: [{\r\n                  data: _this.chartYList\r\n              }]\r\n          })\r\n          _this.myChart.hideLoading();\r\n        })\r\n        .catch(function () {\r\n          _this.$toast('连接服务器失败！')\r\n        })\r\n      },\r\n      getProfitListData: function(days){\r\n        var _this = this\r\n        getProfitList(days)\r\n        .then(function (rep) {\r\n          _this.detailsList = rep.data\r\n        })\r\n        .catch(function () {\r\n          _this.$toast('连接服务器失败！')\r\n        })\r\n      },\r\n      changeTab: function (val) { // 这个是切换tab\r\n        this.tabId = val\r\n        this.days = val\r\n        this.getChartData(this.days)\r\n        this.getProfitListData(this.days)\r\n      },\r\n      drawLine: function () {\r\n        // 基于准备好的dom，初始化echarts实例\r\n        if(this.myChart){\r\n          this.myChart = null\r\n          this.echartOption = []\r\n        }\r\n        this.myChart = echarts.init(document.getElementById('mychart'))\r\n        // 绘制图表\r\n        this.echartOption = {\r\n          backgroundColor: '#fff',\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            backgroundColor: '#FF8B20',\r\n            formatter: function (params) {\r\n              return params[0].value\r\n            }\r\n          },\r\n          title: {\r\n            left: 'center',\r\n            text: ''\r\n          },\r\n          grid: { // 图标网格偏移\r\n            left: '11%',\r\n            right: '5%',\r\n            top: '5%',\r\n            bottom: '15%'\r\n          },\r\n          xAxis: {\r\n            type: 'category', // 折线图\r\n            boundaryGap: false,\r\n            axisLine: {\r\n              show: false,\r\n              onZero: false\r\n            },\r\n            axisLabel: {\r\n              textStyle: {\r\n                color: '#A5A5A5'\r\n              }\r\n            },\r\n            axisTick: {\r\n              show: false // 不显示刻度\r\n            },\r\n            data: []\r\n          },\r\n          yAxis: {\r\n            type: 'value',\r\n            boundaryGap: false,\r\n            axisLine: {\r\n              show: false\r\n            },\r\n            splitLine: {\r\n              show: true, // 是否显示y轴线\r\n              lineStyle: {\r\n                color: '#FFE9D4',\r\n                type: 'dashed'\r\n              }\r\n            },\r\n            axisLabel: {\r\n              textStyle: {\r\n                color: '#A5A5A5'\r\n              }\r\n            },\r\n            axisTick: {\r\n              show: false // 不显示刻度\r\n            }\r\n          },\r\n          calculable: true,\r\n          series: [\r\n            {\r\n              name: '',\r\n              type: 'line',\r\n              smooth: false, // 是否圆滑\r\n              sampling: 'average',\r\n              itemStyle: {\r\n                normal: {\r\n                  color: 'rgb(255, 143, 40)'\r\n                }\r\n              },\r\n              areaStyle: {\r\n                normal: {\r\n                  color: 'rgb(255, 244, 233)'\r\n                }\r\n              },\r\n              data: []\r\n            }\r\n          ]\r\n        }\r\n        this.myChart.showLoading();\r\n        this.myChart.setOption(this.echartOption,true)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .chart {\r\n    width: 100%;\r\n    height: 32.68%;\r\n    background-color: white;\r\n  }\r\n  \r\n  .details-list {\r\n    background-color: white;\r\n    margin-top: .05rem;\r\n    height: 53%;\r\n    overflow: auto;\r\n  }\r\n  \r\n  .details-list:first-child {\r\n    display: flex;\r\n    border-bottom: .01rem solid rgba(0, 0, 0, .1);\r\n  }\r\n  \r\n  .details-list li {\r\n    display: flex;\r\n    border-bottom: .01rem solid rgba(0, 0, 0, .1);\r\n  }\r\n  \r\n  .details-list li>span {\r\n    line-height: .4rem;\r\n    text-align: center;\r\n    display: inline-block;\r\n    flex: 1;\r\n  }\r\n  \r\n  .details-type {\r\n    text-align: left!important;\r\n    flex: 2!important;\r\n    padding-left: .15rem;\r\n  }\r\n  \r\n  .item-type {\r\n    color: #333;\r\n    display: block!important;\r\n    text-align: left!important;\r\n    line-height: .15rem!important;\r\n  }\r\n  \r\n  .item-balance {\r\n    color: #ff8b20;\r\n  }\r\n  \r\n  .type-date {\r\n    flex: 2;\r\n    height: .54rem;\r\n    padding: .12rem 0 .0rem 0.15rem;\r\n  }\r\n  \r\n  .type-date>span {\r\n    font-size: .12rm;\r\n  }\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/page/myEarnings/myEarnings.vue?2de43b15","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/shape/Line.js\n// module id = 1j0N\n// module chunks = 0","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/core/LRU.js\n// module id = 2Ttr\n// module chunks = 0","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 2qdY\n// module chunks = 0","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/axisPointer/globalListener.js\n// module id = 36nW\n// module chunks = 0","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/scale/Ordinal.js\n// module id = 3O3a\n// module chunks = 0","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/coord/Axis.js\n// module id = 3YoW\n// module chunks = 0","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/util/symbol.js\n// module id = 4AlW\n// module chunks = 0","\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var imageHelper = require('../graphic/helper/image');\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n\n    var TEXT_CACHE_MAX = 5000;\n    var STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\n    var DEFAULT_FONT = '12px sans-serif';\n\n    var retrieve2 = util.retrieve2;\n    var retrieve3 = util.retrieve3;\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {number} width\n     */\n    function getTextWidth(text, font) {\n        font = font || DEFAULT_FONT;\n        var key = text + ':' + font;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // textContain.measureText may be overrided in SVG or VML\n            width = Math.max(textContain.measureText(textLines[i], font).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {string} [textAlign='left']\n     * @param {string} [textVerticalAlign='top']\n     * @param {Array.<number>} [textPadding]\n     * @param {Object} [rich]\n     * @param {Object} [truncate]\n     * @return {Object} {x, y, width, height, lineHeight}\n     */\n    function getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        return rich\n            ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate)\n            : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n    }\n\n    function getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n        var contentBlock = parsePlainText(text, font, textPadding, truncate);\n        var outerWidth = getTextWidth(text, font);\n        if (textPadding) {\n            outerWidth += textPadding[1] + textPadding[3];\n        }\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n        rect.lineHeight = contentBlock.lineHeight;\n\n        return rect;\n    }\n\n    function getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        var contentBlock = parseRichText(text, {\n            rich: rich,\n            truncate: truncate,\n            font: font,\n            textAlign: textAlign,\n            textPadding: textPadding\n        });\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        return new BoundingRect(x, y, outerWidth, outerHeight);\n    }\n\n    /**\n     * @public\n     * @param {number} x\n     * @param {number} width\n     * @param {string} [textAlign='left']\n     * @return {number} Adjusted x.\n     */\n    function adjustTextX(x, width, textAlign) {\n        // FIXME Right to left language\n        if (textAlign === 'right') {\n            x -= width;\n        }\n        else if (textAlign === 'center') {\n            x -= width / 2;\n        }\n        return x;\n    }\n\n    /**\n     * @public\n     * @param {number} y\n     * @param {number} height\n     * @param {string} [textVerticalAlign='top']\n     * @return {number} Adjusted y.\n     */\n    function adjustTextY(y, height, textVerticalAlign) {\n        if (textVerticalAlign === 'middle') {\n            y -= height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y -= height;\n        }\n        return y;\n    }\n\n    /**\n     * @public\n     * @param {stirng} textPosition\n     * @param {Object} rect {x, y, width, height}\n     * @param {number} distance\n     * @return {Object} {x, y, textAlign, textVerticalAlign}\n     */\n    function adjustTextPositionOnRect(textPosition, rect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n        var halfHeight = height / 2;\n\n        var textAlign = 'left';\n        var textVerticalAlign = 'top';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - distance;\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - distance;\n                textAlign = 'right';\n                textVerticalAlign = 'bottom';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @public\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} font\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, font, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        var textLines = (text + '').split('\\n');\n        options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\n\n        // FIXME\n        // It is not appropriate that every line has '...' when truncate multiple lines.\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            textLines[i] = truncateSingleLine(textLines[i], options);\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n        options = util.extend({}, options);\n\n        options.font = font;\n        var ellipsis = retrieve2(ellipsis, '...');\n        options.maxIterations = retrieve2(options.maxIterations, 2);\n        var minChar = options.minChar = retrieve2(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        options.cnCharWidth = getTextWidth('国', font);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = options.ascCharWidth = getTextWidth('a', font);\n        options.placeholder = retrieve2(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        options.ellipsis = ellipsis;\n        options.ellipsisWidth = ellipsisWidth;\n        options.contentWidth = contentWidth;\n        options.containerWidth = containerWidth;\n\n        return options;\n    }\n\n    function truncateSingleLine(textLine, options) {\n        var containerWidth = options.containerWidth;\n        var font = options.font;\n        var contentWidth = options.contentWidth;\n\n        if (!containerWidth) {\n            return '';\n        }\n\n        var lineWidth = getTextWidth(textLine, font);\n\n        if (lineWidth <= containerWidth) {\n            return textLine;\n        }\n\n        for (var j = 0;; j++) {\n            if (lineWidth <= contentWidth || j >= options.maxIterations) {\n                textLine += options.ellipsis;\n                break;\n            }\n\n            var subLength = j === 0\n                ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth)\n                : lineWidth > 0\n                ? Math.floor(textLine.length * contentWidth / lineWidth)\n                : 0;\n\n            textLine = textLine.substr(0, subLength);\n            lineWidth = getTextWidth(textLine, font);\n        }\n\n        if (textLine === '') {\n            textLine = options.placeholder;\n        }\n\n        return textLine;\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    /**\n     * @public\n     * @param {string} font\n     * @return {number} line height\n     */\n    function getLineHeight(font) {\n        // FIXME A rough approach.\n        return getTextWidth('国', font);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {Object} width\n     */\n    function measureText(text, font) {\n        var ctx = util.getContext();\n        ctx.font = font || DEFAULT_FONT;\n        return ctx.measureText(text);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {Object} [truncate]\n     * @return {Object} block: {lineHeight, lines, height, outerHeight}\n     *  Notice: for performance, do not calculate outerWidth util needed.\n     */\n    function parsePlainText(text, font, padding, truncate) {\n        text != null && (text += '');\n\n        var lineHeight = getLineHeight(font);\n        var lines = text ? text.split('\\n') : [];\n        var height = lines.length * lineHeight;\n        var outerHeight = height;\n\n        if (padding) {\n            outerHeight += padding[0] + padding[2];\n        }\n\n        if (text && truncate) {\n            var truncOuterHeight = truncate.outerHeight;\n            var truncOuterWidth = truncate.outerWidth;\n            if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n                text = '';\n                lines = [];\n            }\n            else if (truncOuterWidth != null) {\n                var options = prepareTruncateOptions(\n                    truncOuterWidth - (padding ? padding[1] + padding[3] : 0),\n                    font,\n                    truncate.ellipsis,\n                    {minChar: truncate.minChar, placeholder: truncate.placeholder}\n                );\n\n                // FIXME\n                // It is not appropriate that every line has '...' when truncate multiple lines.\n                for (var i = 0, len = lines.length; i < len; i++) {\n                    lines[i] = truncateSingleLine(lines[i], options);\n                }\n            }\n        }\n\n        return {\n            lines: lines,\n            height: height,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight\n        };\n    }\n\n    /**\n     * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n     * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n     *\n     * @public\n     * @param {string} text\n     * @param {Object} style\n     * @return {Object} block\n     * {\n     *      width,\n     *      height,\n     *      lines: [{\n     *          lineHeight,\n     *          width,\n     *          tokens: [[{\n     *              styleName,\n     *              text,\n     *              width,      // include textPadding\n     *              height,     // include textPadding\n     *              textWidth, // pure text width\n     *              textHeight, // pure text height\n     *              lineHeihgt,\n     *              font,\n     *              textAlign,\n     *              textVerticalAlign\n     *          }], [...], ...]\n     *      }, ...]\n     * }\n     * If styleName is undefined, it is plain text.\n     */\n    function parseRichText(text, style) {\n        var contentBlock = {lines: [], width: 0, height: 0};\n\n        text != null && (text += '');\n        if (!text) {\n            return contentBlock;\n        }\n\n        var lastIndex = STYLE_REG.lastIndex = 0;\n        var result;\n        while ((result = STYLE_REG.exec(text)) != null)  {\n            var matchedIndex = result.index;\n            if (matchedIndex > lastIndex) {\n                pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n            }\n            pushTokens(contentBlock, result[2], result[1]);\n            lastIndex = STYLE_REG.lastIndex;\n        }\n\n        if (lastIndex < text.length) {\n            pushTokens(contentBlock, text.substring(lastIndex, text.length));\n        }\n\n        var lines = contentBlock.lines;\n        var contentHeight = 0;\n        var contentWidth = 0;\n        // For `textWidth: 100%`\n        var pendingList = [];\n\n        var stlPadding = style.textPadding;\n\n        var truncate = style.truncate;\n        var truncateWidth = truncate && truncate.outerWidth;\n        var truncateHeight = truncate && truncate.outerHeight;\n        if (stlPadding) {\n            truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n            truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n        }\n\n        // Calculate layout info of tokens.\n        for (var i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var lineHeight = 0;\n            var lineWidth = 0;\n\n            for (var j = 0; j < line.tokens.length; j++) {\n                var token = line.tokens[j];\n                var tokenStyle = token.styleName && style.rich[token.styleName] || {};\n                // textPadding should not inherit from style.\n                var textPadding = token.textPadding = tokenStyle.textPadding;\n\n                // textFont has been asigned to font by `normalizeStyle`.\n                var font = token.font = tokenStyle.font || style.font;\n\n                // textHeight can be used when textVerticalAlign is specified in token.\n                var tokenHeight = token.textHeight = retrieve2(\n                    // textHeight should not be inherited, consider it can be specified\n                    // as box height of the block.\n                    tokenStyle.textHeight, textContain.getLineHeight(font)\n                );\n                textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n                token.height = tokenHeight;\n                token.lineHeight = retrieve3(\n                    tokenStyle.textLineHeight, style.textLineHeight, tokenHeight\n                );\n\n                token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n                token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n                if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n                    return {lines: [], width: 0, height: 0};\n                }\n\n                token.textWidth = textContain.getWidth(token.text, font);\n                var tokenWidth = tokenStyle.textWidth;\n                var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto';\n\n                // Percent width, can be `100%`, can be used in drawing separate\n                // line when box width is needed to be auto.\n                if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n                    token.percentWidth = tokenWidth;\n                    pendingList.push(token);\n                    tokenWidth = 0;\n                    // Do not truncate in this case, because there is no user case\n                    // and it is too complicated.\n                }\n                else {\n                    if (tokenWidthNotSpecified) {\n                        tokenWidth = token.textWidth;\n\n                        // FIXME: If image is not loaded and textWidth is not specified, calling\n                        // `getBoundingRect()` will not get correct result.\n                        var textBackgroundColor = tokenStyle.textBackgroundColor;\n                        var bgImg = textBackgroundColor && textBackgroundColor.image;\n\n                        // Use cases:\n                        // (1) If image is not loaded, it will be loaded at render phase and call\n                        // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n                        // image, and then the right size will be calculated here at the next tick.\n                        // See `graphic/helper/text.js`.\n                        // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n                        // use `imageHelper.findExistImage` to find cached image.\n                        // `imageHelper.findExistImage` will always be called here before\n                        // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n                        // which ensures that image will not be rendered before correct size calcualted.\n                        if (bgImg) {\n                            bgImg = imageHelper.findExistImage(bgImg);\n                            if (imageHelper.isImageReady(bgImg)) {\n                                tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n                            }\n                        }\n                    }\n\n                    var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n                    tokenWidth += paddingW;\n\n                    var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n                    if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n                        if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n                            token.text = '';\n                            token.textWidth = tokenWidth = 0;\n                        }\n                        else {\n                            token.text = truncateText(\n                                token.text, remianTruncWidth - paddingW, font, truncate.ellipsis,\n                                {minChar: truncate.minChar}\n                            );\n                            token.textWidth = textContain.getWidth(token.text, font);\n                            tokenWidth = token.textWidth + paddingW;\n                        }\n                    }\n                }\n\n                lineWidth += (token.width = tokenWidth);\n                tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n            }\n\n            line.width = lineWidth;\n            line.lineHeight = lineHeight;\n            contentHeight += lineHeight;\n            contentWidth = Math.max(contentWidth, lineWidth);\n        }\n\n        contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n        contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n        if (stlPadding) {\n            contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n            contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n        }\n\n        for (var i = 0; i < pendingList.length; i++) {\n            var token = pendingList[i];\n            var percentWidth = token.percentWidth;\n            // Should not base on outerWidth, because token can not be placed out of padding.\n            token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n        }\n\n        return contentBlock;\n    }\n\n    function pushTokens(block, str, styleName) {\n        var isEmptyStr = str === '';\n        var strs = str.split('\\n');\n        var lines = block.lines;\n\n        for (var i = 0; i < strs.length; i++) {\n            var text = strs[i];\n            var token = {\n                styleName: styleName,\n                text: text,\n                isLineHolder: !text && !isEmptyStr\n            };\n\n            // The first token should be appended to the last line.\n            if (!i) {\n                var tokens = (lines[lines.length - 1] || (lines[0] = {tokens: []})).tokens;\n\n                // Consider cases:\n                // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n                // (which is a placeholder) should be replaced by new token.\n                // (2) A image backage, where token likes {a|}.\n                // (3) A redundant '' will affect textAlign in line.\n                // (4) tokens with the same tplName should not be merged, because\n                // they should be displayed in different box (with border and padding).\n                var tokensLen = tokens.length;\n                (tokensLen === 1 && tokens[0].isLineHolder)\n                    ? (tokens[0] = token)\n                    // Consider text is '', only insert when it is the \"lineHolder\" or\n                    // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n                    : ((text || !tokensLen || isEmptyStr) && tokens.push(token));\n            }\n            // Other tokens always start a new line.\n            else {\n                // If there is '', insert it as a placeholder.\n                lines.push({tokens: [token]});\n            }\n        }\n    }\n\n    function makeFont(style) {\n        // FIXME in node-canvas fontWeight is before fontStyle\n        // Use `fontSize` `fontFamily` to check whether font properties are defined.\n        return (style.fontSize || style.fontFamily) && [\n            style.fontStyle,\n            style.fontWeight,\n            (style.fontSize || 12) + 'px',\n            // If font properties are defined, `fontFamily` should not be ignored.\n            style.fontFamily || 'sans-serif'\n        ].join(' ') || style.textFont || style.font;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: measureText,\n\n        getLineHeight: getLineHeight,\n\n        parsePlainText: parsePlainText,\n\n        parseRichText: parseRichText,\n\n        adjustTextX: adjustTextX,\n\n        adjustTextY: adjustTextY,\n\n        makeFont: makeFont,\n\n        DEFAULT_FONT: DEFAULT_FONT\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/contain/text.js\n// module id = 4EB+\n// module chunks = 0","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (!forceAnimate && isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} [easing]\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @param  {boolean} forceAnimate\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing, forceAnimate) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName, forceAnimate\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            // This optimization will help the case that in the upper application\n            // the view may be refreshed frequently, where animation will be\n            // called repeatly but nothing changed.\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/animation/Animator.js\n// module id = 4tk+\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/CoordinateSystem.js\n// module id = 55nF\n// module chunks = 0","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/core/vector.js\n// module id = 5PYv\n// module chunks = 0","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/model/OptionManager.js\n// module id = 5WUZ\n// module chunks = 0","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n    var labelHelper = require('./labelHelper');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n\n        if (valueDim != null) {\n            graphic.setLabelStyle(\n                elStyle, hoverItemStyle, labelModel, hoverLabelModel,\n                {\n                    labelFetcher: seriesModel,\n                    labelDataIndex: idx,\n                    defaultText: data.get(valueDim, idx),\n                    isRectText: true,\n                    autoColor: color\n                }\n            );\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        // FIXME\n        // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = null;\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/chart/helper/Symbol.js\n// module id = 5Ww7\n// module chunks = 0","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/loading/default.js\n// module id = 5X0Y\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        // Pending\n        // See #6121. But we are not able to reproduce it yet.\n        if (!coordSysAxesInfo) {\n            return;\n        }\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 5nuQ\n// module chunks = 0","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/contain/util.js\n// module id = 636P\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.5.1@core-js/library/modules/es6.object.define-property.js\n// module id = 6NfO\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/_css-loader@0.28.7@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-43b3fa9d\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/selector.js?type=styles&index=0!./myEarnings.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/_vue-style-loader@3.0.1@vue-style-loader/lib/addStylesClient.js\")(\"cc448e8c\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_extract-text-webpack-plugin@2.1.2@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/_vue-style-loader@3.0.1@vue-style-loader!./~/_css-loader@0.28.7@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/_vue-loader@13.0.4@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-43b3fa9d\",\"scoped\":false,\"hasInlineConfig\":false}!./~/_vue-loader@13.0.4@vue-loader/lib/selector.js?type=styles&index=0!./src/page/myEarnings/myEarnings.vue\n// module id = 6PzY\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/LinearGradient.js\n// module id = 6ygO\n// module chunks = 0","<template>\r\n  <mt-header :fixed=\"isfixed\" :title=\"pageTitle\">\r\n    <mt-button slot=\"left\"  icon=\"back\" @click=\"ceshi\"></mt-button>\r\n    <mt-button slot=\"right\" @click=\"rightTextClick\">{{rightLabel}}</mt-button>\r\n  </mt-header>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    props: ['title', 'routerName', 'fixed', 'rightText'],\r\n    data () {\r\n      return {\r\n        name: (this.routerName === undefined ? '' : this.routerName),\r\n        isfixed: this.fixed === undefined ? true : this.fixed,\r\n      }\r\n    },\r\n    computed: {\r\n      pageTitle: function () {\r\n        return this.title\r\n      },\r\n      rightLabel: function () {\r\n        return this.rightText === undefined ? '' : this.rightText\r\n      }\r\n    },\r\n    methods: {\r\n      rightTextClick: function () {\r\n        this.$emit('rightClick')\r\n      },\r\n      ceshi:function () {\r\n        this.$router.goback()\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/header/header.vue?31f883ec","exports = module.exports = require(\"../../../node_modules/_css-loader@0.28.7@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"tab.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_css-loader@0.28.7@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/_vue-loader@13.0.4@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-a87ec720\",\"scoped\":false,\"hasInlineConfig\":false}!./~/_vue-loader@13.0.4@vue-loader/lib/selector.js?type=styles&index=0!./src/components/tab/tab.vue\n// module id = 7Zni\n// module chunks = 0 4 5 7 8","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.5.1@core-js/library/modules/_to-primitive.js\n// module id = 7qHl\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/core/bbox.js\n// module id = 8QnN\n// module chunks = 0","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/util/number.js\n// module id = 8wRg\n// module chunks = 0","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/shape/Polyline.js\n// module id = 9mQP\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            // Backward compat: using subType on theme.\n            // But if name duplicate between series subType\n            // (for example: parallel) add component mainType,\n            // add suffix 'Series'.\n            var themeSubType = this.subType;\n            if (ComponentModel.hasClass(themeSubType)) {\n                themeSubType += 'Series';\n            }\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `show`\n            modelUtil.defaultEmphasis(option.label, ['show']);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                var props = ['show'];\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, props);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/model/Series.js\n// module id = A9Km\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/_css-loader@0.28.7@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a87ec720\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/selector.js?type=styles&index=0!./tab.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/_vue-style-loader@3.0.1@vue-style-loader/lib/addStylesClient.js\")(\"2a1d6ba2\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_extract-text-webpack-plugin@2.1.2@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/_vue-style-loader@3.0.1@vue-style-loader!./~/_css-loader@0.28.7@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/_vue-loader@13.0.4@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-a87ec720\",\"scoped\":false,\"hasInlineConfig\":false}!./~/_vue-loader@13.0.4@vue-loader/lib/selector.js?type=styles&index=0!./src/components/tab/tab.vue\n// module id = B6bR\n// module chunks = 0 4 5 7 8","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@2.1.2@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a87ec720\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/selector?type=styles&index=0!./tab.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/selector?type=script&index=0!./tab.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a87ec720\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/selector?type=template&index=0!./tab.vue\"\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/tab/tab.vue\n// module id = BrIN\n// module chunks = 0 4 5 7 8","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/coord/cartesian/Axis2D.js\n// module id = CZ4L\n// module chunks = 0","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/helper/smoothBezier.js\n// module id = D1zL\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            onZeroAxisIndex: null,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            fontSize: 12\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n        // maxInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/coord/axisDefault.js\n// module id = D7iD\n// module chunks = 0","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n    var imageHelper = require('./helper/image');\n\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n\n            var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this);\n\n            if (!image || !imageHelper.isImageReady(image)) {\n                return;\n            }\n\n            // 图片已经加载完成\n            // if (image.nodeName.toUpperCase() == 'IMG') {\n            //     if (!image.complete) {\n            //         return;\n            //     }\n            // }\n            // Else is canvas\n\n            var x = style.x || 0;\n            var y = style.y || 0;\n            var width = style.width;\n            var height = style.height;\n            var aspect = image.width / image.height;\n            if (width == null && height != null) {\n                // Keep image/height ratio\n                width = height * aspect;\n            }\n            else if (height == null && width != null) {\n                height = width / aspect;\n            }\n            else if (width == null && height == null) {\n                width = image.width;\n                height = image.height;\n            }\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            if (style.sWidth && style.sHeight) {\n                var sx = style.sx || 0;\n                var sy = style.sy || 0;\n                ctx.drawImage(\n                    image,\n                    sx, sy, style.sWidth, style.sHeight,\n                    x, y, width, height\n                );\n            }\n            else if (style.sx && style.sy) {\n                var sx = style.sx;\n                var sy = style.sy;\n                var sWidth = width - sx;\n                var sHeight = height - sy;\n                ctx.drawImage(\n                    image,\n                    sx, sy, sWidth, sHeight,\n                    x, y, width, height\n                );\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/Image.js\n// module id = DY7z\n// module chunks = 0","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/axisPointer.js\n// module id = DacG\n// module chunks = 0","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/tooltip/TooltipModel.js\n// module id = DoL6\n// module chunks = 0","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n    var textHelper = require('./helper/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            // Use props with prefix 'text'.\n            style.fill = style.stroke = style.shadowBlur = style.shadowColor =\n                style.shadowOffsetX = style.shadowOffsetY = null;\n\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            this.setTransform(ctx);\n\n            textHelper.renderText(this, ctx, text, style);\n\n            this.restoreTransform(ctx);\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            if (!this._rect) {\n                var text = style.text;\n                text != null ? (text += '') : (text = '');\n\n                var rect = textContain.getBoundingRect(\n                    style.text + '',\n                    style.font,\n                    style.textAlign,\n                    style.textVerticalAlign,\n                    style.textPadding,\n                    style.rich\n                );\n\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n\n                if (textHelper.getStroke(style.textStroke, style.textLineWidth)) {\n                    var w = style.textLineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/Text.js\n// module id = E6pA\n// module chunks = 0","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/helper/poly.js\n// module id = ETnK\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         * @param {number} [maxInterval]\n         */\n        niceTicks: function (splitNumber, minInterval, maxInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(\n                extent, splitNumber, minInterval, maxInterval\n            );\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval]\n         * @param {boolean} [opt.maxInterval]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/scale/Interval.js\n// module id = EdBd\n// module chunks = 0","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/model/Model.js\n// module id = EnYE\n// module chunks = 0","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/gridSimple.js\n// module id = EuDp\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = Fwod\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', {\n    staticClass: \"my-tab\"\n  }, _vm._l((_vm.list), function(item, key) {\n    return _c('div', {\n      class: {\n        mySelected: item.id == _vm.active\n      },\n      on: {\n        \"click\": function($event) {\n          _vm.swapTab(item.id)\n        }\n      }\n    }, [_c('label', [_vm._v(_vm._s(item.categoryName))])])\n  }))\n}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@13.0.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-a87ec720\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/_vue-loader@13.0.4@vue-loader/lib/selector.js?type=template&index=0!./src/components/tab/tab.vue\n// module id = G9LC\n// module chunks = 0 4 5 7 8","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = labelModel.getFont();\n        var textRect = textContain.getBoundingRect(text, font);\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            // TODO: rich\n            style: {\n                text: text,\n                textFont: font,\n                textFill: labelModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/axisPointer/viewHelper.js\n// module id = GLZC\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/view/Component.js\n// module id = GYRJ\n// module chunks = 0","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/chart/helper/createListFromArray.js\n// module id = HILd\n// module chunks = 0","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/helper.js\n// module id = HJE7\n// module chunks = 0","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/dom/HandlerProxy.js\n// module id = HQ6Y\n// module chunks = 0","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/mixin/Eventful.js\n// module id = HxU1\n// module chunks = 0","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            var Ctor = source.constructor;\n            if (source.constructor.from) {\n                result = Ctor.from(source);\n            }\n            else {\n                result = new Ctor(source.length);\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * Low performance.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    function retrieve2(value0, value1) {\n        return value0 != null\n            ? value0\n            : value1;\n    }\n\n    function retrieve3(value0, value1, value2) {\n        return value0 != null\n            ? value0\n            : value1 != null\n            ? value1\n            : value2;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     * @return {Array.<number>}\n     */\n    function normalizeCssArray(val) {\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        var len = val.length;\n        if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[HASH_MAP_PREFIX + key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        retrieve2: retrieve2,\n        retrieve3: retrieve3,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        normalizeCssArray: normalizeCssArray,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/core/util.js\n// module id = IW7i\n// module chunks = 0","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/chart/helper/SymbolDraw.js\n// module id = IpD5\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@13.0.4@vue-loader/lib/component-normalizer.js\n// module id = J0+h\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Object} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        getViewportRootOffset: function () {\n            var viewportRoot = this.getViewportRoot();\n            if (viewportRoot) {\n                return {\n                    offsetLeft: viewportRoot.offsetLeft || 0,\n                    offsetTop: viewportRoot.offsetTop || 0\n                };\n            }\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            // IE8 does not support getComputedStyle, but it use VML.\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/Painter.js\n// module id = JGbQ\n// module chunks = 0","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/model/mixin/areaStyle.js\n// module id = JUn3\n// module chunks = 0","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        else if (typeof min === 'function') {\n            min = min({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n        else if (typeof max === 'function') {\n            max = max({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        var scaleType = scale.type;\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('minInterval') : null,\n            maxInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('maxInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/coord/axisHelper.js\n// module id = Ji8X\n// module chunks = 0","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/visual/symbol.js\n// module id = Jwij\n// module chunks = 0","\n\n    var env = require('../../core/env');\n\n    // Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n    // where exception \"unexpected call to method or property access\"\n    // might be thrown when calling ctx.fill or ctx.stroke after a path\n    // whose area size is zero is drawn and ctx.clip() is called and\n    // shadowBlur is set. See #4572, #3112, #5777.\n    // (e.g.,\n    //  ctx.moveTo(10, 10);\n    //  ctx.lineTo(20, 10);\n    //  ctx.closePath();\n    //  ctx.clip();\n    //  ctx.shadowBlur = 10;\n    //  ...\n    //  ctx.fill();\n    // )\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = function (orignalBrush) {\n\n        // version string can be: '11.0'\n        return (env.browser.ie && env.browser.version >= 11)\n\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var clipPath = clipPaths[i];\n                        var shape = clipPath && clipPath.shape;\n                        var type = clipPath && clipPath.type;\n\n                        if (shape && (\n                            (type === 'sector' && shape.startAngle === shape.endAngle)\n                            || (type === 'rect' && (!shape.width || !shape.height))\n                        )) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                // It is save to put shadowTemp static, because shadowTemp\n                                // will be all modified each item brush called.\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                orignalBrush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n\n            : orignalBrush;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = Jx77\n// module chunks = 0","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/util/throttle.js\n// module id = KOAn\n// module chunks = 0","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/core/curve.js\n// module id = L/5X\n// module chunks = 0","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style, this);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj, this);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/Displayable.js\n// module id = LDzn\n// module chunks = 0","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/core/guid.js\n// module id = LEnD\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    formatUtil.normalizeCssArray = zrUtil.normalizeCssArray;\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .replace('M', M)\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    formatUtil.getTextRect = textContain.getBoundingRect;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/util/format.js\n// module id = LXmB\n// module chunks = 0","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.5.1@core-js/library/modules/_object-dp.js\n// module id = Lohu\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var graphic = require('../../util/graphic');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>|Object} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function getOuterSize(el) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        // Consider browser compatibility.\n        // IE8 does not support getComputedStyle.\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            var stl = document.defaultView.getComputedStyle(el);\n            if (stl) {\n                width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10)\n                    + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n                height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10)\n                    + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n            }\n        }\n\n        return {width: width, height: height};\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/tooltip/TooltipView.js\n// module id = Lr5q\n// module chunks = 0","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/Gradient.js\n// module id = N3i3\n// module chunks = 0","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.6.1';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function (dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function (id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // var start = new Date();\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n            // var end = new Date();\n\n            // var log = document.getElementById('log');\n            // if (log) {\n            //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n            // }\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/zrender.js\n// module id = OWKC\n// module chunks = 0","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/scale/Scale.js\n// module id = OWrI\n// module chunks = 0","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/contain/line.js\n// module id = P469\n// module chunks = 0","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.5.1@core-js/library/modules/_descriptors.js\n// module id = PRM/\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/model/mixin/boxLayout.js\n// module id = PiNk\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"reset-psw-view view-background\"\n  }, [_c('header-view', {\n    attrs: {\n      \"fixed\": _vm.fixed,\n      \"title\": _vm.title,\n      \"routerName\": _vm.routerName\n    }\n  }), _vm._v(\" \"), _c('tab-view', {\n    attrs: {\n      \"action\": _vm.tabAction,\n      \"activeId\": _vm.tabId\n    },\n    on: {\n      \"changeTab\": _vm.changeTab\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"chart\",\n    attrs: {\n      \"id\": \"mychart\"\n    }\n  }), _vm._v(\" \"), _c('ul', {\n    staticClass: \"details-list\"\n  }, [_vm._m(0), _vm._v(\" \"), _vm._l((_vm.detailsList), function(item) {\n    return _c('li', [_c('div', {\n      staticClass: \"type-date\"\n    }, [_c('span', {\n      staticClass: \"item-type\"\n    }, [_vm._v(_vm._s(item.profitType))]), _c('span', [_vm._v(_vm._s(item.takeTime))])]), _c('span', [_vm._v(_vm._s(item.joyScore))]), _c('span', {\n      staticClass: \"item-balance\"\n    }, [_vm._v(_vm._s(item.totalJoyScore))])])\n  })], 2)], 1)\n}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('li', [_c('span', {\n    staticClass: \"details-type\"\n  }, [_vm._v(\"类型\")]), _c('span', [_vm._v(\"金额\")]), _c('span', [_vm._v(\"余额\")])])\n}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@13.0.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-43b3fa9d\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/_vue-loader@13.0.4@vue-loader/lib/selector.js?type=template&index=0!./src/page/myEarnings/myEarnings.vue\n// module id = Pqkg\n// module chunks = 0","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                color: '#fff',\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = RMQR\n// module chunks = 0","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/model/Global.js\n// module id = RNqR\n// module chunks = 0","'use strict';\n\n\n    var echarts = require('../echarts');\n    var graphic = require('../util/graphic');\n    var layout = require('../util/layout');\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: graphic.setTextStyle({}, textStyleModel, {\n                    text: titleModel.get('text'),\n                    textFill: textStyleModel.getTextColor()\n                }, {disableBox: true}),\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: graphic.setTextStyle({}, subtextStyleModel, {\n                    text: subText,\n                    textFill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textVerticalAlign: 'top'\n                }, {disableBox: true}),\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2],\n                    r: titleModel.get('borderRadius')\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/title.js\n// module id = RPAd\n// module chunks = 0","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/Element.js\n// module id = RSUm\n// module chunks = 0","\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/animation/requestAnimationFrame.js\n// module id = Rwy1\n// module chunks = 0","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRootOffset;\n            if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n                x += viewportRootOffset.offsetLeft;\n                y += viewportRootOffset.offsetTop;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/tooltip/TooltipContent.js\n// module id = Sdkl\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/RadialGradient.js\n// module id = SrZs\n// module chunks = 0","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.5.1@core-js/library/modules/_property-desc.js\n// module id = TUEb\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/mixin/Draggable.js\n// module id = Td34\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/util/clazz.js\n// module id = TwzL\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/_css-loader@0.28.7@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-33d60ee4\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/selector.js?type=styles&index=0!./header.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/_vue-style-loader@3.0.1@vue-style-loader/lib/addStylesClient.js\")(\"1ba6a522\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_extract-text-webpack-plugin@2.1.2@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/_vue-style-loader@3.0.1@vue-style-loader!./~/_css-loader@0.28.7@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/_vue-loader@13.0.4@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-33d60ee4\",\"scoped\":false,\"hasInlineConfig\":false}!./~/_vue-loader@13.0.4@vue-loader/lib/selector.js?type=styles&index=0!./src/components/header/header.vue\n// module id = UEU6\n// module chunks = 0 4 5 6 9 10 11 12 13 14 15 16 17 23 24 25 26 27 28 29","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/model/mixin/itemStyle.js\n// module id = USOM\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/axisPointer/modelHelper.js\n// module id = UYnM\n// module chunks = 0","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/config.js\n// module id = Ug08\n// module chunks = 0","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/animation/easing.js\n// module id = VUgN\n// module chunks = 0","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/visual/seriesColor.js\n// module id = VZiK\n// module chunks = 0","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                // FIXME compare before adding gap?\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    // FIXME: consider rect.y is not `0`?\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect {width, height}\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        if (aspect != null) {\n            // If width and height are not given\n            // 1. Graph should not exceeds the container\n            // 2. Aspect must be keeped\n            // 3. Graph should take the space as more as possible\n            // FIXME\n            // Margin is not considered, because there is no case that both\n            // using margin and aspect so far.\n            if (isNaN(width) && isNaN(height)) {\n                if (aspect > containerWidth / containerHeight) {\n                    width = containerWidth * 0.8;\n                }\n                else {\n                    height = containerHeight * 0.8;\n                }\n            }\n\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - horizontalMargin - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - verticalMargin - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n     * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        // The real width and height can not be specified but calculated by the given el.\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n     *  that width (or height) should not be calculated by left and right (or top and bottom).\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/util/layout.js\n// module id = Vhze\n// module chunks = 0","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var Path = require('../Path');\n    var fixClipWithShadow = require('../helper/fixClipWithShadow');\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: fixClipWithShadow(Path.prototype.brush),\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/shape/Sector.js\n// module id = VknR\n// module chunks = 0","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/core/timsort.js\n// module id = Vsag\n// module chunks = 0","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path The path to fetch value from object, like 'a.b.c'.\n         * @param {boolean} [loop] Whether to loop animation.\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * Caution: this method will stop previous animation.\n         * So do not use this method to one element twice before\n         * animation starts, unless you know what you are doing.\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         * @param {Function} [forceAnimate] Prevent stop animation and callback\n         *        immediently when target values are the same as current values.\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing, forceAnimate);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/mixin/Animatable.js\n// module id = VzoJ\n// module chunks = 0","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/animation/Animation.js\n// module id = WEGk\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum, minInterval, maxInterval) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n\n            if (minInterval != null && approxInterval < minInterval) {\n                approxInterval = minInterval;\n            }\n            if (maxInterval != null && approxInterval > maxInterval) {\n                approxInterval = maxInterval;\n            }\n\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/scale/Time.js\n// module id = WHYm\n// module chunks = 0","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/contain/path.js\n// module id = WIVL\n// module chunks = 0","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/coord/cartesian/Cartesian.js\n// module id = WnAC\n// module chunks = 0","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget, x, y}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var lastHoveredTarget = lastHovered.target;\n\n            // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n            // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n            // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n            // See #6198.\n            if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n                lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n                lastHoveredTarget = lastHovered.target;\n            }\n\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var el = targetInfo.target;\n            if (el && el.silent) {\n                return;\n            }\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {x: x, y: y};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/Handler.js\n// module id = WtYn\n// module chunks = 0","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.5.1@core-js/library/modules/_is-object.js\n// module id = X609\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module zrender/graphic/Style\n */\n\n\n    var textHelper = require('./helper/text');\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts, host) {\n        this.extendFrom(opts, false);\n        this.host = host;\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {module:zrender/graphic/Displayable}\n         */\n        host: null,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * If `fontSize` or `fontFamily` exists, `font` will be reset by\n         * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n         * So do not visit it directly in upper application (like echarts),\n         * but use `contain/text#makeFont` instead.\n         * @type {string}\n         */\n        font: null,\n\n        /**\n         * The same as font. Use font please.\n         * @deprecated\n         * @type {string}\n         */\n        textFont: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontStyle: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontWeight: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * Should be 12 but not '12px'.\n         * @type {number}\n         */\n        fontSize: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontFamily: null,\n\n        /**\n         * Reserved for special functinality, like 'hr'.\n         * @type {string}\n         */\n        textTag: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * @type {number}\n         */\n        textWidth: null,\n\n        /**\n         * Only for textBackground.\n         * @type {number}\n         */\n        textHeight: null,\n\n        /**\n         * textStroke may be set as some color as a default\n         * value in upper applicaion, where the default value\n         * of textLineWidth should be 0 to make sure that\n         * user can choose to do not use text stroke.\n         * @type {number}\n         */\n        textLineWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textLineHeight: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * Based on x, y of rect.\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * @type {string}\n         */\n        textShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * @type {string}\n         */\n        textBoxShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetY: 0,\n\n        /**\n         * Whether transform text.\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        transformText: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and transformText is false.\n         */\n        textRotation: 0,\n\n        /**\n         * Text origin of text rotation, like [10, 40].\n         * Based on x, y of rect.\n         * Useful in label rotation of circular symbol.\n         * By default, this origin is textPosition.\n         * Can be 'center'.\n         * @type {string|Array.<number>}\n         */\n        textOrigin: null,\n\n        /**\n         * @type {string}\n         */\n        textBackgroundColor: null,\n\n        /**\n         * @type {string}\n         */\n        textBorderColor: null,\n\n        /**\n         * @type {number}\n         */\n        textBorderWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textBorderRadius: 0,\n\n        /**\n         * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n         * @type {number|Array.<number>}\n         */\n        textPadding: null,\n\n        /**\n         * Text styles for rich text.\n         * @type {Object}\n         */\n        rich: null,\n\n        /**\n         * {outerWidth, outerHeight, ellipsis, placeholder}\n         * @type {Object}\n         */\n        truncate: null,\n\n        /**\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         * @type {string}\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite true: overwrirte any way.\n         *                            false: overwrite only when !target.hasOwnProperty\n         *                            others: overwrite when property is not null/undefined.\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite === true\n                            || (\n                                overwrite === false\n                                    ? !this.hasOwnProperty(name)\n                                    : otherStyle[name] != null\n                            )\n                        )\n                    ) {\n                        this[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/Style.js\n// module id = X76A\n// module chunks = 0","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n    var fixClipWithShadow = require('zrender/lib/graphic/helper/fixClipWithShadow');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/chart/line/poly.js\n// module id = XehA\n// module chunks = 0","\n\n    var LRU = require('../../core/LRU');\n    var globalImageCache = new LRU(50);\n\n    var helper = {};\n\n    /**\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.findExistImage = function (newImageOrSrc) {\n        if (typeof newImageOrSrc === 'string') {\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n            return cachedImgObj && cachedImgObj.image;\n        }\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    /**\n     * Caution: User should cache loaded images, but not just count on LRU.\n     * Consider if required images more than LRU size, will dead loop occur?\n     *\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n     * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n     * @param {Function} [cb] params: (image, cbPayload)\n     * @param {Object} [cbPayload] Payload on cb calling.\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.createOrUpdateImage = function (newImageOrSrc, image, hostEl, cb, cbPayload) {\n        if (!newImageOrSrc) {\n            return image;\n        }\n        else if (typeof newImageOrSrc === 'string') {\n\n            // Image should not be loaded repeatly.\n            if ((image && image.__zrImageSrc === newImageOrSrc) || !hostEl) {\n                return image;\n            }\n\n            // Only when there is no existent image or existent image src\n            // is different, this method is responsible for load.\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\n            var pendingWrap = {hostEl: hostEl, cb: cb, cbPayload: cbPayload};\n\n            if (cachedImgObj) {\n                image = cachedImgObj.image;\n                !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n            }\n            else {\n                !image && (image = new Image());\n                image.onload = imageOnLoad;\n\n                globalImageCache.put(\n                    newImageOrSrc,\n                    image.__cachedImgObj = {\n                        image: image,\n                        pending: [pendingWrap]\n                    }\n                );\n\n                image.src = image.__zrImageSrc = newImageOrSrc;\n            }\n\n            return image;\n        }\n        // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    function imageOnLoad() {\n        var cachedImgObj = this.__cachedImgObj;\n        this.onload = this.__cachedImgObj = null;\n\n        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n            var pendingWrap = cachedImgObj.pending[i];\n            var cb = pendingWrap.cb;\n            cb && cb(this, pendingWrap.cbPayload);\n            pendingWrap.hostEl.dirty();\n        }\n        cachedImgObj.pending.length = 0;\n    }\n\n    var isImageReady = helper.isImageReady = function (image) {\n        return image && image.width && image.height;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/helper/image.js\n// module id = XlEP\n// module chunks = 0","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_qs@6.5.0@qs/lib/formats.js\n// module id = XrbV\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.5.1@core-js/library/modules/_fails.js\n// module id = YEmw\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var modelUtil = require('../../util/model');\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/chart/helper/labelHelper.js\n// module id = ZKTi\n// module chunks = 0","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/coord/cartesian/AxisModel.js\n// module id = ZYsc\n// module chunks = 0","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/core/BoundingRect.js\n// module id = ZgA1\n// module chunks = 0","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/shape/Circle.js\n// module id = ZkAt\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n    var Transformable = require('zrender/lib/mixin/Transformable');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var EMPTY_OBJ = {};\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    var subPixelOptimize = graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                // See comment in `doSingleEnterHover`.\n                if (hoverStyle[name] != null) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            var style = el.style;\n            var insideRollbackOpt = style.insideRollbackOpt;\n\n            // Consider case: only `position: 'top'` is set on emphasis, then text\n            // color should be returned to `autoColor`, rather than remain '#fff'.\n            // So we should rollback then apply again after style merging.\n            insideRollbackOpt && rollbackInsideStyle(style);\n\n            // styles can be:\n            // {\n            //     label: {\n            //         normal: {\n            //             show: false,\n            //             position: 'outside',\n            //             fontSize: 18\n            //         },\n            //         emphasis: {\n            //             show: true\n            //         }\n            //     }\n            // },\n            // where properties of `emphasis` may not appear in `normal`. We previously use\n            // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n            // But consider rich text and setOption in merge mode, it is impossible to cover\n            // all properties in merge. So we use merge mode when setting style here, where\n            // only properties that is not `null/undefined` can be set. The disadventage:\n            // null/undefined can not be used to remove style any more in `emphasis`.\n            style.extendFrom(el.__hoverStl);\n\n            // Do not save `insideRollback`.\n            if (insideRollbackOpt) {\n                applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt);\n\n                // textFill may be rollbacked to null.\n                if (style.textFill == null) {\n                    style.textFill = insideRollbackOpt.autoColor;\n                }\n            }\n\n            el.dirty(false);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            // Consider null/undefined value, should use\n            // `setStyle` but not `extendFrom(stl, true)`.\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * @param {Object|module:zrender/graphic/Style} normalStyle\n     * @param {Object} emphasisStyle\n     * @param {module:echarts/model/Model} normalModel\n     * @param {module:echarts/model/Model} emphasisModel\n     * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n     * @param {Object} [opt.defaultText]\n     * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n     *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {Object} [normalSpecified]\n     * @param {Object} [emphasisSpecified]\n     */\n    graphic.setLabelStyle = function (\n        normalStyle, emphasisStyle,\n        normalModel, emphasisModel,\n        opt,\n        normalSpecified, emphasisSpecified\n    ) {\n        opt = opt || EMPTY_OBJ;\n        var labelFetcher = opt.labelFetcher;\n        var labelDataIndex = opt.labelDataIndex;\n        var labelDimIndex = opt.labelDimIndex;\n\n        // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n        // is not supported util someone requests.\n\n        var showNormal = normalModel.getShallow('show');\n        var showEmphasis = emphasisModel.getShallow('show');\n\n        // Consider performance, only fetch label when necessary.\n        // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n        // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n        var baseText = (showNormal || showEmphasis)\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex)\n                    : null,\n                opt.defaultText\n            )\n            : null;\n        var normalStyleText = showNormal ? baseText : null;\n        var emphasisStyleText = showEmphasis\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex)\n                    : null,\n                baseText\n            )\n            : null;\n\n        // Optimize: If style.text is null, text will not be drawn.\n        if (normalStyleText != null || emphasisStyleText != null) {\n            // Always set `textStyle` even if `normalStyle.text` is null, because default\n            // values have to be set on `normalStyle`.\n            // If we set default values on `emphasisStyle`, consider case:\n            // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n            // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n            // Then the 'red' will not work on emphasis.\n            setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n            setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n        }\n\n        normalStyle.text = normalStyleText;\n        emphasisStyle.text = emphasisStyleText;\n    };\n\n    /**\n     * Set basic textStyle properties.\n     * @param {Object|module:zrender/graphic/Style} textStyle\n     * @param {module:echarts/model/Model} model\n     * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n     * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n     * @param {boolean} [isEmphasis]\n     */\n    var setTextStyle = graphic.setTextStyle = function (\n        textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis\n    ) {\n        setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n        specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n        return textStyle;\n    };\n\n    /**\n     * Set text option in the style.\n     * @deprecated\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string|boolean} defaultColor Default text color.\n     *        If set as false, it will be processed as a emphasis style.\n     */\n    graphic.setText = function (textStyle, labelModel, defaultColor) {\n        var opt = {isRectText: true};\n        var isEmphasis;\n\n        if (defaultColor === false) {\n            isEmphasis = true;\n        }\n        else {\n            // Support setting color as 'auto' to get visual color.\n            opt.autoColor = defaultColor;\n        }\n        setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n    };\n\n    /**\n     * {\n     *      disableBox: boolean, Whether diable drawing box of block (outer most).\n     *      isRectText: boolean,\n     *      autoColor: string, specify a color when color is 'auto',\n     *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n     *              If autoColor specified, it is used as default textFill.\n     *      useInsideStyle:\n     *              `true`: Use inside style (textFill, textStroke, textLineWidth)\n     *                  if `textFill` is not specified.\n     *              `false`: Do not use inside style.\n     *              `null/undefined`: use inside style if `isRectText` is true and\n     *                  `textFill` is not specified and textPosition contains `'inside'`.\n     *      forceRich: boolean\n     * }\n     */\n    function setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n        // Consider there will be abnormal when merge hover style to normal style if given default value.\n        opt = opt || EMPTY_OBJ;\n\n        if (opt.isRectText) {\n            var textPosition = textStyleModel.getShallow('position')\n                || (isEmphasis ? null : 'inside');\n            // 'outside' is not a valid zr textPostion value, but used\n            // in bar series, and magric type should be considered.\n            textPosition === 'outside' && (textPosition = 'top');\n            textStyle.textPosition = textPosition;\n            textStyle.textOffset = textStyleModel.getShallow('offset');\n            var labelRotate = textStyleModel.getShallow('rotate');\n            labelRotate != null && (labelRotate *= Math.PI / 180);\n            textStyle.textRotation = labelRotate;\n            textStyle.textDistance = zrUtil.retrieve2(\n                textStyleModel.getShallow('distance'), isEmphasis ? null : 5\n            );\n        }\n\n        var ecModel = textStyleModel.ecModel;\n        var globalTextStyle = ecModel && ecModel.option.textStyle;\n\n        // Consider case:\n        // {\n        //     data: [{\n        //         value: 12,\n        //         label: {\n        //             normal: {\n        //                 rich: {\n        //                     // no 'a' here but using parent 'a'.\n        //                 }\n        //             }\n        //         }\n        //     }],\n        //     rich: {\n        //         a: { ... }\n        //     }\n        // }\n        var richItemNames = getRichItemNames(textStyleModel);\n        var richResult;\n        if (richItemNames) {\n            richResult = {};\n            for (var name in richItemNames) {\n                if (richItemNames.hasOwnProperty(name)) {\n                    // Cascade is supported in rich.\n                    var richTextStyle = textStyleModel.getModel(['rich', name]);\n                    // In rich, never `disableBox`.\n                    setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n                }\n            }\n        }\n        textStyle.rich = richResult;\n\n        setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n        if (opt.forceRich && !opt.textStyle) {\n            opt.textStyle = {};\n        }\n\n        return textStyle;\n    }\n\n    // Consider case:\n    // {\n    //     data: [{\n    //         value: 12,\n    //         label: {\n    //             normal: {\n    //                 rich: {\n    //                     // no 'a' here but using parent 'a'.\n    //                 }\n    //             }\n    //         }\n    //     }],\n    //     rich: {\n    //         a: { ... }\n    //     }\n    // }\n    function getRichItemNames(textStyleModel) {\n        // Use object to remove duplicated names.\n        var richItemNameMap;\n        while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n            var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n            if (rich) {\n                richItemNameMap = richItemNameMap || {};\n                for (var name in rich) {\n                    if (rich.hasOwnProperty(name)) {\n                        richItemNameMap[name] = 1;\n                    }\n                }\n            }\n            textStyleModel = textStyleModel.parentModel;\n        }\n        return richItemNameMap;\n    }\n\n    function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n        // In merge mode, default value should not be given.\n        globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n\n        textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt)\n            || globalTextStyle.color;\n        textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt)\n            || globalTextStyle.textBorderColor;\n        textStyle.textLineWidth = zrUtil.retrieve2(\n            textStyleModel.getShallow('textBorderWidth'),\n            globalTextStyle.textBorderWidth\n        );\n\n        if (!isEmphasis) {\n            if (isBlock) {\n                // Always set `insideRollback`, for clearing previous.\n                var originalTextPosition = textStyle.textPosition;\n                textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt);\n                // Save original textPosition, because style.textPosition will be repalced by\n                // real location (like [10, 30]) in zrender.\n                textStyle.insideOriginalTextPosition = originalTextPosition;\n                textStyle.insideRollbackOpt = opt;\n            }\n\n            // Set default finally.\n            if (textStyle.textFill == null) {\n                textStyle.textFill = opt.autoColor;\n            }\n        }\n\n        // Do not use `getFont` here, because merge should be supported, where\n        // part of these properties may be changed in emphasis style, and the\n        // others should remain their original value got from normal style.\n        textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n        textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n        textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n        textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n\n        textStyle.textAlign = textStyleModel.getShallow('align');\n        textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign')\n            || textStyleModel.getShallow('baseline');\n\n        textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n        textStyle.textWidth = textStyleModel.getShallow('width');\n        textStyle.textHeight = textStyleModel.getShallow('height');\n        textStyle.textTag = textStyleModel.getShallow('tag');\n\n        if (!isBlock || !opt.disableBox) {\n            textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n            textStyle.textPadding = textStyleModel.getShallow('padding');\n            textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n            textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n            textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n\n            textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n            textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n            textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n            textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n        }\n\n        textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor')\n            || globalTextStyle.textShadowColor;\n        textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur')\n            || globalTextStyle.textShadowBlur;\n        textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX')\n            || globalTextStyle.textShadowOffsetX;\n        textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY')\n            || globalTextStyle.textShadowOffsetY;\n    }\n\n    function getAutoColor(color, opt) {\n        return color !== 'auto' ? color : (opt && opt.autoColor) ? opt.autoColor : null;\n    }\n\n    function applyInsideStyle(textStyle, textPosition, opt) {\n        var useInsideStyle = opt.useInsideStyle;\n        var insideRollback;\n\n        if (textStyle.textFill == null\n            && useInsideStyle !== false\n            && (useInsideStyle === true\n                || (opt.isRectText\n                    && textPosition\n                    // textPosition can be [10, 30]\n                    && typeof textPosition === 'string'\n                    && textPosition.indexOf('inside') >= 0\n                )\n            )\n        ) {\n            insideRollback = {\n                textFill: null,\n                textStroke: textStyle.textStroke,\n                textLineWidth: textStyle.textLineWidth\n            };\n            textStyle.textFill = '#fff';\n            // Consider text with #fff overflow its container.\n            if (textStyle.textStroke == null) {\n                textStyle.textStroke = opt.autoColor;\n                textStyle.textLineWidth == null && (textStyle.textLineWidth = 2);\n            }\n        }\n\n        return insideRollback;\n    }\n\n    function rollbackInsideStyle(style) {\n        var insideRollback = style.insideRollback;\n        if (insideRollback) {\n            style.textFill = insideRollback.textFill;\n            style.textStroke = insideRollback.textStroke;\n            style.textLineWidth = insideRollback.textLineWidth;\n        }\n    }\n\n    graphic.getFont = function (opt, ecModel) {\n        // ecModel or default text style model.\n        var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    /**\n     * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n     * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n     * @param {Object} [rect] {x, y, width, height}\n     * @return {module:zrender/Element} Icon path or image element.\n     */\n    graphic.createIcon = function (iconStr, opt, rect) {\n        opt = zrUtil.extend({rectHover: true}, opt);\n        var style = opt.style = {strokeNoScale: true};\n        rect = rect || {x: -1, y: -1, width: 2, height: 2};\n\n        if (iconStr) {\n            return iconStr.indexOf('image://') === 0\n                ? (\n                    style.image = iconStr.slice(8),\n                    zrUtil.defaults(style, rect),\n                    new graphic.Image(opt)\n                )\n                : (\n                    graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        opt,\n                        rect,\n                        'center'\n                    )\n                );\n        }\n\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/util/graphic.js\n// module id = Zr1P\n// module chunks = 0","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/Storage.js\n// module id = ZwVc\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_babel-runtime@6.26.0@babel-runtime/helpers/defineProperty.js\n// module id = a3Yh\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (!itemStyleOpt) {\n            return;\n        }\n        for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n            var styleName = POSSIBLE_STYLES[i];\n            var normalItemStyleOpt = itemStyleOpt.normal;\n            var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n            if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].normal) {\n                    opt[styleName].normal = normalItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                }\n                normalItemStyleOpt[styleName] = null;\n            }\n            if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].emphasis) {\n                    opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                }\n                emphasisItemStyleOpt[styleName] = null;\n            }\n        }\n    }\n\n    function compatTextStyle(opt, propName) {\n        var labelOptSingle = isObject(opt) && opt[propName];\n        var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n        if (textStyle) {\n            for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n                var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n                if (textStyle.hasOwnProperty(propName)) {\n                    labelOptSingle[propName] = textStyle[propName];\n                }\n            }\n        }\n    }\n\n    function compatLabelTextStyle(labelOpt) {\n        if (isObject(labelOpt)) {\n            compatTextStyle(labelOpt, 'normal');\n            compatTextStyle(labelOpt, 'emphasis');\n        }\n    }\n\n    function processSeries(seriesOpt) {\n        if (!isObject(seriesOpt)) {\n            return;\n        }\n\n        compatItemStyle(seriesOpt);\n        compatLabelTextStyle(seriesOpt.label);\n        // treemap\n        compatLabelTextStyle(seriesOpt.upperLabel);\n        // graph\n        compatLabelTextStyle(seriesOpt.edgeLabel);\n\n        var markPoint = seriesOpt.markPoint;\n        compatItemStyle(markPoint);\n        compatLabelTextStyle(markPoint && markPoint.label);\n\n        var markLine = seriesOpt.markLine;\n        compatItemStyle(seriesOpt.markLine);\n        compatLabelTextStyle(markLine && markLine.label);\n\n        var markArea = seriesOpt.markArea;\n        compatLabelTextStyle(markArea && markArea.label);\n\n        // For gauge\n        compatTextStyle(seriesOpt, 'axisLabel');\n        compatTextStyle(seriesOpt, 'title');\n        compatTextStyle(seriesOpt, 'detail');\n\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n                compatLabelTextStyle(data[i] && data[i].label);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                    compatLabelTextStyle(mpData[i] && mpData[i].label);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n                        compatItemStyle(mlData[i][1]);\n                        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                        compatLabelTextStyle(mlData[i] && mlData[i].label);\n                    }\n                }\n            }\n        }\n    }\n\n    function toArr(o) {\n        return zrUtil.isArray(o) ? o : o ? [o] : [];\n    }\n\n    function toObj(o) {\n        return (zrUtil.isArray(o) ? o[0] : o) || {};\n    }\n\n    module.exports = function (option, isTheme) {\n        each(toArr(option.series), function (seriesOpt) {\n            isObject(seriesOpt) && processSeries(seriesOpt);\n        });\n\n        var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n        isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n\n        each(\n            axes,\n            function (axisName) {\n                each(toArr(option[axisName]), function (axisOpt) {\n                    if (axisOpt) {\n                        compatTextStyle(axisOpt, 'axisLabel');\n                        compatTextStyle(axisOpt.axisPointer, 'label');\n                    }\n                });\n            }\n        );\n\n        each(toArr(option.parallel), function (parallelOpt) {\n            var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n            compatTextStyle(parallelAxisDefault, 'axisLabel');\n            compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n        });\n\n        each(toArr(option.calendar), function (calendarOpt) {\n            compatTextStyle(calendarOpt, 'dayLabel');\n            compatTextStyle(calendarOpt, 'monthLabel');\n            compatTextStyle(calendarOpt, 'yearLabel');\n        });\n\n        // radar.name.textStyle\n        each(toArr(option.radar), function (radarOpt) {\n            compatTextStyle(radarOpt, 'name');\n        });\n\n        each(toArr(option.geo), function (geoOpt) {\n            if (isObject(geoOpt)) {\n                compatLabelTextStyle(geoOpt.label);\n                each(toArr(geoOpt.regions), function (regionObj) {\n                    compatLabelTextStyle(regionObj.label);\n                });\n            }\n        });\n\n        compatLabelTextStyle(toObj(option.timeline).label);\n        compatTextStyle(toObj(option.axisPointer), 'label');\n        compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/preprocessor/helper/compatStyle.js\n// module id = aJs6\n// module chunks = 0","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            // `isFinit('')` get `true`.\n            if (value != null && isFinite(value) && value !== '') {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/data/helper/completeDimensions.js\n// module id = aXfO\n// module chunks = 0","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/tooltip.js\n// module id = bX97\n// module chunks = 0","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/CartesianAxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/axis.js\n// module id = bZMc\n// module chunks = 0","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/coord/cartesian/GridModel.js\n// module id = c3Mm\n// module chunks = 0","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/shape/BezierCurve.js\n// module id = c5lC\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/_css-loader@0.28.7@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"header.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_css-loader@0.28.7@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/_vue-loader@13.0.4@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-33d60ee4\",\"scoped\":false,\"hasInlineConfig\":false}!./~/_vue-loader@13.0.4@vue-loader/lib/selector.js?type=styles&index=0!./src/components/header/header.vue\n// module id = cS9B\n// module chunks = 0 4 5 6 9 10 11 12 13 14 15 16 17 23 24 25 26 27 28 29","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option, isTheme) {\n        compatStyle(option, isTheme);\n\n        var series = option.series;\n        each(zrUtil.isArray(series) ? series : [series], function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/preprocessor/backwardCompat.js\n// module id = ceJK\n// module chunks = 0","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n    var backwardCompat = require('./preprocessor/backwardCompat');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        var theme = zrUtil.clone(theme);\n        theme && backwardCompat(theme, true);\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = theme;\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // Avoid dispatch action before setOption. Especially in `connect`.\n        if (!this._model) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.7.1',\n        dependencies: {\n            zrender: '3.6.1'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(backwardCompat);\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/echarts.js\n// module id = cqWi\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/view/Chart.js\n// module id = dHti\n// module chunks = 0","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/contain/cubic.js\n// module id = dIPJ\n// module chunks = 0","<template>\r\n  <section class=\"my-tab\">\r\n    <div v-for=\"(item,key) in list\" :class=\"{mySelected:item.id == active}\" @click=\"swapTab(item.id)\"><label>{{item.categoryName}}</label></div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    props: ['action', 'activeId'],\r\n    data () {\r\n      return {\r\n      }\r\n    },\r\n    methods: {\r\n      swapTab: function (val) {\r\n        this.$emit('changeTab', val)\r\n      }\r\n    },\r\n    created: function () {\r\n      this.activeTab = this.active\r\n    },\r\n    computed: {\r\n      list: function () {\r\n        return this.action\r\n      },\r\n      active: function () {\r\n         return this.activeId\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/tab/tab.vue?3abb92f0","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_qs@6.5.0@qs/lib/index.js\n// module id = dc9A\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = eCMv\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = eSGo\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/util/component.js\n// module id = eY2H\n// module chunks = 0","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/tool/path.js\n// module id = epp4\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.5.1@core-js/library/modules/_ie8-dom-define.js\n// module id = esV0\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.5.1@core-js/library/modules/_export.js\n// module id = f68a\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/axis/AxisView.js\n// module id = fCln\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.5.1@core-js/library/modules/_an-object.js\n// module id = fHSC\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/core/event.js\n// module id = fIwg\n// module chunks = 0","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/tool/color.js\n// module id = fftb\n// module chunks = 0","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/model/Component.js\n// module id = gBVq\n// module chunks = 0","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {        \n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/mixin/Transformable.js\n// module id = gXiF\n// module chunks = 0","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/model/mixin/colorPalette.js\n// module id = gshH\n// module chunks = 0","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nexports.arrayToObject = function (source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nexports.merge = function (target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = exports.arrayToObject(target, options);\n    }\n\n    if (Array.isArray(target) && Array.isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                if (target[i] && typeof target[i] === 'object') {\n                    target[i] = exports.merge(target[i], item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = exports.merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nexports.assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nexports.decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nexports.encode = function (str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D    // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nexports.compact = function (obj, references) {\n    if (typeof obj !== 'object' || obj === null) {\n        return obj;\n    }\n\n    var refs = references || [];\n    var lookup = refs.indexOf(obj);\n    if (lookup !== -1) {\n        return refs[lookup];\n    }\n\n    refs.push(obj);\n\n    if (Array.isArray(obj)) {\n        var compacted = [];\n\n        for (var i = 0; i < obj.length; ++i) {\n            if (obj[i] && typeof obj[i] === 'object') {\n                compacted.push(exports.compact(obj[i], refs));\n            } else if (typeof obj[i] !== 'undefined') {\n                compacted.push(obj[i]);\n            }\n        }\n\n        return compacted;\n    }\n\n    var keys = Object.keys(obj);\n    keys.forEach(function (key) {\n        obj[key] = exports.compact(obj[key], refs);\n    });\n\n    return obj;\n};\n\nexports.isRegExp = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nexports.isBuffer = function (obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_qs@6.5.0@qs/lib/utils.js\n// module id = h/UA\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(\n                obj[key],\n                generateArrayPrefix(prefix, key),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        } else {\n            values = values.concat(stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;\n    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;\n    if (typeof options.format === 'undefined') {\n        options.format = formats.default;\n    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {\n        throw new TypeError('Unknown format option provided.');\n    }\n    var formatter = formats.formatters[options.format];\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encode ? encoder : null,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly\n        ));\n    }\n\n    var joined = keys.join(delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_qs@6.5.0@qs/lib/stringify.js\n// module id = hKqg\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@2.1.2@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-33d60ee4\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/selector?type=styles&index=0!./header.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/selector?type=script&index=0!./header.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-33d60ee4\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/selector?type=template&index=0!./header.vue\"\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/header/header.vue\n// module id = hxP8\n// module chunks = 0 4 5 6 9 10 11 12 13 14 15 16 17 23 24 25 26 27 28 29","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('mt-header', {\n    attrs: {\n      \"fixed\": _vm.isfixed,\n      \"title\": _vm.pageTitle\n    }\n  }, [_c('mt-button', {\n    attrs: {\n      \"icon\": \"back\"\n    },\n    on: {\n      \"click\": _vm.ceshi\n    },\n    slot: \"left\"\n  }), _vm._v(\" \"), _c('mt-button', {\n    on: {\n      \"click\": _vm.rightTextClick\n    },\n    slot: \"right\"\n  }, [_vm._v(_vm._s(_vm.rightLabel))])], 1)\n}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@13.0.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-33d60ee4\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/_vue-loader@13.0.4@vue-loader/lib/selector.js?type=template&index=0!./src/components/header/header.vue\n// module id = i+yD\n// module chunks = 0 4 5 6 9 10 11 12 13 14 15 16 17 23 24 25 26 27 28 29","import axios from 'axios'\r\nimport qs from 'qs'\r\nlet baseUrl = '/static/data/'\r\nlet serverUrl = '/api'\r\nexport const getProtocol = axios(baseUrl + 'protocol.json')\r\nexport const getrefundDetails = axios(baseUrl + 'refundDetails.json')\r\n\r\n// 首页 行业分类\r\nexport const getFenLei = () => axios(serverUrl + '/storeCategory/list')\r\n// 首页 轮播广告\r\nexport const getSwiper = () => axios(serverUrl + '/media/list/big')\r\n// 首页 banner广告\r\nexport const getGuanggao = () => axios(serverUrl + '/media/list/small')\r\n//通知列表\r\nexport const getNoticeList = () => axios(serverUrl + '/media/notice/list')\r\n\r\n//通知详情\r\nexport const getNoticeContent = (id) =>axios(serverUrl + '/media/notice/getById/' + id)\r\n\r\n\r\n// 用户登录\r\nexport const postLogin = (username,password) => axios.post(serverUrl + '/member/login/', qs.stringify({\r\n  username: username,\r\n  password: password\r\n}))\r\n\r\n// 获取验证码\r\nexport const getCode = mobile => axios(serverUrl + '/member/getCode/' + mobile)\r\n\r\n// 用户注册\r\nexport const postRegister = (mobile, inviteCode,password,vcode) => axios.post(serverUrl + '/member/register/', qs.stringify({\r\n  mobile: mobile,\r\n  inviteCode: inviteCode,\r\n  password: password,\r\n  vcode: vcode\r\n}))\r\n\r\n// 重置/找回密码\r\nexport const postReset = (mobile,password,vcode) => axios.post(serverUrl + '/member/reset/', qs.stringify({\r\n  mobile: mobile,\r\n  password: password,\r\n  vcode: vcode\r\n}))\r\n\r\n//修改个人信息\r\nexport const postMemberUpdate = (nickName) => axios.post(serverUrl + '/member/update/', qs.stringify({\r\n  nickName: nickName\r\n}))\r\n\r\n// 验证码登录\r\nexport const postVCodeLogin = (mobile,vcode) => axios.post(serverUrl + '/member/verifyCode/login/', qs.stringify({\r\n  mobile: mobile,\r\n  vcode: vcode\r\n}))\r\n\r\n\r\n// 退出登录\r\nexport const getLogout = () => axios(serverUrl + '/member/logout')\r\n// 我的 （个人信息）\r\nexport const getMe = () => axios(serverUrl + '/member/me')\r\n\r\n// 我的推荐\r\nexport const getMyRecommend = () => axios(serverUrl + '/member/myRecommend')\r\n\r\n/* 城市列表  */\r\nexport const getAllCity = (name) => {\r\n  if (name == undefined) {\r\n    return axios(serverUrl + '/area/getCitySortByChar')\r\n  } else {\r\n    return axios(serverUrl + '/area/getCitySortByChar/?name=' + name)\r\n  }\r\n}\r\n/* 购物车列表(需登录)*/\r\nexport const getCartList = () => axios(serverUrl + '/cart/getCartList')\r\n/* 获取首页分类下的所有商品  */\r\nexport const getByStoreCategory = (pageNum,pageSize,storeCategoryId,latitude,longitude) => axios.post(serverUrl + '/store/getByStoreCategoryId?categoryId=' ,qs.stringify({\r\n  storeCategoryId:storeCategoryId,\r\n  cityCode:440300,\r\n  latitude:latitude,\r\n  longitude:longitude,\r\n  pageNum:pageNum,\r\n  pageSize:pageSize\r\n}))\r\n/* 附件商家列表 */\r\nexport const getNearStore = (pageNum,pageSize,latitude,longitude) => axios.post(serverUrl + '/store/nearStore/', qs.stringify({\r\n  latitude: latitude,\r\n  longitude: longitude,\r\n  pageNum: pageNum,\r\n  pageSize: pageSize\r\n}))\r\n/* 商家首页  */\r\nexport const getStore = (storeId, latitude, longitude) => axios.post(serverUrl + '/store/getStore', qs.stringify({\r\n  storeId: storeId,\r\n  latitude: latitude,\r\n  longitude: longitude\r\n}))\r\n/* 商家首页下的分类商品   */\r\nexport const getProductCategory = categoryId => axios(serverUrl + '/product/getByProductCategoryId?categoryId=' + categoryId)\r\n/* 加入购物车  */\r\nexport const addCart = (skuId,amount) => axios.post(serverUrl + '/cart/add' , qs.stringify({\r\n  skuId: skuId,\r\n  amount:amount||1,\r\n  \r\n}))\r\n/* 商家首页商品详情   */\r\nexport const getProductBySkuId = (skuId, latitude, longitude) => axios.post(serverUrl + '/product/getBySkuId', qs.stringify({\r\n  skuId: skuId,\r\n  latitude: latitude,\r\n  longitude: longitude\r\n}))\r\n/* 获取商品的属性  */\r\nexport const getAttrBySpuId = SpuId => axios(serverUrl + '/product/getAttrBySpuId/' + SpuId)\r\n/* 根据选中的属性来匹配商品 */\r\nexport const getAttrOption = SpuId => axios(serverUrl + '/product/getAttrOptionBySpuId/' + SpuId)\r\n/* 删除购物车的商品  */\r\nexport const deletCart = (skuIds) => axios.post(serverUrl + '/cart/delete' ,qs.stringify({\r\n  skuId: skuIds\r\n}))\r\n/*  修改单个商品的数量  */\r\nexport const updateAmount = (skuId,amount) => axios.post(serverUrl + '/cart/updateAmount',qs.stringify({\r\n  skuId: skuId,amount,\r\n  amount: amount\r\n}))\r\n\r\n/* 我的收益 chart */\r\nexport const getProfitChart = days => axios.post(serverUrl + '/member/profit/pictureData?days=' + days)\r\n\r\n/* 我的收益详情 */\r\nexport const getProfitList = days => axios(serverUrl + '/member/profit/getDetailData?days=' + days)\r\n\r\n/* 提交订单 */\r\nexport const confirmOrder = (obj) => axios.post(serverUrl + '/order/addOrder', obj)\r\n/* 订单列表  */\r\nexport const getOrderList = (orderStatus,pageNum,pageSize,startTime,endTime) => axios.post(serverUrl + '/order/getOrderList',qs.stringify({\r\n  orderStatus: orderStatus,\r\n  pageNum: pageNum ||1,\r\n  pageSize: pageSize || 15,\r\n  startTime: startTime,\r\n  endTime: endTime,\r\n}))\r\n/* 收藏商家  */\r\nexport const addCollectStore = storeId => axios(serverUrl + '/collect/store/' + storeId)\r\n/* 收藏商品  */\r\nexport const addCollectgood = skuId => axios(serverUrl + '/collect/product/' + skuId)\r\n// 我收藏的产品\r\nexport const getMyCollection = () => axios(serverUrl + '/collect/getMyCollectProduct')\r\n/* 我的收藏的商家  */\r\nexport const getMyCollectStore = () => axios(serverUrl + '/collect/getMyCollectStore')\r\n/* 取消收藏 */\r\nexport const cancelMyCollect = (collectId) => axios.post(serverUrl + '/collect/cancel',qs.stringify({\r\n  collectId: collectId\r\n}))\r\n/* 搜索商品 */\r\nexport const getProductLikeName = (name) => axios.post(serverUrl + '/product/getProductLikeName' , qs.stringify({\r\n  name: name\r\n}))\r\n/* 搜索商家  */\r\nexport const getStoreLikeName = (name) => axios.post(serverUrl + '/store/getStoreLikeName' , qs.stringify({\r\n  name: name\r\n}))\r\n/* 查看订单详情*/\r\nexport const getOrder = orderNo => axios(serverUrl + '/order/getOrder/' + orderNo)\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/getData.js","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/model/mixin/makeStyleMapper.js\n// module id = j8iE\n// module chunks = 0","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/animation/Clip.js\n// module id = j9yU\n// module chunks = 0","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/contain/arc.js\n// module id = k78g\n// module chunks = 0","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/shape/Ring.js\n// module id = k9lX\n// module chunks = 0","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/model/mixin/lineStyle.js\n// module id = kHI7\n// module chunks = 0","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.5.1@core-js/library/modules/_dom-create.js\n// module id = l3hl\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/contain/quadratic.js\n// module id = lIfk\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.5.1@core-js/library/modules/_global.js\n// module id = lSMs\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_babel-runtime@6.26.0@babel-runtime/core-js/object/define-property.js\n// module id = liLe\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/core/env.js\n// module id = mUcc\n// module chunks = 0","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/scale/Log.js\n// module id = mmx0\n// module chunks = 0","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/chart/line/LineView.js\n// module id = mt7H\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/chart/line.js\n// module id = oZX5\n// module chunks = 0","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/layout/points.js\n// module id = pLHs\n// module chunks = 0","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/core/log.js\n// module id = ptTv\n// module chunks = 0","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.5.1@core-js/library/modules/_hide.js\n// module id = q1/O\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/contain/windingLine.js\n// module id = q7n9\n// module chunks = 0","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = qEZ+\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n        var idx = {left: 0, right: 1, top: 0, bottom: 1, onZero: 2};\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posBound = axisDim === 'x'\n            ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset]\n            : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n        if (axis.onZero) {\n            var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n            var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n            posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0],\n            axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = qeVC\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@2.1.2@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-43b3fa9d\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/selector?type=styles&index=0!./myEarnings.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/selector?type=script&index=0!./myEarnings.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-43b3fa9d\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/selector?type=template&index=0!./myEarnings.vue\"\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/page/myEarnings/myEarnings.vue\n// module id = qq5e\n// module chunks = 0","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/Pattern.js\n// module id = rN8j\n// module chunks = 0","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/tool/transformPath.js\n// module id = rhuR\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemLabelModel = labelModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemLabelModel = new Model(\n                        categoryData[tickVal].textStyle, labelModel, axisModel.ecModel\n                    );\n                }\n\n                var textColor = itemLabelModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                graphic.setTextStyle(textEl.style, itemLabelModel, {\n                    text: labels[index],\n                    textAlign: itemLabelModel.getShallow('align', true)\n                        || labelLayout.textAlign,\n                    textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true)\n                        || itemLabelModel.getShallow('baseline', true)\n                        || labelLayout.textVerticalAlign,\n                    textFill: typeof textColor === 'function'\n                        ? textColor(\n                            // (1) In category axis with data zoom, tick is not the original\n                            // index of axis.data. So tick should not be exposed to user\n                            // in category axis.\n                            // (2) Compatible with previous version, which always returns labelStr.\n                            // But in interval scale labelStr is like '223,445', which maked\n                            // user repalce ','. So we modify it to return original val but remain\n                            // it as 'string' to avoid error in replacing.\n                            axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                            index\n                        )\n                        : textColor\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            // FIXME\n            // truncate rich text? (consider performance)\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            graphic.setTextStyle(textEl.style, textStyleModel, {\n                text: truncatedText,\n                textFont: textFont,\n                textFill: textStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color'),\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.textVerticalAlign\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/axis/AxisBuilder.js\n// module id = sCIY\n// module chunks = 0","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n            this.ctx.__currentValues = {};\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n            this.ctxBack.__currentValues = {};\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/Layer.js\n// module id = sIBF\n// module chunks = 0","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/container/Group.js\n// module id = sugb\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis\n                && min != null\n                && min !== 'dataMin'\n                && typeof min !== 'function'\n                && !zrUtil.eqNaN(min)\n            ) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis\n                && max != null\n                && max !== 'dataMax'\n                && typeof max !== 'function'\n                && !zrUtil.eqNaN(max)\n            ) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/coord/axisModelCommonMixin.js\n// module id = tiCr\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.5.1@core-js/library/modules/_ctx.js\n// module id = tjS7\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var AxisView = require('./AxisView');\n    var cartesianAxisHelper = require('./cartesianAxisHelper');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/axis/CartesianAxisView.js\n// module id = tpPu\n// module chunks = 0","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @param {number} [maxInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval, maxInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        if (maxInterval != null && interval > maxInterval) {\n            interval = result.interval = maxInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/scale/helper.js\n// module id = uqT/\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.5.1@core-js/library/fn/object/define-property.js\n// module id = uwuJ\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/chart/line/LineSeries.js\n// module id = v3dR\n// module chunks = 0","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/coord/axisModelCreator.js\n// module id = vOUV\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/_css-loader@0.28.7@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".chart{width:100%;height:32.68%}.chart,.details-list{background-color:#fff}.details-list{margin-top:.05rem;height:53%;overflow:auto}.details-list:first-child,.details-list li{display:-webkit-box;display:-ms-flexbox;display:flex;border-bottom:.01rem solid rgba(0,0,0,.1)}.details-list li>span{line-height:.4rem;text-align:center;display:inline-block;-webkit-box-flex:1;-ms-flex:1;flex:1}.details-type{-webkit-box-flex:2!important;-ms-flex:2!important;flex:2!important;padding-left:.15rem}.details-type,.item-type{text-align:left!important}.item-type{color:#333;display:block!important;line-height:.15rem!important}.item-balance{color:#ff8b20}.type-date{-webkit-box-flex:2;-ms-flex:2;flex:2;height:.54rem;padding:.12rem 0 0 .15rem}.type-date>span{font-size:.12rm}\", \"\", {\"version\":3,\"sources\":[\"D:/Git/hi_life/src/page/myEarnings/myEarnings.vue\"],\"names\":[],\"mappings\":\"AACA,OACE,WAAY,AACZ,aAAe,CAEhB,AACD,qBAFE,qBAAwB,CAOzB,AALD,cAEE,kBAAmB,AACnB,WAAY,AACZ,aAAe,CAChB,AAOD,2CACE,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,yCAA8C,CAC/C,AACD,sBACE,kBAAmB,AACnB,kBAAmB,AACnB,qBAAsB,AACtB,mBAAoB,AAChB,WAAY,AACR,MAAQ,CACjB,AACD,cAEE,6BAA8B,AAC1B,qBAAsB,AAClB,iBAAkB,AAC1B,mBAAqB,CACtB,AACD,yBANE,yBAA2B,CAW5B,AALD,WACE,WAAY,AACZ,wBAAyB,AAEzB,4BAA8B,CAC/B,AACD,cACE,aAAe,CAChB,AACD,WACE,mBAAoB,AAChB,WAAY,AACR,OAAQ,AAChB,cAAe,AACf,yBAAgC,CACjC,AACD,gBACE,eAAiB,CAClB\",\"file\":\"myEarnings.vue\",\"sourcesContent\":[\"\\n.chart {\\n  width: 100%;\\n  height: 32.68%;\\n  background-color: white;\\n}\\n.details-list {\\n  background-color: white;\\n  margin-top: .05rem;\\n  height: 53%;\\n  overflow: auto;\\n}\\n.details-list:first-child {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  border-bottom: .01rem solid rgba(0, 0, 0, .1);\\n}\\n.details-list li {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  border-bottom: .01rem solid rgba(0, 0, 0, .1);\\n}\\n.details-list li>span {\\n  line-height: .4rem;\\n  text-align: center;\\n  display: inline-block;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n}\\n.details-type {\\n  text-align: left!important;\\n  -webkit-box-flex: 2!important;\\n      -ms-flex: 2!important;\\n          flex: 2!important;\\n  padding-left: .15rem;\\n}\\n.item-type {\\n  color: #333;\\n  display: block!important;\\n  text-align: left!important;\\n  line-height: .15rem!important;\\n}\\n.item-balance {\\n  color: #ff8b20;\\n}\\n.type-date {\\n  -webkit-box-flex: 2;\\n      -ms-flex: 2;\\n          flex: 2;\\n  height: .54rem;\\n  padding: .12rem 0 .0rem 0.15rem;\\n}\\n.type-date>span {\\n  font-size: .12rm;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_css-loader@0.28.7@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/_vue-loader@13.0.4@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-43b3fa9d\",\"scoped\":false,\"hasInlineConfig\":false}!./~/_vue-loader@13.0.4@vue-loader/lib/selector.js?type=styles&index=0!./src/page/myEarnings/myEarnings.vue\n// module id = vkao\n// module chunks = 0","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/shape/Arc.js\n// module id = vmYa\n// module chunks = 0","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/core/GestureMgr.js\n// module id = wKpZ\n// module chunks = 0","\n\n    var textContain = require('../../contain/text');\n    var util = require('../../core/util');\n    var roundRectHelper = require('./roundRect');\n    var imageHelper = require('./image');\n\n    var retrieve3 = util.retrieve3;\n    var retrieve2 = util.retrieve2;\n\n    // TODO: Have not support 'start', 'end' yet.\n    var VALID_TEXT_ALIGN = {left: 1, right: 1, center: 1};\n    var VALID_TEXT_VERTICAL_ALIGN = {top: 1, bottom: 1, middle: 1};\n\n    var helper = {};\n\n    /**\n     * @param {module:zrender/graphic/Style} style\n     * @return {module:zrender/graphic/Style} The input style.\n     */\n    helper.normalizeTextStyle = function (style) {\n        normalizeStyle(style);\n        util.each(style.rich, normalizeStyle);\n        return style;\n    };\n\n    function normalizeStyle(style) {\n        if (style) {\n\n            style.font = textContain.makeFont(style);\n\n            var textAlign = style.textAlign;\n            textAlign === 'middle' && (textAlign = 'center');\n            style.textAlign = (\n                textAlign == null || VALID_TEXT_ALIGN[textAlign]\n            ) ? textAlign : 'left';\n\n            // Compatible with textBaseline.\n            var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n            textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n            style.textVerticalAlign = (\n                textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign]\n            ) ? textVerticalAlign : 'top';\n\n            var textPadding = style.textPadding;\n            if (textPadding) {\n                style.textPadding = util.normalizeCssArray(style.textPadding);\n            }\n        }\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {string} text\n     * @param {module:zrender/graphic/Style} style\n     * @param {Object|boolean} [rect] {x, y, width, height}\n     *                  If set false, rect text is not used.\n     */\n    helper.renderText = function (hostEl, ctx, text, style, rect) {\n        style.rich\n            ? renderRichText(hostEl, ctx, text, style, rect)\n            : renderPlainText(hostEl, ctx, text, style, rect);\n    };\n\n    function renderPlainText(hostEl, ctx, text, style, rect) {\n        var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n\n        var textPadding = style.textPadding;\n\n        var contentBlock = hostEl.__textCotentBlock;\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(\n                text, font, textPadding, style.truncate\n            );\n        }\n\n        var outerHeight = contentBlock.outerHeight;\n\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var textX = baseX;\n        var textY = boxY;\n\n        var needDrawBg = needDrawBackground(style);\n        if (needDrawBg || textPadding) {\n            // Consider performance, do not call getTextWidth util necessary.\n            var textWidth = textContain.getWidth(text, font);\n            var outerWidth = textWidth;\n            textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n            var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\n            needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n            if (textPadding) {\n                textX = getTextXForPadding(baseX, textAlign, textPadding);\n                textY += textPadding[0];\n            }\n        }\n\n        setCtx(ctx, 'textAlign', textAlign || 'left');\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n        setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0);\n\n        // `textBaseline` is set as 'middle'.\n        textY += lineHeight / 2;\n\n        var textLineWidth = style.textLineWidth;\n        var textStroke = getStroke(style.textStroke, textLineWidth);\n        var textFill = getFill(style.textFill);\n\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n        }\n\n        for (var i = 0; i < textLines.length; i++) {\n            // Fill after stroke so the outline will not cover the main part.\n            textStroke && ctx.strokeText(textLines[i], textX, textY);\n            textFill && ctx.fillText(textLines[i], textX, textY);\n            textY += lineHeight;\n        }\n    }\n\n    function renderRichText(hostEl, ctx, text, style, rect) {\n        var contentBlock = hostEl.__textCotentBlock;\n\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n        }\n\n        drawRichText(hostEl, ctx, contentBlock, style, rect);\n    }\n\n    function drawRichText(hostEl, ctx, contentBlock, style, rect) {\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.textPadding;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n\n        needDrawBackground(style) && drawBackground(\n            hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight\n        );\n\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var usedWidth = line.width;\n\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token;\n\n            while (\n                leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n                usedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            while (\n                rightIndex >= 0\n                && (token = tokens[rightIndex], token.textAlign === 'right')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n                usedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n\n            // The other tokens are placed as textAlign 'center' if there is enough space.\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                // Consider width specified by user, use 'center' rather than 'left'.\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            lineTop += lineHeight;\n        }\n    }\n\n    function applyTextRotation(ctx, style, rect, x, y) {\n        // textRotation only apply in RectText.\n        if (rect && style.textRotation) {\n            var origin = style.textOrigin;\n            if (origin === 'center') {\n                x = rect.width / 2 + rect.x;\n                y = rect.height / 2 + rect.y;\n            }\n            else if (origin) {\n                x = origin[0] + rect.x;\n                y = origin[1] + rect.y;\n            }\n\n            ctx.translate(x, y);\n            // Positive: anticlockwise\n            ctx.rotate(-style.textRotation);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    function placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n        var tokenStyle = style.rich[token.styleName] || {};\n\n        // 'ctx.textBaseline' is always set as 'middle', for sake of\n        // the bias of \"Microsoft YaHei\".\n        var textVerticalAlign = token.textVerticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (textVerticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n\n        !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(\n            hostEl,\n            ctx,\n            tokenStyle,\n            textAlign === 'right'\n                ? x - token.width\n                : textAlign === 'center'\n                ? x - token.width / 2\n                : x,\n            y - token.height / 2,\n            token.width,\n            token.height\n        );\n\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n        }\n\n        setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n        setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n        setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n\n        setCtx(ctx, 'textAlign', textAlign);\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n\n        var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textLineWidth);\n        var textFill = getFill(tokenStyle.textFill || style.textFill);\n        var textLineWidth = retrieve2(tokenStyle.textLineWidth, style.textLineWidth);\n\n        // Fill after stroke so the outline will not cover the main part.\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n            ctx.strokeText(token.text, x, y);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n            ctx.fillText(token.text, x, y);\n        }\n    }\n\n    function needDrawBackground(style) {\n        return style.textBackgroundColor\n            || (style.textBorderWidth && style.textBorderColor);\n    }\n\n    // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n    // shape: {x, y, width, height}\n    function drawBackground(hostEl, ctx, style, x, y, width, height) {\n        var textBackgroundColor = style.textBackgroundColor;\n        var textBorderWidth = style.textBorderWidth;\n        var textBorderColor = style.textBorderColor;\n        var isPlainBg = util.isString(textBackgroundColor);\n\n        setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n        if (isPlainBg || (textBorderWidth && textBorderColor)) {\n            ctx.beginPath();\n            var textBorderRadius = style.textBorderRadius;\n            if (!textBorderRadius) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, {\n                    x: x, y: y, width: width, height: height, r: textBorderRadius\n                });\n            }\n            ctx.closePath();\n        }\n\n        if (isPlainBg) {\n            setCtx(ctx, 'fillStyle', textBackgroundColor);\n            ctx.fill();\n        }\n        else if (util.isObject(textBackgroundColor)) {\n            var image = textBackgroundColor.image;\n\n            image = imageHelper.createOrUpdateImage(\n                image, null, hostEl, onBgImageLoaded, textBackgroundColor\n            );\n            if (image && imageHelper.isImageReady(image)) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n\n        if (textBorderWidth && textBorderColor) {\n            setCtx(ctx, 'lineWidth', textBorderWidth);\n            setCtx(ctx, 'strokeStyle', textBorderColor);\n            ctx.stroke();\n        }\n    }\n\n    function onBgImageLoaded(image, textBackgroundColor) {\n        // Replace image, so that `contain/text.js#parseRichText`\n        // will get correct result in next tick.\n        textBackgroundColor.image = image;\n    }\n\n    function getBoxPosition(blockHeiht, style, rect) {\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.textAlign;\n        var textVerticalAlign = style.textVerticalAlign;\n\n        // Text position represented by coord\n        if (rect) {\n            var textPosition = style.textPosition;\n            if (textPosition instanceof Array) {\n                // Percent\n                baseX = rect.x + parsePercent(textPosition[0], rect.width);\n                baseY = rect.y + parsePercent(textPosition[1], rect.height);\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, style.textDistance\n                );\n                baseX = res.x;\n                baseY = res.y;\n                // Default align and baseline when has textPosition\n                textAlign = textAlign || res.textAlign;\n                textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n            }\n\n            // textOffset is only support in RectText, otherwise\n            // we have to adjust boundingRect for textOffset.\n            var textOffset = style.textOffset;\n            if (textOffset) {\n                baseX += textOffset[0];\n                baseY += textOffset[1];\n            }\n        }\n\n        return {\n            baseX: baseX,\n            baseY: baseY,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function setCtx(ctx, prop, value) {\n        // FIXME ??? performance try\n        // if (ctx.__currentValues[prop] !== value) {\n            ctx[prop] = ctx.__currentValues[prop] = value;\n        // }\n        return ctx[prop];\n    }\n\n    /**\n     * @param {string} [stroke] If specified, do not check style.textStroke.\n     * @param {string} [lineWidth] If specified, do not check style.textStroke.\n     * @param {number} style\n     */\n    var getStroke = helper.getStroke = function (stroke, lineWidth) {\n        return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n    };\n\n    var getFill = helper.getFill = function (fill) {\n        return (fill == null || fill === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n    };\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    function getTextXForPadding(x, textAlign, textPadding) {\n        return textAlign === 'right'\n            ? (x - textPadding[1])\n            : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n    }\n\n    /**\n     * @param {string} text\n     * @param {module:zrender/Style} style\n     * @return {boolean}\n     */\n    helper.needDrawText = function (text, style) {\n        return text != null\n            && (text\n                || style.textBackgroundColor\n                || (style.textBorderWidth && style.textBorderColor)\n                || style.textPadding\n            );\n    };\n\n    module.exports = helper;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/helper/text.js\n// module id = wrtm\n// module chunks = 0","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_core-js@2.5.1@core-js/library/modules/_a-function.js\n// module id = x8DJ\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    /**\n     * @param {Array} oldArr\n     * @param {Array} newArr\n     * @param {Function} oldKeyGetter\n     * @param {Function} newKeyGetter\n     * @param {Object} [context] Can be visited by this.context in callback.\n     */\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\n        this.context = context;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/data/DataDiffer.js\n// module id = xHSo\n// module chunks = 0","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/core/PathProxy.js\n// module id = xJeg\n// module chunks = 0","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder);\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function parseObjectRecursive(chain, val, options) {\n    if (!chain.length) {\n        return val;\n    }\n\n    var root = chain.shift();\n\n    var obj;\n    if (root === '[]') {\n        obj = [];\n        obj = obj.concat(parseObject(chain, val, options));\n    } else {\n        obj = options.plainObjects ? Object.create(null) : {};\n        var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n        var index = parseInt(cleanRoot, 10);\n        if (\n            !isNaN(index)\n            && root !== cleanRoot\n            && String(index) === cleanRoot\n            && index >= 0\n            && (options.parseArrays && index <= options.arrayLimit)\n        ) {\n            obj = [];\n            obj[index] = parseObject(chain, val, options);\n        } else {\n            obj[cleanRoot] = parseObject(chain, val, options);\n        }\n    }\n\n    return obj;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.ignoreQueryPrefix = options.ignoreQueryPrefix === true;\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_qs@6.5.0@qs/lib/parse.js\n// module id = xLYh\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var axisLabelModel = axisModel.getModel('axisLabel');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = axisLabelModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        each(axesMap.x, function (xAxis) {\n            fixAxisOnZero(axesMap, 'y', xAxis);\n        });\n        each(axesMap.y, function (yAxis) {\n            fixAxisOnZero(axesMap, 'x', yAxis);\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    function fixAxisOnZero(axesMap, otherAxisDim, axis) {\n        // onZero can not be enabled in these two situations:\n        // 1. When any other axis is a category axis.\n        // 2. When no axis is cross 0 point.\n        var axes = axesMap[otherAxisDim];\n\n        if (!axis.onZero) {\n            return;\n        }\n\n        var onZeroAxisIndex = axis.onZeroAxisIndex;\n\n        // If target axis is specified.\n        if (onZeroAxisIndex != null) {\n            var otherAxis = axes[onZeroAxisIndex];\n            if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n                axis.onZero = false;\n            }\n            return;\n        }\n\n        for (var idx in axes) {\n            if (axes.hasOwnProperty(idx)) {\n                var otherAxis = axes[idx];\n                if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n                    onZeroAxisIndex = +idx;\n                    break;\n                }\n            }\n        }\n\n        if (onZeroAxisIndex == null) {\n            axis.onZero = false;\n        }\n        axis.onZeroAxisIndex = onZeroAxisIndex;\n    }\n\n    function canNotOnZeroToAxis(axis) {\n        return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n    }\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {number} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n                axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/coord/cartesian/Grid.js\n// module id = y7Fz\n// module chunks = 0","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/processor/dataSample.js\n// module id = yZNC\n// module chunks = 0","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/shape/Polygon.js\n// module id = yh7w\n// module chunks = 0","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textHelper = require('../helper/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext2D} ctx\n         * @param  {Object} rect Displayable rect\n         */\n        drawRectText: function (ctx, rect) {\n            var style = this.style;\n\n            rect = style.textRect || rect;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.transformText) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // transformText and textRotation can not be used at the same time.\n            textHelper.renderText(this, ctx, text, style, rect);\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/mixin/RectText.js\n// module id = zM+A\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = graphic.createIcon(\n                    handleModel.get('icon'), \n                    {\n                        cursor: 'move',\n                        draggable: true,\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                        drift: bind(this._onHandleDragMove, this),\n                        ondragend: bind(this._onHandleDragEnd, this)\n                    }\n                );\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals = equals && propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = zbFj\n// module chunks = 0","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.6.1@zrender/lib/graphic/helper/roundRect.js\n// module id = zoFB\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.7.1@echarts/lib/ExtensionAPI.js\n// module id = zrBk\n// module chunks = 0"],"sourceRoot":""}